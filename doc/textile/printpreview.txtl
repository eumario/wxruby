h1(#wxprintpreview). Wx::PrintPreview

Objects of this class manage the print preview process. The object is passed
a Printout object, and the PrintPreview object itself is passed to
a PreviewFrame object. Previewing is started by initializing and showing
the preview frame. Unlike Printer::Print, flow of control returns to the application
immediately after the frame is shown.

h2. Derived from

"Object":object.html

h2. See also

Printing framework overviewprintingoverview, "PrinterDC":printerdc.html, "PrintDialog":printdialog.html, "Printout":printout.html, "Printer":printer.html, "PreviewCanvas":previewcanvas.html, "PreviewControlBar":previewcontrolbar.html, "PreviewFrame":previewframe.html.

<div id="methods">

h2. Methods

* "PrintPreview.new":#PrintPreview_new
* "PrintPreview#get_canvas":#PrintPreview_getcanvas
* "PrintPreview#get_current_page":#PrintPreview_getcurrentpage
* "PrintPreview#get_frame":#PrintPreview_getframe
* "PrintPreview#get_max_page":#PrintPreview_getmaxpage
* "PrintPreview#get_min_page":#PrintPreview_getminpage
* "PrintPreview#get_printout":#PrintPreview_getprintout
* "PrintPreview#get_printout_for_printing":#PrintPreview_getprintoutforprinting
* "PrintPreview#is_ok":#PrintPreview_ok
* "PrintPreview#paint_page":#PrintPreview_paintpage
* "PrintPreview#print":#PrintPreview_print
* "PrintPreview#render_page":#PrintPreview_renderpage
* "PrintPreview#set_canvas":#PrintPreview_setcanvas
* "PrintPreview#set_current_page":#PrintPreview_setcurrentpage
* "PrintPreview#set_frame":#PrintPreview_setframe
* "PrintPreview#set_printout":#PrintPreview_setprintout
* "PrintPreview#set_zoom":#PrintPreview_setzoom

</div>



h3(#PrintPreview_new). PrintPreview.new

  *PrintPreview.new*(%(arg-type)"Printout":printout.html% printout,  %(arg-type)"Printout":printout.html% printoutForPrinting, 
                  %(arg-type)"PrintData":printdata.html% data=NULL)

Constructor. Pass a printout object, an optional printout object to be
used for actual printing, and the address of an optional
block of printer data, which will be copied to the print preview object's
print data.

If _printoutForPrinting_ is non-NULL, a *Print...* button will be placed on the
preview frame so that the user can print directly from the preview interface.

Do not explicitly delete the printout objects once this destructor has been
called, since they will be deleted in the PrintPreview constructor.
The same does not apply to the _data_ argument.

Test the Ok member to check whether the PrintPreview object was created correctly.
Ok could return false if there was a problem initializing the printer device context
(current printer not set, for example).


  *destructor*()

Destructor. Deletes both print preview objects, so do not destroy these objects
in your application.


h3(#PrintPreview_getcanvas). PrintPreview#get_canvas

 "PreviewCanvas* ":previewcanvas* .html *get_canvas*()

Gets the preview window used for displaying the print preview image.


h3(#PrintPreview_getcurrentpage). PrintPreview#get_current_page

 Integer *get_current_page*()

Gets the page currently being previewed.


h3(#PrintPreview_getframe). PrintPreview#get_frame

 "Frame":frame.html *get_frame*()

Gets the frame used for displaying the print preview canvas
and control bar.


h3(#PrintPreview_getmaxpage). PrintPreview#get_max_page

 Integer *get_max_page*()

Returns the maximum page number.


h3(#PrintPreview_getminpage). PrintPreview#get_min_page

 Integer *get_min_page*()

Returns the minimum page number.


h3(#PrintPreview_getprintout). PrintPreview#get_printout

 "Printout":printout.html *get_printout*()

Gets the preview printout object associated with the PrintPreview object.


h3(#PrintPreview_getprintoutforprinting). PrintPreview#get_printout_for_printing

 "Printout":printout.html *get_printout_for_printing*()

Gets the printout object to be used for printing from within the preview interface,
or NULL if none exists.


h3(#PrintPreview_isok). PrintPreview#is_ok

 Boolean *is_ok*()

Returns true if the PrintPreview is valid, false otherwise. It could return false if there was a
problem initializing the printer device context (current printer not set, for example).


h3(#PrintPreview_paintpage). PrintPreview#paint_page

 Boolean *paint_page*(%(arg-type)"PreviewCanvas":previewcanvas.html% canvas,  %(arg-type)"DC":dc.html% dc)

This refreshes the preview window with the preview image.
It must be called from the preview window's OnPaint member.

The implementation simply blits the preview bitmap onto
the canvas, creating a new preview bitmap if none exists.


h3(#PrintPreview_print). PrintPreview#print

 Boolean *print*(%(arg-type)Boolean% prompt)

Invokes the print process using the second Printout object
supplied in the PrintPreview constructor.
Will normally be called by the *Print...* panel item on the
preview frame's control bar.

Returns false in case of error -- call
"Printer#get_last_error":printer.html#Printer_getlasterror to get detailed
information about the kind of the error.


h3(#PrintPreview_renderpage). PrintPreview#render_page

 Boolean *render_page*(%(arg-type)Integer% pageNum)

Renders a page into a MemoryDC. Used internally by PrintPreview.


h3(#PrintPreview_setcanvas). PrintPreview#set_canvas

  *set_canvas*(%(arg-type)"PreviewCanvas":previewcanvas.html% window)

Sets the window to be used for displaying the print preview image.


h3(#PrintPreview_setcurrentpage). PrintPreview#set_current_page

  *set_current_page*(%(arg-type)Integer% pageNum)

Sets the current page to be previewed.


h3(#PrintPreview_setframe). PrintPreview#set_frame

  *set_frame*(%(arg-type)"Frame":frame.html% frame)

Sets the frame to be used for displaying the print preview canvas
and control bar.


h3(#PrintPreview_setprintout). PrintPreview#set_printout

  *set_printout*(%(arg-type)"Printout":printout.html% printout)

Associates a printout object with the PrintPreview object.


h3(#PrintPreview_setzoom). PrintPreview#set_zoom

  *set_zoom*(%(arg-type)Integer% percent)

Sets the percentage preview zoom, and refreshes the preview canvas
accordingly.

