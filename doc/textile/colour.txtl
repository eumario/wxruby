h1(#wxcolour). Wx::Colour

A colour is an object representing a combination of Red, Green, and Blue (RGB) intensity values,
and is used to determine drawing colours. See the
entry for "ColourDatabase":colourdatabase.html for how a pointer to a predefined,
named colour may be returned instead of creating a new colour.

Valid RGB values are in the range 0 to 255.

You can retrieve the current system colour settings with "SystemSettings":systemsettings.html.

h2. Derived from

"Object":object.html

h2. Predefined objects

Objects:

*NullColour*

Pointers:

*BLACK

WHITE\\
RED\\
BLUE\\
GREEN\\
CYAN\\
LIGHT_GREY*

h2. See also

"ColourDatabase":colourdatabase.html, "Pen":pen.html, "Brush":brush.html, "ColourDialog":colourdialog.html, "SystemSettings":systemsettings.html

<div id="methods">

h2. Methods

* "Colour.new":#Colour_new
* "Colour#blue":#Colour_blue
* "Colour#get_pixel":#Colour_getpixel
* "Colour#green":#Colour_green
* "Colour#ok":#Colour_ok
* "Colour#red":#Colour_red
* "Colour#set":#Colour_set

</div>



h3(#Colour_constr). Colour.new

  *Colour.new*(%(arg-type)Integer% red,  %(arg-type)Integer% green,  %(arg-type)Integer% blue)

Constructs a colour from red, green and blue values.

  *Colour.new*(%(arg-type)String% colourNname)

Constructs a colour object using a colour name
listed in *TheColourDatabase*.

  *Colour.new*(%(arg-type)Colour% colour)

Copy constructor.

h4. Parameters

* _red_ The red value.
* _green_ The green value.
* _blue_ The blue value.
* _colourName_ The colour name.
* _colour_ The colour to copy.

h4. See also

"ColourDatabase":colourdatabase.html





h3(#Colour_blue). Colour#blue

 Integer *blue*()

Returns the blue intensity.


h3(#Colour_getpixel). Colour#get_pixel

 Integer *get_pixel*()

Returns a pixel value which is platform-dependent. On Windows, a COLORREF is returned.
On X, an allocated pixel value is returned.

-1 is returned if the pixel is invalid (on X, unallocated).


h3(#Colour_green). Colour#green

 Integer *green*()

Returns the green intensity.


h3(#Colour_ok). Colour#ok

 Boolean *ok*()

Returns  if the colour object is valid (the colour has been initialised with RGB values).


h3(#Colour_red). Colour#red

 Integer *red*()

Returns the red intensity.


h3(#Colour_set). Colour#set

  *set*(%(arg-type)Integer% red,  %(arg-type)Integer% green,  %(arg-type)Integer% blue)

Sets the RGB intensity values.


h3(#Colour_assign). Colour#=

 "Colour":colour.html *operator $=$*(%(arg-type)Colour% colour)

Assignment operator, taking another colour object.

 "Colour":colour.html *operator $=$*(%(arg-type)String% colourName)

Assignment operator, using a colour name to be found in the colour database.

h4. See also

"ColourDatabase":colourdatabase.html


h3(#Colour_equality). Colour#==

 Boolean *operator $==$*(%(arg-type)Colour% colour)

Tests the equality of two colours by comparing individual red, green blue colours.


h3(#Colour_inequality). Colour#!=

 Boolean *operator $!=$*(%(arg-type)Colour% colour)

Tests the inequality of two colours by comparing individual red, green blue colours.

