h1(#wxrichtexthtmlhandler). Wx::RichTextHTMLHandler

Handles HTML output (only) for "RichTextCtrl":richtextctrl.html content.

The most flexible way to use this class is to create a temporary object and call
its functions directly, rather than use "RichTextBuffer#save_file":richtextbuffer.html#RichTextBuffer_savefile or "RichTextCtrl#save_file":richtextctrl.html#RichTextCtrl_savefile.

Image handling requires a little extra work from the application, to choose an
appropriate image format for the target HTML viewer and to clean up the temporary images
later. If you are planning to load the HTML into a standard web browser, you can
specify the handler flag RICHTEXT_HANDLER_SAVE_IMAGES_TO_BASE64 (the default)
and no extra work is required: the images will be written with the HTML.

However, if you want HTML compatibility, you will need to use RICHTEXT_HANDLER_SAVE_IMAGES_TO_MEMORY
or RICHTEXT_HANDLER_SAVE_IMAGES_TO_FILES. In this case, you must either call "delete_temporary_images":#RichTextHTMLHandler_deletetemporaryimages before
the next load operation, or you must store the image
locations and delete them yourself when appropriate. You can call "get_temporary_image_locations":#RichTextHTMLHandler_gettemporaryimagelocations to
get the array of temporary image names.

h2. Handler flags

The following flags can be used with this handler, via
the handler's SetFlags function or the buffer or control's
SetHandlerFlags function:



|@RICHTEXT_HANDLER_SAVE_IMAGES_TO_MEMORY@|Images are saved to the memory filesystem: suitable for showing HTML windows.|
|@RICHTEXT_HANDLER_SAVE_IMAGES_TO_FILES@|Images are saved to temporary files: suitable for showing in HTML windows.|
|@RICHTEXT_HANDLER_SAVE_IMAGES_TO_BASE64@|Images are written with the HTML files in Base 64 format: suitable for showing in web browsers.|
|@RICHTEXT_HANDLER_NO_HEADER_FOOTER@|Don't include header and footer tags (HTML, HEAD, BODY), so that the HTML can be used as part of a larger document.|


h2. Derived from

"RichTextFileHandler":richtextfilehandler.html

h2. Data structures

<div id="methods">

h2. Methods

* "RichTextHTMLHandler.new":#RichTextHTMLHandler_new
* "RichTextHTMLHandler#clear_temporary_image_locations":#RichTextHTMLHandler_cleartemporaryimagelocations
* "RichTextHTMLHandler#delete_temporary_images":#RichTextHTMLHandler_deletetemporaryimages
* "RichTextHTMLHandler#do_save_file":#RichTextHTMLHandler_dosavefile
* "RichTextHTMLHandler#get_font_size_mapping":#RichTextHTMLHandler_getfontsizemapping
* "RichTextHTMLHandler#get_temp_dir":#RichTextHTMLHandler_gettempdir
* "RichTextHTMLHandler#get_temporary_image_locations":#RichTextHTMLHandler_gettemporaryimagelocations
* "RichTextHTMLHandler#set_file_counter":#RichTextHTMLHandler_setfilecounter
* "RichTextHTMLHandler#set_font_size_mapping":#RichTextHTMLHandler_setfontsizemapping
* "RichTextHTMLHandler#set_temp_dir":#RichTextHTMLHandler_settempdir
* "RichTextHTMLHandler#set_temporary_image_locations":#RichTextHTMLHandler_settemporaryimagelocations

</div>


h3(#RichTextHTMLHandler_wxrichtexthtmlhandler). RichTextHTMLHandler.new

  *RichTextHTMLHandler.new*(%(arg-type)String% name = T("HTML"),  %(arg-type)String% ext = T("html"), 
                          %(arg-type)Integer% type = RICHTEXT_TYPE_HTML)

Constructor.

h3(#RichTextHTMLHandler_cleartemporaryimagelocations). RichTextHTMLHandler#clear_temporary_image_locations

  *clear_temporary_image_locations*()

Clears the image locations generated by the last operation.

h3(#RichTextHTMLHandler_deletetemporaryimages). RichTextHTMLHandler#delete_temporary_images

 Boolean *delete_temporary_images*()

Deletes the in-memory or temporary files generated by the last operation.

 Boolean *delete_temporary_images*(%(arg-type)Integer% flags, 
                                 %(arg-type)"ArrayString":arraystring.html% imageLocations)

Delete the in-memory or temporary files generated by the last operation. This is a static
function that can be used to delete the saved locations from an earlier operation,
for example after the user has viewed the HTML file.

h3(#RichTextHTMLHandler_dosavefile). RichTextHTMLHandler#do_save_file

 Boolean *do_save_file*(%(arg-type)"RichTextBuffer":richtextbuffer.html% buffer, 
                      %(arg-type)"OutputStream":outputstream.html% stream)

Saves the buffer content to the HTML stream.

h3(#RichTextHTMLHandler_getfontsizemapping). RichTextHTMLHandler#get_font_size_mapping

 "ArrayInt":arrayint.html *get_font_size_mapping*()

Returns the mapping for converting point sizes to HTML font sizes.

h3(#RichTextHTMLHandler_gettempdir). RichTextHTMLHandler#get_temp_dir

 String *get_temp_dir*()

Returns the directory used to store temporary image files.

h3(#RichTextHTMLHandler_gettemporaryimagelocations). RichTextHTMLHandler#get_temporary_image_locations

 "ArrayString":arraystring.html *get_temporary_image_locations*()

Returns the image locations for the last operation.

h3(#RichTextHTMLHandler_setfilecounter). RichTextHTMLHandler#set_file_counter

  *set_file_counter*(%(arg-type)Integer% counter)

Reset the file counter, in case, for example, the same names are required each time

h3(#RichTextHTMLHandler_setfontsizemapping). RichTextHTMLHandler#set_font_size_mapping

  *set_font_size_mapping*(%(arg-type)"ArrayInt":arrayint.html% fontSizeMapping)

Sets the mapping for converting point sizes to HTML font sizes.
There should be 7 elements, one for each HTML font size, each element specifying the maximum point size for that
HTML font size.

For example:


     ArrayInt fontSizeMapping;
     fontSizeMapping.Add(7);
     fontSizeMapping.Add(9);
     fontSizeMapping.Add(11);
     fontSizeMapping.Add(12);
     fontSizeMapping.Add(14);
     fontSizeMapping.Add(22);
     fontSizeMapping.Add(100);
     
     htmlHandler.SetFontSizeMapping(fontSizeMapping);
 

h3(#RichTextHTMLHandler_settempdir). RichTextHTMLHandler#set_temp_dir

  *set_temp_dir*(%(arg-type)String% tempDir)

Sets the directory for storing temporary files. If empty, the system
temporary directory will be used.

h3(#RichTextHTMLHandler_settemporaryimagelocations). RichTextHTMLHandler#set_temporary_image_locations

  *set_temporary_image_locations*(%(arg-type)"ArrayString":arraystring.html% locations)

Sets the list of image locations generated by the last operation.

