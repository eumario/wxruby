// wxSashLayoutWindow.h
// This file was automatically generated
// by extractxml.rb, part of the wxRuby project
// Do not make changes directly to this file!

#if !defined(_wxSashLayoutWindow_h_)
#define _wxSashLayoutWindow_h_
class wxSashLayoutWindow : public wxSashWindow
{
public:
	/**
	 * \brief Default constructor. 
	*/

   wxSashLayoutWindow() ;
	/**
	 * \brief Constructs a sash layout window, which can be a child of a frame, dialog or any other non-control window. 
	 * \param wxSashLayoutWindow*  
	 * \param wxSashLayoutWindowID   
	 * \param const wxPoint&   
	 * \param const wxSize&   
	 * \param long   
	 * \param const wxString&   
	*/

   wxSashLayoutWindow(wxSashLayoutWindow*  parent , wxSashLayoutWindowID  id , const wxPoint&  pos = wxDefaultPosition, const wxSize&  size = wxDefaultSize, long  style = wxCLIP_CHILDREN, const wxString&  name = "layoutWindow") ;
	/**
	 * \brief Destructor. 
	*/

  virtual  ~wxSashLayoutWindow() ;
	/**
	 * \brief Returns the alignment of the window: one of wxLAYOUT_TOP, wxLAYOUT_LEFT, wxLAYOUT_RIGHT, wxLAYOUT_BOTTOM. 
	*/

  wxLayoutAlignment GetAlignment() const;
	/**
	 * \brief Returns the orientation of the window: one of wxLAYOUT_HORIZONTAL, wxLAYOUT_VERTICAL. 
	*/

  wxLayoutOrientation GetOrientation() const;
	/**
	 * \brief The default handler for the event that is generated by wxLayoutAlgorithm. The implementation
of this function calls wxCalculateLayoutEvent::SetRect to shrink the provided size according to
how much space this window takes up. For further details,
see   and  . 
	 * \param wxCalculateLayoutEvent&  
	*/

  virtual void OnCalculateLayout(wxCalculateLayoutEvent&  event ) ;
	/**
	 * \brief The default handler for the event that is generated by OnCalculateLayout to get
size, alignment and orientation information for the window. The implementation
of this function uses member variables as set by accessors called by the application.
For further details, see   and  . 
	 * \param wxQueryLayoutInfoEvent&  
	*/

  virtual void OnQueryLayoutInfo(wxQueryLayoutInfoEvent&  event ) ;
	/**
	 * \brief Sets the alignment of the window (which edge of the available parent client area the window
is attached to).   is one of wxLAYOUT_TOP, wxLAYOUT_LEFT, wxLAYOUT_RIGHT, wxLAYOUT_BOTTOM. 
	 * \param wxLayoutAlignment  
	*/

  void SetAlignment(wxLayoutAlignment  alignment ) ;
	/**
	 * \brief Sets the default dimensions of the window. The dimension other than the orientation will be fixed to this
value, and the orientation dimension will be ignored and the window stretched to fit the available space. 
	 * \param const wxSize&   
	*/

  void SetDefaultSize(const wxSize&  size ) ;
	/**
	 * \brief Sets the orientation of the window (the direction the window will stretch in, to fill the available
parent client area).   is one of wxLAYOUT_HORIZONTAL, wxLAYOUT_VERTICAL. 
	 * \param wxLayoutOrientation  
	*/

  void SetOrientation(wxLayoutOrientation  orientation ) ;
};


#endif
