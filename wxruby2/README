README for wxruby2
Version 0.0.33
2006-08-20

This is wxruby2, the second generation of wxRuby, a library 
that allows Ruby programs to use the wxWidgets GUI toolkit. 
It is released under a permissive MIT-style license
(see the LICENSE file for details).

*** NOTE ***
This version is VERY UNSTABLE. At least on some platforms, it 
crashes very often. Hopefully within a couple more releases 
it will be stable again (at least as good as it was in 0.0.30, 
if not better).
************

There are no binaries yet. You must build it from source.

For more details, see the project home page:
  http://wxruby.org/


------------------------USING WXRUBY---------------------------
INSTALLING:

Starting with the 1.9-alpha release, wxRuby is available as binary 
gems for MS Windows, Mac OS X, and Linux with GTK+ 2. We strongly 
recommend installing the gem rather than building from source.



REQUIREMENTS TO CREATE AND RUN WXRUBY APPS:

- Ruby 1.8
- MS Windows, Mac OS X, or Linux with GTK+ 2, 



SAMPLES:

There is a samples/ directory containing many small sample wxRuby apps 
that demonstrate how to use various classes. A few samples do not work 
across all platforms at this time.
	
The bigdemo sample is fairly comprehensive, but not all of the 
sections work on all platforms. 


WRITING YOUR OWN WXRUBY APP:

To use wxruby-swig in your app, use:
  require 'wx'
  
samples/minimal.rb can be used as a template for creating your 
own wxruby application.


DOCUMENTATION:

- wxRuby-specific API documentation can be found here:

    http://wxruby.org/doc/
	
  (Note: This documentation is auto-generated from the C++ wxWidgets 
   API docs. There are some broken links, and some sections which do 
   not apply to ruby. The documentation is continually being improved.)


- Tables summarizing which wx classes are and are not supported can 
  be found here:
  
    http://wxruby.org/wiki/wiki.pl?ClassesSupportedByCategory
	
- Most wxWidgets and wxPython tutorials and references can also be used, if 
  you remember that wxRuby uses ruby_style_naming for methods and variables 
  instead of MixedCase as used by wxWidgets.
  


API DIFFERENCES FROM WXWIDGETS:
- Since initialize is reserved in ruby, use SplitterWindow#init instead.
- Uninitialized client data will have the value (false), 
  not (nil). This is a change from wxRuby 0.3 and earlier.
- Many wx classes have not been wrapped because native ruby classes work 
  as well or better. These include wxDateTime, wxString, networking 
  classes, database classes.
- log_message and log_status take a single string parameter, 
  rather than a format string followed by additional values 
  to be inserted.
- ScreenDC extends DC on all platforms, unlike in C++ wx. 
  This means that you cannot override any virtual methods that were 
  defined in PaintDC or WindowDC in a ruby subclass of ScreenDC.
  [Need to verify if this is still true]
  
  


----------------------COMPILING WXRUBY--------------------------
REQUIREMENTS TO COMPILE/BUILD WXRUBY ITSELF
- rake
- SWIG 1.3.29 or later (NOTE: Earlier versions WILL NOT WORK!)
- wxWidgets 2.6.3 SDK


OBTAINING THE SOURCE:

No binary builds are available yet. 
Source code can be retrieved from CVS at:
  http://rubyforge.org/scm/?group_id=35
  

BUILDING:

From the top-level directory (typically wxruby-swig/), 
just start the rake build with the command:
  rake
  
There is no ./configure step, nor do you need to 
run ruby extconf.rb. 


INSTALLING THE LIBRARY:

You can install the library using:
  rake install
  
Note that on some systems you may need to be "root" to do this.
To manually install, copy all the files in the lib/ subdirectory 
to somewhere on your ruby library path, such as a ruby extensions 
directory.


PORTING TO OTHER PLATFORMS

You may need to edit the appropriate platform-dependent 
rake file if your system is not yet supported, or if it
is unusual. These files are found in the rake subdirectory:

  Mac OSX:              rakemacosx.rb
  MS Windows VC++:      rakemswin.rb
  MS Windows BC++:      rakebccwin.rb
  MS Windows MingGW:    rakemingw.rb
  MS Windows Cygwin:    rakecygwin.rb
  NetBSD:               rakenetbsd.rb
  Linux (GTK2):         rakelinux.rb

When editing a platform-dependent rakefile, you might 
merely need to set one or more of the following variables:
    $extra_cppflags
    $extra_ldflags
    $extra_objs
    $extra_libs


-----------------------------------------------------------

LEAD MAINTAINER:
  Kevin Smith
  http://qualitycode.com
  mailto:wxruby@qualitycode.com
