h1(#wxrichtextattr). Wx::RichTextAttr

RichTextAttr represents the character and paragraph attributes, or style,
for a range of text in a "RichTextCtrl":richtextctrl.html. This class
is specific to RichTextCtrl, although you can also use the
standard "TextAttr":textattr.html class with RichTextCtrl.

When setting up a RichTextAttr object, you can pass a bitlist mask to
"set_flags":#RichTextAttr_setflags to indicate which style elements
should be changed. As a convenience, when you call a setter such as
"set_font":#RichTextAttr_setfont, the relevant bit will be set. This
should cover most normal cases.

RichTextAttr stores attributes without a Font object, so is a more
efficient way to query styles than using a "TextAttr":textattr.html object.

h2. Derived from

No base class

h2. Constants

The following values can be passed to RichTextAttr::SetAlignment to determine
paragraph alignment.


     TEXT_ALIGNMENT_DEFAULT,
     TEXT_ALIGNMENT_LEFT,
     TEXT_ALIGNMENT_CENTRE,
     TEXT_ALIGNMENT_CENTER = TEXT_ALIGNMENT_CENTRE,
     TEXT_ALIGNMENT_RIGHT,
     TEXT_ALIGNMENT_JUSTIFIED

Of these, TEXT_ALIGNMENT_JUSTIFIED is unimplemented. In future
justification may be supported when printing or previewing, only.

The following values are passed in a bitlist to RichTextAttr::SetFlags
to determine what attributes will be considered when setting the
attributes for a text control.
 
 TEXT_ATTR_TEXT_COLOUR             
 TEXT_ATTR_BACKGROUND_COLOUR       
 TEXT_ATTR_FONT_FACE               
 TEXT_ATTR_FONT_SIZE               
 TEXT_ATTR_FONT_WEIGHT             
 TEXT_ATTR_FONT_ITALIC             
 TEXT_ATTR_FONT_UNDERLINE          
 TEXT_ATTR_FONT  # all font attributes: face, size, weight, italic, underline
 TEXT_ATTR_ALIGNMENT
 TEXT_ATTR_LEFT_INDENT
 TEXT_ATTR_RIGHT_INDENT
 TEXT_ATTR_TABS        
 
Extra formatting flags not in TextAttr
 
 TEXT_ATTR_PARA_SPACING_AFTER
 TEXT_ATTR_PARA_SPACING_BEFORE
 TEXT_ATTR_LINE_SPACING       
 TEXT_ATTR_CHARACTER_STYLE_NAME
 TEXT_ATTR_PARAGRAPH_STYLE_NAME
 TEXT_ATTR_LIST_STYLE_NAME
 TEXT_ATTR_BULLET_STYLE 
 TEXT_ATTR_BULLET_NUMBER
 TEXT_ATTR_BULLET_TEXT  
 TEXT_ATTR_BULLET_NAME  
 TEXT_ATTR_URL          
 TEXT_ATTR_PAGE_BREAK   
 TEXT_ATTR_EFFECTS      
 TEXT_ATTR_OUTLINE_LEVEL
 

The following styles can be passed to RichTextAttr#set_bullet_style


 TEXT_ATTR_BULLET_STYLE_NONE               
 TEXT_ATTR_BULLET_STYLE_ARABIC             
 TEXT_ATTR_BULLET_STYLE_LETTERS_UPPER      
 TEXT_ATTR_BULLET_STYLE_LETTERS_LOWER      
 TEXT_ATTR_BULLET_STYLE_ROMAN_UPPER        
 TEXT_ATTR_BULLET_STYLE_ROMAN_LOWER        
 TEXT_ATTR_BULLET_STYLE_SYMBOL             
 TEXT_ATTR_BULLET_STYLE_BITMAP             
 TEXT_ATTR_BULLET_STYLE_PARENTHESES        
 TEXT_ATTR_BULLET_STYLE_PERIOD             
 TEXT_ATTR_BULLET_STYLE_STANDARD           
 TEXT_ATTR_BULLET_STYLE_RIGHT_PARENTHESIS  
 TEXT_ATTR_BULLET_STYLE_OUTLINE       
 TEXT_ATTR_BULLET_STYLE_ALIGN_LEFT    
 TEXT_ATTR_BULLET_STYLE_ALIGN_RIGHT   
 TEXT_ATTR_BULLET_STYLE_ALIGN_CENTRE  
 


Of these, TEXT_ATTR_BULLET_STYLE_BITMAP is unimplemented.

The following constants can be passed to RichTextAttr::SetLineSpacing:



 TEXT_ATTR_LINE_SPACING_NORMAL         10
 TEXT_ATTR_LINE_SPACING_HALF           15
 TEXT_ATTR_LINE_SPACING_TWICE          20
 


The following styles can be passed to TextAttrEx::SetTextEffects:



 TEXT_ATTR_EFFECT_NONE    
 TEXT_ATTR_EFFECT_CAPITALS
 TEXT_ATTR_EFFECT_SMALL_CAPITALS
 TEXT_ATTR_EFFECT_STRIKETHROUGH
 TEXT_ATTR_EFFECT_DOUBLE_STRIKETHROUGH
 TEXT_ATTR_EFFECT_SHADOW              
 TEXT_ATTR_EFFECT_EMBOSS              
 TEXT_ATTR_EFFECT_OUTLINE             
 TEXT_ATTR_EFFECT_ENGRAVE             
 TEXT_ATTR_EFFECT_SUPERSCRIPT         
 TEXT_ATTR_EFFECT_SUBSCRIPT           
 


Of these, only TEXT_ATTR_EFFECT_CAPITALS and TEXT_ATTR_EFFECT_STRIKETHROUGH are implemented.

h2. See also

"TextAttr":textattr.html, "TextAttrEx":textattrex.html, "RichTextCtrl":richtextctrl.html

<div id="methods">

h2. Methods

* "RichTextAttr.new":#RichTextAttr_new
* "RichTextAttr#apply":#RichTextAttr_apply
* "RichTextAttr#combine":#RichTextAttr_combine
* "RichTextAttr#create_font":#RichTextAttr_createfont
* "RichTextAttr#get_alignment":#RichTextAttr_getalignment
* "RichTextAttr#get_background_colour":#RichTextAttr_getbackgroundcolour
* "RichTextAttr#get_bullet_font":#RichTextAttr_getbulletfont
* "RichTextAttr#get_bullet_name":#RichTextAttr_getbulletname
* "RichTextAttr#get_bullet_number":#RichTextAttr_getbulletnumber
* "RichTextAttr#get_bullet_style":#RichTextAttr_getbulletstyle
* "RichTextAttr#get_bullet_text":#RichTextAttr_getbullettext
* "RichTextAttr#get_character_style_name":#RichTextAttr_getcharacterstylename
* "RichTextAttr#get_flags":#RichTextAttr_getflags
* "RichTextAttr#get_font_attributes":#RichTextAttr_getfontattributes
* "RichTextAttr#get_font_face_name":#RichTextAttr_getfontfacename
* "RichTextAttr#get_font_size":#RichTextAttr_getfontsize
* "RichTextAttr#get_font_style":#RichTextAttr_getfontstyle
* "RichTextAttr#get_font_underlined":#RichTextAttr_getfontunderlined
* "RichTextAttr#get_font_weight":#RichTextAttr_getfontweight
* "RichTextAttr#get_left_indent":#RichTextAttr_getleftindent
* "RichTextAttr#get_left_sub_indent":#RichTextAttr_getleftsubindent
* "RichTextAttr#get_line_spacing":#RichTextAttr_getlinespacing
* "RichTextAttr#get_list_style_name":#RichTextAttr_getliststylename
* "RichTextAttr#get_outline_level":#RichTextAttr_getoutlinelevel
* "RichTextAttr#get_paragraph_spacing_after":#RichTextAttr_getparagraphspacingafter
* "RichTextAttr#get_paragraph_spacing_before":#RichTextAttr_getparagraphspacingbefore
* "RichTextAttr#get_paragraph_style_name":#RichTextAttr_getparagraphstylename
* "RichTextAttr#get_right_indent":#RichTextAttr_getrightindent
* "RichTextAttr#get_tabs":#RichTextAttr_gettabs
* "RichTextAttr#get_text_colour":#RichTextAttr_gettextcolour
* "RichTextAttr#get_text_effect_flags":#RichTextAttr_gettexteffectflags
* "RichTextAttr#get_text_effects":#RichTextAttr_gettexteffects
* "RichTextAttr#get_url":#RichTextAttr_geturl
* "RichTextAttr#has_alignment":#RichTextAttr_hasalignment
* "RichTextAttr#has_background_colour":#RichTextAttr_hasbackgroundcolour
* "RichTextAttr#has_bullet_name":#RichTextAttr_hasbulletname
* "RichTextAttr#has_bullet_number":#RichTextAttr_hasbulletnumber
* "RichTextAttr#has_bullet_style":#RichTextAttr_hasbulletstyle
* "RichTextAttr#has_bullet_text":#RichTextAttr_hasbullettext
* "RichTextAttr#has_character_style_name":#RichTextAttr_hascharacterstylename
* "RichTextAttr#has_font_face_name":#RichTextAttr_hasfontfacename
* "RichTextAttr#has_flag":#RichTextAttr_hasflag
* "RichTextAttr#has_font":#RichTextAttr_hasfont
* "RichTextAttr#has_font_italic":#RichTextAttr_hasfontitalic
* "RichTextAttr#has_left_indent":#RichTextAttr_hasleftindent
* "RichTextAttr#has_line_spacing":#RichTextAttr_haslinespacing
* "RichTextAttr#has_list_style_name":#RichTextAttr_hasliststylename
* "RichTextAttr#has_outline_level":#RichTextAttr_hasoutlinelevel
* "RichTextAttr#has_page_break":#RichTextAttr_haspagebreak
* "RichTextAttr#has_paragraph_spacing_after":#RichTextAttr_hasparagraphspacingafter
* "RichTextAttr#has_paragraph_spacing_before":#RichTextAttr_hasparagraphspacingbefore
* "RichTextAttr#has_paragraph_style_name":#RichTextAttr_hasparagraphstylename
* "RichTextAttr#has_right_indent":#RichTextAttr_hasrightindent
* "RichTextAttr#has_font_size":#RichTextAttr_hasfontsize
* "RichTextAttr#has_tabs":#RichTextAttr_hastabs
* "RichTextAttr#has_text_colour":#RichTextAttr_hastextcolour
* "RichTextAttr#has_text_effects":#RichTextAttr_hastexteffects
* "RichTextAttr#has_font_underlined":#RichTextAttr_hasfontunderlined
* "RichTextAttr#has_url":#RichTextAttr_hasurl
* "RichTextAttr#has_font_weight":#RichTextAttr_hasfontweight
* "RichTextAttr#is_character_style":#RichTextAttr_ischaracterstyle
* "RichTextAttr#is_default":#RichTextAttr_isdefault
* "RichTextAttr#is_paragraph_style":#RichTextAttr_isparagraphstyle
* "RichTextAttr#set_alignment":#RichTextAttr_setalignment
* "RichTextAttr#set_background_colour":#RichTextAttr_setbackgroundcolour
* "RichTextAttr#set_bullet_font":#RichTextAttr_setbulletfont
* "RichTextAttr#set_bullet_name":#RichTextAttr_setbulletname
* "RichTextAttr#set_bullet_number":#RichTextAttr_setbulletnumber
* "RichTextAttr#set_bullet_style":#RichTextAttr_setbulletstyle
* "RichTextAttr#set_bullet_text":#RichTextAttr_setbullettext
* "RichTextAttr#set_character_style_name":#RichTextAttr_setcharacterstylename
* "RichTextAttr#set_flags":#RichTextAttr_setflags
* "RichTextAttr#set_font_face_name":#RichTextAttr_setfontfacename
* "RichTextAttr#set_font_size":#RichTextAttr_setfontsize
* "RichTextAttr#set_font_style":#RichTextAttr_setfontstyle
* "RichTextAttr#set_font_underlined":#RichTextAttr_setfontunderlined
* "RichTextAttr#set_font_weight":#RichTextAttr_setfontweight
* "RichTextAttr#set_left_indent":#RichTextAttr_setleftindent
* "RichTextAttr#set_line_spacing":#RichTextAttr_setlinespacing
* "RichTextAttr#set_list_style_name":#RichTextAttr_setliststylename
* "RichTextAttr#set_outline_level":#RichTextAttr_setoutlinelevel
* "RichTextAttr#set_page_break":#RichTextAttr_setpagebreak
* "RichTextAttr#set_paragraph_spacing_after":#RichTextAttr_setparagraphspacingafter
* "RichTextAttr#set_paragraph_spacing_before":#RichTextAttr_setparagraphspacingbefore
* "RichTextAttr#set_paragraph_style_name":#RichTextAttr_setparagraphstylename
* "RichTextAttr#set_right_indent":#RichTextAttr_setrightindent
* "RichTextAttr#set_tabs":#RichTextAttr_settabs
* "RichTextAttr#set_text_colour":#RichTextAttr_settextcolour
* "RichTextAttr#set_text_effect_flags":#RichTextAttr_settexteffectflags
* "RichTextAttr#set_text_effects":#RichTextAttr_settexteffects
* "RichTextAttr#set_url":#RichTextAttr_seturl
* "RichTextAttr#text_attr_ex":#RichTextAttr_textattrex

</div>


h3(#RichTextAttr_wxrichtextattr). RichTextAttr.new

  *RichTextAttr.new*(%(arg-type)"Colour":colour.html% colText, 
                   %(arg-type)"Colour":colour.html% colBack = NULL_COLOUR, 
                   %(arg-type)"TextAttrAlignment":textattralignment.html% alignment = TEXT_ALIGNMENT_DEFAULT)

Constructor.

h3(#RichTextAttr_apply). RichTextAttr#apply

 Boolean *apply*(%(arg-type)"RichTextAttr":richtextattr.html% style, 
                 %(arg-type)"RichTextAttr":richtextattr.html% compareWith = nil)

Applies the attributes in _style_ to the original object, but not those attributes from _style_ that are the same as those in _compareWith_ (if passed).

See also "RichTextAttr#combine":richtextattr.html#RichTextAttr_combine for a function that does almost the same but returns a new object instead of modifying the original object.

h3(#RichTextAttr_combine). RichTextAttr#combine

 "RichTextAttr":richtextattr.html *combine*(%(arg-type)"RichTextAttr":richtextattr.html% style, 
                        %(arg-type)"RichTextAttr":richtextattr.html% compareWith = nil)

Combines 'this' with _style_, but not applying attributes from _style_ that are the same as those in _compareWith_ (if passed).
A RichTextAttr object is returned and the original object is not changed.

See also "RichTextAttr#apply":richtextattr.html#RichTextAttr_apply for a function that does almost the same but modifies the original object instead of returning a new one.

h3(#RichTextAttr_createfont). RichTextAttr#create_font

 "Font":font.html *create_font*()

Creates a font from the font attributes.

h3(#RichTextAttr_getalignment). RichTextAttr#get_alignment

 "TextAttrAlignment":textattralignment.html *get_alignment*()

Returns the alignment flags.
See "RichTextAttr#set_alignment":richtextattr.html#RichTextAttr_setalignment for a list of available styles.

h3(#RichTextAttr_getbackgroundcolour). RichTextAttr#get_background_colour

 "Colour":colour.html *get_background_colour*()

Returns the background colour.

h3(#RichTextAttr_getbulletfont). RichTextAttr#get_bullet_font

 String *get_bullet_font*()

Returns a string containing the name of the font associated with the bullet symbol.
Only valid for attributes with TEXT_ATTR_BULLET_SYMBOL.

h3(#RichTextAttr_getbulletname). RichTextAttr#get_bullet_name

 String *get_bullet_name*()

Returns the standard bullet name, applicable if the bullet style is TEXT_ATTR_BULLET_STYLE_STANDARD.
Currently the following standard bullet names are supported:


* @standard/circle@
* @standard/square@
* @standard/diamond@
* @standard/triangle@


If you wish your application to support further bullet graphics, you can derive a
class from RichTextRenderer or RichTextStdRenderer, override @DrawStandardBullet@ and @EnumerateStandardBulletNames@, and
set an instance of the class using "RichTextBuffer#set_renderer":richtextbuffer.html#RichTextBuffer_setrenderer.

h3(#RichTextAttr_getbulletnumber). RichTextAttr#get_bullet_number

 Integer *get_bullet_number*()

Returns the bullet number.

h3(#RichTextAttr_getbulletstyle). RichTextAttr#get_bullet_style

 Integer *get_bullet_style*()

Returns the bullet style.  See
"RichTextAttr#set_bullet_style":richtextattr.html#RichTextAttr_setbulletstyle
for a list of available styles.

h3(#RichTextAttr_getbullettext). RichTextAttr#get_bullet_text

 String *get_bullet_text*()

Returns the bullet text, which could be a symbol, or (for example) cached outline text.

h3(#RichTextAttr_getcharacterstylename). RichTextAttr#get_character_style_name

 String *get_character_style_name*()

Returns the name of the character style.

h3(#RichTextAttr_getflags). RichTextAttr#get_flags

 Integer *get_flags*()

Returns flags indicating which attributes are applicable.
See "RichTextAttr#set_flags":richtextattr.html#RichTextAttr_setflags for a list of available flags.

h3(#RichTextAttr_getfontattributes). RichTextAttr#get_font_attributes

 Boolean *get_font_attributes*(%(arg-type)"Font":font.html% font)

Sets the font attributes from the given font.

h3(#RichTextAttr_getfontfacename). RichTextAttr#get_font_face_name

 String *get_font_face_name*()

Returns the font face name.

h3(#RichTextAttr_getfontsize). RichTextAttr#get_font_size

 Integer *get_font_size*()

Returns the font size in points.

h3(#RichTextAttr_getfontstyle). RichTextAttr#get_font_style

 Integer *get_font_style*()

Returns the font style.

h3(#RichTextAttr_getfontunderlined). RichTextAttr#get_font_underlined

 Boolean *get_font_underlined*()

Returns  if the font is underlined.

h3(#RichTextAttr_getfontweight). RichTextAttr#get_font_weight

 Integer *get_font_weight*()

Returns the font weight.

h3(#RichTextAttr_getleftindent). RichTextAttr#get_left_indent

 Integer *get_left_indent*()

Returns the left indent in tenths of a millimetre.

h3(#RichTextAttr_getleftsubindent). RichTextAttr#get_left_sub_indent

 Integer *get_left_sub_indent*()

Returns the left sub-indent in tenths of a millimetre.

h3(#RichTextAttr_getlinespacing). RichTextAttr#get_line_spacing

 Integer *get_line_spacing*()

Returns the line spacing value, one of TEXT_ATTR_LINE_SPACING_NORMAL,
TEXT_ATTR_LINE_SPACING_HALF, and TEXT_ATTR_LINE_SPACING_TWICE.

h3(#RichTextAttr_getliststylename). RichTextAttr#get_list_style_name

 String *get_list_style_name*()

Returns the name of the list style.

h3(#RichTextAttr_getoutlinelevel). RichTextAttr#get_outline_level

 Integer *get_outline_level*()

Returns the outline level.

h3(#RichTextAttr_getparagraphspacingafter). RichTextAttr#get_paragraph_spacing_after

 Integer *get_paragraph_spacing_after*()

Returns the space in tenths of a millimeter after the paragraph.

h3(#RichTextAttr_getparagraphspacingbefore). RichTextAttr#get_paragraph_spacing_before

 Integer *get_paragraph_spacing_before*()

Returns the space in tenths of a millimeter before the paragraph.

h3(#RichTextAttr_getparagraphstylename). RichTextAttr#get_paragraph_style_name

 String *get_paragraph_style_name*()

Returns the name of the paragraph style.

h3(#RichTextAttr_getrightindent). RichTextAttr#get_right_indent

 Integer *get_right_indent*()

Returns the right indent in tenths of a millimeter.

h3(#RichTextAttr_gettabs). RichTextAttr#get_tabs

 "ArrayInt":arrayint.html *get_tabs*()

Returns an array of tab stops, each expressed in tenths of a millimeter. Each stop
is measured from the left margin and therefore each value must be larger than the last.

h3(#RichTextAttr_gettextcolour). RichTextAttr#get_text_colour

 "Colour":colour.html *get_text_colour*()

Returns the text foreground colour.

h3(#RichTextAttr_gettexteffectflags). RichTextAttr#get_text_effect_flags

 Integer *get_text_effect_flags*()

Returns the text effect bits of interest. See "RichTextAttr#set_flags":richtextattr.html#RichTextAttr_setflags for further information.

h3(#RichTextAttr_gettexteffects). RichTextAttr#get_text_effects

 Integer *get_text_effects*()

Returns the text effects, a bit list of styles. See "RichTextAttr#set_text_effects":richtextattr.html#RichTextAttr_settexteffects for
details.

h3(#RichTextAttr_geturl). RichTextAttr#get_url

 String *get_url*()

Returns the URL for the content. Content with TEXT_ATTR_URL style
causes RichTextCtrl to show a hand cursor over it, and RichTextCtrl generates
a TextUrlEvent when the content is clicked.

h3(#RichTextAttr_hasalignment). RichTextAttr#has_alignment

 Boolean *has_alignment*()

Returns  if the attribute object specifies alignment.

h3(#RichTextAttr_hasbackgroundcolour). RichTextAttr#has_background_colour

 Boolean *has_background_colour*()

Returns  if the attribute object specifies a background colour.

h3(#RichTextAttr_hasbulletname). RichTextAttr#has_bullet_name

 Boolean *has_bullet_name*()

Returns  if the attribute object specifies a standard bullet name.

h3(#RichTextAttr_hasbulletnumber). RichTextAttr#has_bullet_number

 Boolean *has_bullet_number*()

Returns  if the attribute object specifies a bullet number.

h3(#RichTextAttr_hasbulletstyle). RichTextAttr#has_bullet_style

 Boolean *has_bullet_style*()

Returns  if the attribute object specifies a bullet style.

h3(#RichTextAttr_hasbullettext). RichTextAttr#has_bullet_text

 Boolean *has_bullet_text*()

Returns  if the attribute object specifies bullet text (usually specifying a symbol).

h3(#RichTextAttr_hascharacterstylename). RichTextAttr#has_character_style_name

 Boolean *has_character_style_name*()

Returns  if the attribute object specifies a character style name.

h3(#RichTextAttr_hasfontfacename). RichTextAttr#has_font_face_name

 Boolean *has_font_face_name*()

Returns  if the attribute object specifies a font face name.

h3(#RichTextAttr_hasflag). RichTextAttr#has_flag

 Boolean *has_flag*(%(arg-type)Integer% flag)

Returns  if the _flag_ is present in the attribute object's flag bitlist.

h3(#RichTextAttr_hasfont). RichTextAttr#has_font

 Boolean *has_font*()

Returns  if the attribute object specifies any font attributes.

h3(#RichTextAttr_hasfontitalic). RichTextAttr#has_font_italic

 Boolean *has_font_italic*()

Returns  if the attribute object specifies italic style.

h3(#RichTextAttr_hasleftindent). RichTextAttr#has_left_indent

 Boolean *has_left_indent*()

Returns  if the attribute object specifies a left indent.

h3(#RichTextAttr_haslinespacing). RichTextAttr#has_line_spacing

 Boolean *has_line_spacing*()

Returns  if the attribute object specifies line spacing.

h3(#RichTextAttr_hasliststylename). RichTextAttr#has_list_style_name

 Boolean *has_list_style_name*()

Returns  if the attribute object specifies a list style name.

h3(#RichTextAttr_hasoutlinelevel). RichTextAttr#has_outline_level

 Boolean *has_outline_level*()

Returns  if the attribute object specifies an outline level.

h3(#RichTextAttr_haspagebreak). RichTextAttr#has_page_break

 Boolean *has_page_break*()

Returns  if the attribute object specifies a page break before this paragraph.

h3(#RichTextAttr_hasparagraphspacingafter). RichTextAttr#has_paragraph_spacing_after

 Boolean *has_paragraph_spacing_after*()

Returns  if the attribute object specifies spacing after a paragraph.

h3(#RichTextAttr_hasparagraphspacingbefore). RichTextAttr#has_paragraph_spacing_before

 Boolean *has_paragraph_spacing_before*()

Returns  if the attribute object specifies spacing before a paragraph.

h3(#RichTextAttr_hasparagraphstylename). RichTextAttr#has_paragraph_style_name

 Boolean *has_paragraph_style_name*()

Returns  if the attribute object specifies a paragraph style name.

h3(#RichTextAttr_hasrightindent). RichTextAttr#has_right_indent

 Boolean *has_right_indent*()

Returns  if the attribute object specifies a right indent.

h3(#RichTextAttr_hasfontsize). RichTextAttr#has_font_size

 Boolean *has_font_size*()

Returns  if the attribute object specifies a font point size.

h3(#RichTextAttr_hastabs). RichTextAttr#has_tabs

 Boolean *has_tabs*()

Returns  if the attribute object specifies tab stops.

h3(#RichTextAttr_hastextcolour). RichTextAttr#has_text_colour

 Boolean *has_text_colour*()

Returns  if the attribute object specifies a text foreground colour.

h3(#RichTextAttr_hastexteffects). RichTextAttr#has_text_effects

 Boolean *has_text_effects*()

Returns  if the attribute object specifies text effects.

h3(#RichTextAttr_hasfontunderlined). RichTextAttr#has_font_underlined

 Boolean *has_font_underlined*()

Returns  if the attribute object specifies either underlining or no underlining.

h3(#RichTextAttr_hasurl). RichTextAttr#has_url

 Boolean *has_url*()

Returns  if the attribute object specifies a URL.

h3(#RichTextAttr_hasfontweight). RichTextAttr#has_font_weight

 Boolean *has_font_weight*()

Returns  if the attribute object specifies font weight (bold, light or normal).

h3(#RichTextAttr_ischaracterstyle). RichTextAttr#is_character_style

 Boolean *is_character_style*()

Returns  if the object represents a character style, that is,
the flags specify a font or a text background or foreground colour.

h3(#RichTextAttr_isdefault). RichTextAttr#is_default

 Boolean *is_default*()

Returns  if we have any attributes set,  otherwise.

h3(#RichTextAttr_isparagraphstyle). RichTextAttr#is_paragraph_style

 Boolean *is_paragraph_style*()

Returns  if the object represents a paragraph style, that is,
the flags specify alignment, indentation, tabs, paragraph spacing, or
bullet style.

h3(#RichTextAttr_setalignment). RichTextAttr#set_alignment

  *set_alignment*(%(arg-type)"TextAttrAlignment":textattralignment.html% alignment)

Sets the paragraph alignment. These are the possible values for _alignment_:

     TEXT_ALIGNMENT_DEFAULT,
     TEXT_ALIGNMENT_LEFT,
     TEXT_ALIGNMENT_CENTRE,
     TEXT_ALIGNMENT_CENTER = TEXT_ALIGNMENT_CENTRE,
     TEXT_ALIGNMENT_RIGHT,
     TEXT_ALIGNMENT_JUSTIFIED

Of these, TEXT_ALIGNMENT_JUSTIFIED is unimplemented. In future
justification may be supported when printing or previewing, only.

h3(#RichTextAttr_setbackgroundcolour). RichTextAttr#set_background_colour

  *set_background_colour*(%(arg-type)"Colour":colour.html% colBack)

Sets the background colour.

h3(#RichTextAttr_setbulletfont). RichTextAttr#set_bullet_font

  *set_bullet_font*(%(arg-type)String% font)

Sets the name of the font associated with the bullet symbol.
Only valid for attributes with TEXT_ATTR_BULLET_SYMBOL.

h3(#RichTextAttr_setbulletname). RichTextAttr#set_bullet_name

  *set_bullet_name*(%(arg-type)String% name)

Sets the standard bullet name, applicable if the bullet style is TEXT_ATTR_BULLET_STYLE_STANDARD.
See "RichTextAttr#get_bullet_name":richtextattr.html#RichTextAttr_getbulletname for a list
of supported names, and how to expand the range of supported types.

h3(#RichTextAttr_setbulletnumber). RichTextAttr#set_bullet_number

  *set_bullet_number*(%(arg-type)Integer% n)

Sets the bullet number.

h3(#RichTextAttr_setbulletstyle). RichTextAttr#set_bullet_style

  *set_bullet_style*(%(arg-type)Integer% style)

Sets the bullet style. The following styles can be passed:

 TEXT_ATTR_BULLET_STYLE_NONE         
 TEXT_ATTR_BULLET_STYLE_ARABIC       
 TEXT_ATTR_BULLET_STYLE_LETTERS_UPPER
 TEXT_ATTR_BULLET_STYLE_LETTERS_LOWER
 TEXT_ATTR_BULLET_STYLE_ROMAN_UPPER  
 TEXT_ATTR_BULLET_STYLE_ROMAN_LOWER  
 TEXT_ATTR_BULLET_STYLE_SYMBOL       
 TEXT_ATTR_BULLET_STYLE_BITMAP       
 TEXT_ATTR_BULLET_STYLE_PARENTHESES  
 TEXT_ATTR_BULLET_STYLE_PERIOD       
 TEXT_ATTR_BULLET_STYLE_STANDARD     
 TEXT_ATTR_BULLET_STYLE_RIGHT_PARENTHESIS
 TEXT_ATTR_BULLET_STYLE_OUTLINE     
 TEXT_ATTR_BULLET_STYLE_ALIGN_LEFT  
 TEXT_ATTR_BULLET_STYLE_ALIGN_RIGHT 
 TEXT_ATTR_BULLET_STYLE_ALIGN_CENTRE
 

Currently TEXT_ATTR_BULLET_STYLE_BITMAP is not supported.

h3(#RichTextAttr_setbullettext). RichTextAttr#set_bullet_text

  *set_bullet_text*(%(arg-type)String% text)

Sets the bullet text, which could be a symbol, or (for example) cached outline text.

h3(#RichTextAttr_setcharacterstylename). RichTextAttr#set_character_style_name

  *set_character_style_name*(%(arg-type)String% name)

Sets the character style name.

h3(#RichTextAttr_setflags). RichTextAttr#set_flags

  *set_flags*(%(arg-type)Integer% flags)

Sets the flags determining which styles are being specified. The following
flags can be passed in a bitlist:

Standard TextAttr constants
 
 TEXT_ATTR_TEXT_COLOUR             
 TEXT_ATTR_BACKGROUND_COLOUR       
 TEXT_ATTR_FONT_FACE               
 TEXT_ATTR_FONT_SIZE               
 TEXT_ATTR_FONT_WEIGHT             
 TEXT_ATTR_FONT_ITALIC             
 TEXT_ATTR_FONT_UNDERLINE          
 TEXT_ATTR_FONT
 TEXT_ATTR_ALIGNMENT           
 TEXT_ATTR_LEFT_INDENT         
 TEXT_ATTR_RIGHT_INDENT        
 TEXT_ATTR_TABS                
 
Extra formatting flags not in TextAttr
 
 TEXT_ATTR_PARA_SPACING_AFTER  
 TEXT_ATTR_PARA_SPACING_BEFORE 
 TEXT_ATTR_LINE_SPACING        
 TEXT_ATTR_CHARACTER_STYLE_NAME
 TEXT_ATTR_PARAGRAPH_STYLE_NAME
 TEXT_ATTR_LIST_STYLE_NAME
 TEXT_ATTR_BULLET_STYLE  
 TEXT_ATTR_BULLET_NUMBER 
 TEXT_ATTR_BULLET_TEXT   
 TEXT_ATTR_BULLET_NAME   
 TEXT_ATTR_URL           
 TEXT_ATTR_PAGE_BREAK    
 TEXT_ATTR_EFFECTS       
 TEXT_ATTR_OUTLINE_LEVEL 
 


h3(#RichTextAttr_setfontfacename). RichTextAttr#set_font_face_name

  *set_font_face_name*(%(arg-type)String% faceName)

Sets the paragraph alignment.

h3(#RichTextAttr_setfontsize). RichTextAttr#set_font_size

  *set_font_size*(%(arg-type)Integer% pointSize)

Sets the font size in points.

h3(#RichTextAttr_setfontstyle). RichTextAttr#set_font_style

  *set_font_style*(%(arg-type)Integer% fontStyle)

Sets the font style (normal, italic or slanted).

h3(#RichTextAttr_setfontunderlined). RichTextAttr#set_font_underlined

  *set_font_underlined*(%(arg-type)Boolean% underlined)

Sets the font underlining.

h3(#RichTextAttr_setfontweight). RichTextAttr#set_font_weight

  *set_font_weight*(%(arg-type)Integer% fontWeight)

Sets the font weight.

h3(#RichTextAttr_setleftindent). RichTextAttr#set_left_indent

  *set_left_indent*(%(arg-type)Integer% indent,  %(arg-type)Integer% subIndent = 0)

Sets the left indent and left subindent in tenths of a millimetre.

The sub-indent is an offset from the left of the paragraph, and is used
for all but the first line in a paragraph. A positive value will cause
the first line to appear to the left of the subsequent lines, and a
negative value will cause the first line to be indented relative to the
subsequent lines.

RichTextBuffer uses indentation to render a bulleted item. The left
indent is the distance between the margin and the bullet. The content of
the paragraph, including the first line, starts at leftMargin +
leftSubIndent. So the distance between the left edge of the bullet and
the left of the actual paragraph is leftSubIndent.

h3(#RichTextAttr_setlinespacing). RichTextAttr#set_line_spacing

  *set_line_spacing*(%(arg-type)Integer% spacing)

Sets the line spacing. _spacing_ is a multiple, where 10 means single-spacing,
15 means 1.5 spacing, and 20 means double spacing. The following constants are
defined for convenience:



 TEXT_ATTR_LINE_SPACING_NORMAL         10
 TEXT_ATTR_LINE_SPACING_HALF           15
 TEXT_ATTR_LINE_SPACING_TWICE          20
 


h3(#RichTextAttr_setliststylename). RichTextAttr#set_list_style_name

  *set_list_style_name*(%(arg-type)String% name)

Sets the list style name.

h3(#RichTextAttr_setoutlinelevel). RichTextAttr#set_outline_level

  *set_outline_level*(%(arg-type)Integer% level)

Specifies the outline level. Zero represents normal text. At present, the outline level is
not used, but may be used in future for determining list levels and for applications
that need to store document structure information.

h3(#RichTextAttr_setpagebreak). RichTextAttr#set_page_break

  *set_page_break*(%(arg-type)Boolean% pageBreak = true)

Specifies a page break before this paragraph.

h3(#RichTextAttr_setparagraphspacingafter). RichTextAttr#set_paragraph_spacing_after

  *set_paragraph_spacing_after*(%(arg-type)Integer% spacing)

Sets the spacing after a paragraph, in tenths of a millimetre.

h3(#RichTextAttr_setparagraphspacingbefore). RichTextAttr#set_paragraph_spacing_before

  *set_paragraph_spacing_before*(%(arg-type)Integer% spacing)

Sets the spacing before a paragraph, in tenths of a millimetre.

h3(#RichTextAttr_setparagraphstylename). RichTextAttr#set_paragraph_style_name

  *set_paragraph_style_name*(%(arg-type)String% name)

Sets the name of the paragraph style.

h3(#RichTextAttr_setrightindent). RichTextAttr#set_right_indent

  *set_right_indent*(%(arg-type)Integer% indent)

Sets the right indent in tenths of a millimetre.

h3(#RichTextAttr_settabs). RichTextAttr#set_tabs

  *set_tabs*( %(arg-type)ArrayInt% tabs)

Sets the tab stops, expressed in tenths of a millimetre.  Each stop is
measured from the left margin and therefore each value must be larger
than the last.

h3(#RichTextAttr_settextcolour). RichTextAttr#set_text_colour

  *set_text_colour*(%(arg-type)"Colour":colour.html% colText)

Sets the text foreground colout.

h3(#RichTextAttr_settexteffectflags). RichTextAttr#set_text_effect_flags

  *set_text_effect_flags*(%(arg-type)Integer% flags)

Sets the text effect bits of interest. You should also pass TEXT_ATTR_EFFECTS to "RichTextAttr#set_flags":richtextattr.html#RichTextAttr_setflags.
See "RichTextAttr#set_flags":richtextattr.html#RichTextAttr_setflags for further information.

h3(#RichTextAttr_settexteffects). RichTextAttr#set_text_effects

  *set_text_effects*(%(arg-type)Integer% effects)

Sets the text effects, a bit list of styles.

The following styles can be passed:



 TEXT_ATTR_EFFECT_NONE
 TEXT_ATTR_EFFECT_CAPITALS
 TEXT_ATTR_EFFECT_SMALL_CAPITALS
 TEXT_ATTR_EFFECT_STRIKETHROUGH 
 TEXT_ATTR_EFFECT_DOUBLE_STRIKETHROUGH
 TEXT_ATTR_EFFECT_SHADOW              
 TEXT_ATTR_EFFECT_EMBOSS              
 TEXT_ATTR_EFFECT_OUTLINE             
 TEXT_ATTR_EFFECT_ENGRAVE             
 TEXT_ATTR_EFFECT_SUPERSCRIPT         
 TEXT_ATTR_EFFECT_SUBSCRIPT           
 


Of these, only TEXT_ATTR_EFFECT_CAPITALS and
TEXT_ATTR_EFFECT_STRIKETHROUGH are implemented.
TEXT_ATTR_EFFECT_CAPITALS capitalises text when displayed (leaving the
case of the actual buffer text unchanged), and
TEXT_ATTR_EFFECT_STRIKETHROUGH draws a line through text.

To set effects, you should also pass TEXT_ATTR_EFFECTS to "RichTextAttr#set_flags":richtextattr.html#RichTextAttr_setflags, and call "RichTextAttr#set_text_effect_flags":richtextattr.html#RichTextAttr_settexteffectflags with the styles (taken from the
above set) that you are interested in setting.

h3(#RichTextAttr_seturl). RichTextAttr#set_url

  *set_url*(%(arg-type)String% url)

Sets the URL for the content. Sets the TEXT_ATTR_URL style; content with this style
causes RichTextCtrl to show a hand cursor over it, and RichTextCtrl generates
a TextUrlEvent when the content is clicked.

h3(#RichTextAttr_operatorassign). RichTextAttr::operator=

 void operator *operator=*(%(arg-type)"TextAttrEx":textattrex.html% attr)

Assignment from a "TextAttrEx":textattr.html object.

 void operator *operator=*(%(arg-type)"RichTextAttr":richtextattr.html% attr)

Assignment from a "RichTextAttr":richtextattr.html object.

h3(#RichTextAttr_wxtextattrex). RichTextAttr#text_attr_ex

 operator *_text_attr_ex*()

Makes a "TextAttrEx":textattrex.html object from this object.

