h1(#wxsplitterevent). Wx::SplitterEvent

This class represents the events generated by a splitter control. Also there is
only one event class, the data associated to the different events is not the
same and so not all accessor functions may be called for each event. The
documentation mentions the kind of event(s) for which the given accessor
function makes sense: calling it for other types of events will result
in assert failure (in debug mode) and will return meaningless results.

h2. Derived from

"NotifyEvent":notifyevent.html

"CommandEvent":commandevent.html

"Event":event.html

"Object":object.html

h2. Event table macros

To process a splitter event, use these event handler macros to direct input to member
functions that take a SplitterEvent argument.



|*evt_splitter_sash_pos_changing(id)&nbsp;{&nbsp;&#124;&nbsp;event&nbsp;&#124;&nbsp;...&nbsp;}*|The sashposition is in the process of being changed. You may prevent this changefrom happening by calling "Veto":notifyeventveto.html or you may alsomodify the position of the tracking bar to properly reflect the position thatwould be set if the drag were to be completed at this point. Processes aEVT_COMMAND_SPLITTER_SASH_POS_CHANGING event.|
|*evt_splitter_sash_pos_changed(id)&nbsp;{&nbsp;&#124;&nbsp;event&nbsp;&#124;&nbsp;...&nbsp;}*|The sashposition was changed. This event is generated after the user releases the mouseafter dragging the splitter.Processes a EVT_COMMAND_SPLITTER_SASH_POS_CHANGED event.|
|*evt_splitter_unsplit(id)&nbsp;{&nbsp;&#124;&nbsp;event&nbsp;&#124;&nbsp;...&nbsp;}*|The splitter has been justunsplit. Processes a EVT_COMMAND_SPLITTER_UNSPLIT event. This event can'tbe vetoed.|
|*evt_splitter_dclick(id)&nbsp;{&nbsp;&#124;&nbsp;event&nbsp;&#124;&nbsp;...&nbsp;}*|The sash was doubleclicked. The default behaviour is to unsplit the window when this happens(unless the minimum pane size has been set to a value greater than zero). Thiswon't happen if you veto this event. Processes aEVT_COMMAND_SPLITTER_DOUBLECLICKED event.|

h2. See also

"SplitterWindow":splitterwindow.html, "Event handling overview":eventhandlingoverview.html


<div id="methods">

h2. Methods

* "SplitterEvent.new":#SplitterEvent_new
* "SplitterEvent#get_sash_position":#SplitterEvent_getsashposition
* "SplitterEvent#get_x":#SplitterEvent_getx
* "SplitterEvent#get_y":#SplitterEvent_gety
* "SplitterEvent#get_window_being_removed":#SplitterEvent_getwindowbeingremoved
* "SplitterEvent#set_sash_position":#SplitterEvent_setsashposition

</div>



h3(#SplitterEvent_constr). SplitterEvent.new

  *SplitterEvent.new*(%(arg-type)"EventType":eventtype.html% eventType = EVT_NULL, 
                                            %(arg-type)"SplitterWindow":splitterwindow.html% splitter = nil)

Constructor. Used internally by Widgets only.


h3(#SplitterEvent_getsashposition). SplitterEvent#get_sash_position

 Integer *get_sash_position*()

Returns the new sash position.

May only be called while processing
EVT_COMMAND_SPLITTER_SASH_POS_CHANGING and
EVT_COMMAND_SPLITTER_SASH_POS_CHANGED events.


h3(#SplitterEvent_getx). SplitterEvent#get_x

 Integer *get_x*()

Returns the x coordinate of the double-click point.

May only be called while processing
EVT_COMMAND_SPLITTER_DOUBLECLICKED events.


h3(#SplitterEvent_gety). SplitterEvent#get_y

 Integer *get_y*()

Returns the y coordinate of the double-click point.

May only be called while processing
EVT_COMMAND_SPLITTER_DOUBLECLICKED events.

h3(#SplitterEvent_getwindowbeingremoved). SplitterEvent#get_window_being_removed

 "Window":window.html *get_window_being_removed*()

Returns a pointer to the window being removed when a splitter window
is unsplit.

May only be called while processing
EVT_COMMAND_SPLITTER_UNSPLIT events.


h3(#SplitterEvent_setsashposition). SplitterEvent#set_sash_position

  *set_sash_position*(%(arg-type)Integer% pos)

In the case of EVT_COMMAND_SPLITTER_SASH_POS_CHANGED events,
sets the new sash position. In the case of
EVT_COMMAND_SPLITTER_SASH_POS_CHANGING events, sets the new
tracking bar position so visual feedback during dragging will
represent that change that will actually take place. Set to -1 from
the event handler code to prevent repositioning.

May only be called while processing
EVT_COMMAND_SPLITTER_SASH_POS_CHANGING and
EVT_COMMAND_SPLITTER_SASH_POS_CHANGED events.

h4. Parameters

* _pos_ New sash position.

