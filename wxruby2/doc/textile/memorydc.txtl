h1(#wxmemorydc). Wx::MemoryDC

A memory device context provides a means to draw graphics onto a bitmap. When
drawing in to a mono-bitmap, using @WHITE@, @WHITE_PEN@ and
@WHITE_BRUSH@
will draw the background colour (i.e. 0) whereas all other colours will draw the
foreground colour (i.e. 1).

h2. Derived from

"DC":dc.html

"Object":object.html

h2. Remarks

A bitmap must be selected into the new memory DC before it may be used
for anything.  Typical usage is as follows:


   // Create a memory DC
   MemoryDC temp_dc;
   temp_dc.SelectObject(test_bitmap);
 
   // We can now draw into the memory DC...
   // Copy from this DC to another DC.
   old_dc.Blit(250, 50, BITMAP_WIDTH, BITMAP_HEIGHT, temp_dc, 0, 0);
 

Note that the memory DC _must_ be deleted (or the bitmap selected out of it) before a bitmap
can be reselected into another memory DC.

h2. See also

"Bitmap":bitmap.html, "DC":dc.html

<div id="methods">

h2. Methods

* "MemoryDC.new":#MemoryDC_new
* "MemoryDC#select_object":#MemoryDC_selectobject

</div>


h3(#MemoryDC_new). MemoryDC.new

h3(#MemoryDC_selectobject). MemoryDC#select_object

  *select_object*(%(arg-type)Bitmap% bitmap)

Selects the given bitmap into the device context, to use as the memory
bitmap. Selecting the bitmap into a memory DC allows you to draw into
the DC (and therefore the bitmap) and also to use *Blit* to copy
the bitmap to a window. For this purpose, you may find "DC#draw_icon":dc.html#DC_drawicon easier to use instead.

If the argument is NullBitmap (or some other uninitialised Bitmap) the current bitmap is selected out of the device
context, and the original bitmap restored, allowing the current bitmap to
be destroyed safely.

