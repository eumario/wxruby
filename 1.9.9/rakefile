# wxRuby rakefile
# Copyright 2004-2008 by wxRuby development team
# Released under the MIT-style wxruby2 license

# Influential environment variables
# WXRUBY_RELEASE    : build a release version, stripped of debugging info
# WXRUBY_DEBUG      : build a debug version
# WXRUBY_VERSION    : set the version info (x.x.x) for this tree
# WXRUBY_NO_UNICODE : try and build an ANSI version
# WXRUBY_EXCLUDED   : exclude certian classes from being compiled, even if present

require "rake/rakeutil"

# Determine or set version of wxRuby library
require 'rake/rakeversion'

# STANDARD BUILD DIRECTORIES
SWIG_DIR = 'swig'
SRC_DIR  = 'src'
OBJ_DIR  = 'obj'
DEST_DIR = 'lib'
CLASSES_DIR = File.join(SWIG_DIR, 'classes')

# THE BINARY LIBRARY TO BE COMPILED
DLL_LIB = "wxruby2.#{Config::CONFIG["DLEXT"]}"
TARGET_LIB = File.join(DEST_DIR, DLL_LIB)

# FOR ENSURING SUITABLE SWIG VERSION IS AVAILABLE
SWIG_CMD = ENV['SWIG_CMD'] || "swig"
SWIG_MINIMUM_VERSION = '1.3.32'
SWIG_MAXIMUM_VERSION = '1.3.35'

# SOURCE FILE GROUPS
# THE UNADORNED NAMES OF ALL THE WX OBJECT CLASSES TO BE BUILT
ALL_CLASSES =  FileList[ "#{CLASSES_DIR}/*.i" ].sort.map do | i_file | 
  File.basename(i_file, '.i')
end

# THE MAIN ENTRY POINT MODULE
MAIN_MODULE = 'wx'
# Extra swig helper files to be built
HELPER_CLASSES = %w|RubyConstants RubyStockObjects Functions Mac|
# Pure-ruby lib files
ALL_RUBY_LIB_FILES = FileList[ 'lib/**/*.rb' ]


# Redcloth library is required to build the documentation, but not
# required just to compile the lib.
begin
  require "rake/rakedocs"
rescue LoadError # documentation tasks will not be available
end

# Rubygems library is required to build a gem, but not just to compile
# the lib.
begin
  require "rake/rakepackage"  
rescue LoadError # package tasks will not be available
end

require 'rake/rakeconfigure'
require "rake/rakewx"

#############################
# public tasks

if Object.respond_to?(:create_release_tasks, true)
  create_release_tasks
end

desc "Create the binary Ruby library file"
task :default => TARGET_LIB

desc "Compile object files from SWIG-generated sources"
task :compile => all_obj_files

desc "Force a compile of object files from C++ sources"
task :recompile => [:clean, :compile]

desc "Delete C++ source and header files generated by SWIG"
task :clean_src do
  delete_files_in_with_ext(SRC_DIR, "cpp")
  delete_files_in_with_ext(SRC_DIR, "h")
end

desc "Delete compiled libraries and object files"
task :clean do
  force_delete(TARGET_LIB)
  force_delete(VERSION_FILE)
  delete_files_in(OBJ_DIR)
  #force_rmdir($obj_dir)
end

MAKE_NUM_THREADS = 2
desc "Experimental generation of Makefile so can use multiprocessors to compile faster!"
task :rake_make => "Makefile" do
  sh "make -j #{MAKE_NUM_THREADS}"
end

