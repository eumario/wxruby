h1(#wxdocmanager). Wx::DocManager

The DocManager class is part of the document/view framework supported by Widgets,
and cooperates with the "View":view.html, "Document":document.html and "DocTemplate":doctemplate.html classes.

h2. Derived from

"EvtHandler":evthandler.html

"Object":object.html

h2. See also

"DocManager overview":docmanageroverview.html, "Document":document.html, "View":view.html, "DocTemplate":doctemplate.html, "FileHistory":filehistory.html

<div id="methods">

h2. Methods

* "DocManager#m__current_view":#DocManager_mcurrentview
* "DocManager#m__default_document_name_counter":#DocManager_mdefaultdocumentnamecounter
* "DocManager#m__file_history":#DocManager_mfilehistory
* "DocManager#m__max_docs_open":#DocManager_mmaxdocsopen
* "DocManager#m__docs":#DocManager_mdocs
* "DocManager#m__flags":#DocManager_mflags
* "DocManager#m__last_directory":#DocManager_mlastdirectory
* "DocManager#m__templates":#DocManager_mtemplates
* "DocManager.new":#DocManager_new
* "DocManager#activate_view":#DocManager_activateview
* "DocManager#add_document":#DocManager_adddocument
* "DocManager#add_file_to_history":#DocManager_addfiletohistory
* "DocManager#associate_template":#DocManager_associatetemplate
* "DocManager#close_documents":#DocManager_closedocuments
* "DocManager#create_document":#DocManager_createdocument
* "DocManager#create_view":#DocManager_createview
* "DocManager#disassociate_template":#DocManager_disassociatetemplate
* "DocManager#file_history_add_files_to_menu":#DocManager_filehistoryaddfilestomenu
* "DocManager#file_history_load":#DocManager_filehistoryload
* "DocManager#file_history_remove_menu":#DocManager_filehistoryremovemenu
* "DocManager#file_history_save":#DocManager_filehistorysave
* "DocManager#file_history_use_menu":#DocManager_filehistoryusemenu
* "DocManager#find_template_for_path":#DocManager_findtemplateforpath
* "DocManager#get_current_document":#DocManager_getcurrentdocument
* "DocManager#get_current_view":#DocManager_getcurrentview
* "DocManager#get_documents":#DocManager_getdocuments
* "DocManager#get_file_history":#DocManager_getfilehistory
* "DocManager#get_last_directory":#DocManager_getlastdirectory
* "DocManager#get_max_docs_open":#DocManager_getmaxdocsopen
* "DocManager#get_history_files_count":#DocManager_gethistoryfilescount
* "DocManager#get_templates":#DocManager_gettemplates
* "DocManager#initialize":#DocManager_initialize
* "DocManager#make_default_name":#DocManager_makedefaultname
* "DocManager#on_create_file_history":#DocManager_oncreatefilehistory
* "DocManager#on_file_close":#DocManager_onfileclose
* "DocManager#on_file_close_all":#DocManager_onfilecloseall
* "DocManager#on_file_new":#DocManager_onfilenew
* "DocManager#on_file_open":#DocManager_onfileopen
* "DocManager#on_file_revert":#DocManager_onfilerevert
* "DocManager#on_file_save":#DocManager_onfilesave
* "DocManager#on_file_save_as":#DocManager_onfilesaveas
* "DocManager#remove_document":#DocManager_removedocument
* "DocManager#select_document_path":#DocManager_selectdocumentpath
* "DocManager#select_document_type":#DocManager_selectdocumenttype
* "DocManager#select_view_type":#DocManager_selectviewtype
* "DocManager#set_last_directory":#DocManager_setlastdirectory
* "DocManager#set_max_docs_open":#DocManager_setmaxdocsopen

</div>



h3(#DocManager_mcreateview). DocManager#m__current_view

View*m_currentView

The currently active view.


h3(#DocManager_mdefaultdocumentnamecounter). DocManager#m__default_document_name_counter

intm_defaultDocumentNameCounter

Stores the integer to be used for the next default document name.


h3(#DocManager_mfilehistory). DocManager#m__file_history

FileHistory*m_fileHistory

A pointer to an instance of "FileHistory":filehistory.html,
which manages the history of recently-visited files on the File menu.


h3(#DocManager_mmaxdocsopen). DocManager#m__max_docs_open

intm_maxDocsOpen

Stores the maximum number of documents that can be opened before
existing documents are closed. By default, this is 10,000.


h3(#DocManager_mdocs). DocManager#m__docs

Listm_docs

A list of all documents.


h3(#DocManager_mflags). DocManager#m__flags

longm_flags

Stores the flags passed to the constructor.


h3(#DocManager_mlastdirectory). DocManager#m__last_directory

The directory last selected by the user when opening a file.

FileHistory*m_fileHistory


h3(#DocManager_mtemplates). DocManager#m__templates

Listm_templates

A list of all document templates.


h3(#DocManager_new). DocManager.new

  *DocManager.new*(%(arg-type)Integer% flags = DEFAULT_DOCMAN_FLAGS, 
                 %(arg-type)Boolean% initialize = true)

Constructor. Create a document manager instance dynamically near the start of your application
before doing any document or view operations.

_flags_ is currently unused.

If _initialize_ is true, the "Initialize":docmanagerinitialize.html function will be called
to create a default history list object. If you derive from DocManager, you may wish to call the
base constructor with false, and then call Initialize in your own constructor, to allow
your own Initialize or OnCreateFileHistory functions to be called.


  *destructor*()

Destructor.


h3(#DocManager_activateview). DocManager#activate_view

  *activate_view*(%(arg-type)View% doc,  %(arg-type)Boolean% activate = true)

Sets the current view.


h3(#DocManager_adddocument). DocManager#add_document

  *add_document*(%(arg-type)Document% doc)

Adds the document to the list of documents.


h3(#DocManager_addfiletohistory). DocManager#add_file_to_history

  *add_file_to_history*(%(arg-type)String% filename)

Adds a file to the file history list, if we have a pointer to an appropriate file menu.


h3(#DocManager_associatetemplate). DocManager#associate_template

  *associate_template*(%(arg-type)DocTemplate% temp)

Adds the template to the document manager's template list.


h3(#DocManager_closedocuments). DocManager#close_documents

 Boolean *close_documents*(%(arg-type)Boolean% force = true)

Closes all currently opened documents.


h3(#DocManager_createdocument). DocManager#create_document

 "Document":document.html *create_document*(%(arg-type)String% path,  %(arg-type)Integer% flags)

Creates a new document in a manner determined by the _flags_ parameter, which can be:


* DOC_NEW Creates a fresh document.
* DOC_SILENT Silently loads the given document file.


If DOC_NEW is present, a new document will be created and returned, possibly after
asking the user for a template to use if there is more than one document template.
If DOC_SILENT is present, a new document will be created and the given file loaded
into it. If neither of these flags is present, the user will be presented with
a file selector for the file to load, and the template to use will be determined by the
extension (Windows) or by popping up a template choice list (other platforms).

If the maximum number of documents has been reached, this function
will delete the oldest currently loaded document before creating a new one.


h3(#DocManager_createview). DocManager#create_view

 "View":view.html *create_view*(%(arg-type)Document% doc,  %(arg-type)Integer% flags)

Creates a new view for the given document. If more than one view is allowed for the
document (by virtue of multiple templates mentioning the same document type), a choice
of view is presented to the user.


h3(#DocManager_disassociatetemplate). DocManager#disassociate_template

  *disassociate_template*(%(arg-type)DocTemplate% temp)

Removes the template from the list of templates.


h3(#DocManager_filehistoryaddfilestomenu). DocManager#file_history_add_files_to_menu

  *file_history_add_files_to_menu*()

Appends the files in the history list, to all menus managed by the file history object.

  *file_history_add_files_to_menu*(%(arg-type)Menu% menu)

Appends the files in the history list, to the given menu only.


h3(#DocManager_filehistoryload). DocManager#file_history_load

  *file_history_load*(%(arg-type)ConfigBase% config)

Loads the file history from a config object.

h4. See also

"Config":configbase.html


h3(#DocManager_filehistoryremovemenu). DocManager#file_history_remove_menu

  *file_history_remove_menu*(%(arg-type)Menu% menu)

Removes the given menu from the list of menus managed by the file history object.


h3(#DocManager_filehistorysave). DocManager#file_history_save

  *file_history_save*(%(arg-type)ConfigBase% resourceFile)

Saves the file history into a config object. This must be called
explicitly by the application.

h4. See also

"Config":configbase.html


h3(#DocManager_filehistoryusemenu). DocManager#file_history_use_menu

  *file_history_use_menu*(%(arg-type)Menu% menu)

Use this menu for appending recently-visited document filenames, for convenient
access. Calling this function with a valid menu pointer enables the history
list functionality.

Note that you can add multiple menus using this function, to be managed by the
file history object.


h3(#DocManager_findtemplateforpath). DocManager#find_template_for_path

 "DocTemplate":doctemplate.html *find_template_for_path*(%(arg-type)String% path)

Given a path, try to find template that matches the extension. This is only
an approximate method of finding a template for creating a document.


h3(#DocManager_getcurrentdocument). DocManager#get_current_document

 "Document":document.html *get_current_document*()

Returns the document associated with the currently active view (if any).


h3(#DocManager_getcurrentview). DocManager#get_current_view

 "View":view.html *get_current_view*()

Returns the currently active view 


h3(#DocManager_getdocuments). DocManager#get_documents

 "List":list.html *get_documents*()

Returns a reference to the list of documents.


h3(#DocManager_getfilehistory). DocManager#get_file_history

 "FileHistory":filehistory.html *get_file_history*()

Returns a pointer to file history.


h3(#DocManager_getlastdirectory). DocManager#get_last_directory

 String *get_last_directory*()

Returns the directory last selected by the user when opening a file. Initially empty.


h3(#DocManager_getmaxdocsopen). DocManager#get_max_docs_open

 Integer *get_max_docs_open*()

Returns the number of documents that can be open simultaneously.


h3(#DocManager_gethistoryfilescount). DocManager#get_history_files_count

 size_t *get_history_files_count*()

Returns the number of files currently stored in the file history.


h3(#DocManager_gettemplates). DocManager#get_templates

 "List":list.html *get_templates*()

Returns a reference to the list of associated templates.


h3(#DocManager_initialize). DocManager#initialize

 Boolean *initialize*()

Initializes data; currently just calls OnCreateFileHistory. Some data cannot
always be initialized in the constructor because the programmer must be given
the opportunity to override functionality. If OnCreateFileHistory was called
from the constructor, an overridden virtual OnCreateFileHistory would not be
called due to C++'s `interesting' constructor semantics. In fact Initialize
