h1(#wxdebugcontext). Wx::DebugContext

A class for performing various debugging and memory tracing
operations. Full functionality (such as printing out objects
currently allocated) is only present in a debugging build of Widgets,
i.e. if the __WXDEBUG__ symbol is defined. DebugContext
and related functions and macros can be compiled out by setting
USE_DEBUG_CONTEXT to 0 is setup.h

h2. Derived from

No parent class.

h2. See also

Overviewwxdebugcontextoverview

<div id="methods">

h2. Methods

* "DebugContext#check":#DebugContext_check
* "DebugContext#dump":#DebugContext_dump
* "DebugContext#get_check_previous":#DebugContext_getcheckprevious
* "DebugContext#get_debug_mode":#DebugContext_getdebugmode
* "DebugContext#get_level":#DebugContext_getlevel
* "DebugContext#get_stream":#DebugContext_getstream
* "DebugContext#get_stream_buf":#DebugContext_getstreambuf
* "DebugContext#has_stream":#DebugContext_hasstream
* "DebugContext#print_classes":#DebugContext_printclasses
* "DebugContext#print_statistics":#DebugContext_printstatistics
* "DebugContext#set_checkpoint":#DebugContext_setcheckpoint
* "DebugContext#set_check_previous":#DebugContext_setcheckprevious
* "DebugContext#set_debug_mode":#DebugContext_setdebugmode
* "DebugContext#set_file":#DebugContext_setfile
* "DebugContext#set_level":#DebugContext_setlevel
* "DebugContext#set_standard_error":#DebugContext_setstandarderror
* "DebugContext#set_stream":#DebugContext_setstream

</div>


h3(#DebugContext_check). DebugContext#check

 Integer *check*()

Checks the memory blocks for errors, starting from the currently set
checkpoint.

h4. Return value

Returns the number of errors,
so a value of zero represents success. Returns -1 if an error
was detected that prevents further checking.

h3(#DebugContext_dump). DebugContext#dump

 Boolean *dump*()

Performs a memory dump from the currently set checkpoint, writing to the
current debug stream. Calls the *Dump* member function for each Object
derived instance.

h4. Return value

true if the function succeeded, false otherwise.

h3(#DebugContext_getcheckprevious). DebugContext#get_check_previous

 Boolean *get_check_previous*()

Returns true if the memory allocator checks all previous memory blocks for errors.
By default, this is false since it slows down execution considerably.

h4. See also

"DebugContext#set_check_previous":debugcontext.html#DebugContext_setcheckprevious

h3(#DebugContext_getdebugmode). DebugContext#get_debug_mode

 Boolean *get_debug_mode*()

Returns true if debug mode is on. If debug mode is on, the Object new and delete
operators store or use information about memory allocation. Otherwise,
a straight malloc and free will be performed by these operators.

h4. See also

"DebugContext#set_debug_mode":debugcontext.html#DebugContext_setdebugmode

h3(#DebugContext_getlevel). DebugContext#get_level

 Integer *get_level*()

Gets the debug level (default 1). The debug level is used by the TraceLevel function and
the WXTRACELEVEL macro to specify how detailed the trace information is; setting
a different level will only have an effect if trace statements in the application
specify a value other than one.

This is obsolete, replaced by "Log":log.html functionality.

h4. See also

"DebugContext#set_level":debugcontext.html#DebugContext_setlevel

h3(#DebugContext_getstream). DebugContext#get_stream

 ostream *get_stream*()

Returns the output stream associated with the debug context.

This is obsolete, replaced by "Log":log.html functionality.

h4. See also

"DebugContext#set_stream":debugcontext.html#DebugContext_setstream

h3(#DebugContext_getstreambuf). DebugContext#get_stream_buf

 streambuf *get_stream_buf*()

Returns a pointer to the output stream buffer associated with the debug context.
There may not necessarily be a stream buffer if the stream has been set
by the user.

This is obsolete, replaced by "Log":log.html functionality.

h3(#DebugContext_hasstream). DebugContext#has_stream

 Boolean *has_stream*()

Returns true if there is a stream currently associated
with the debug context.

This is obsolete, replaced by "Log":log.html functionality.

h4. See also

"DebugContext#set_stream":debugcontext.html#DebugContext_setstream, "DebugContext#get_stream":debugcontext.html#DebugContext_getstream

h3(#DebugContext_printclasses). DebugContext#print_classes

 Boolean *print_classes*()

Prints a list of the classes declared in this application, giving derivation
and whether instances of this class can be dynamically created.

h4. See also

"DebugContext#print_statistics":debugcontext.html#DebugContext_printstatistics

h3(#DebugContext_printstatistics). DebugContext#print_statistics

 Boolean *print_statistics*(%(arg-type)Boolean% detailed = true)

Performs a statistics analysis from the currently set checkpoint, writing
to the current debug stream. The number of object and non-object
allocations is printed, together with the total size.

h4. Parameters

* _detailed_ If true, the function will also print how many
objects of each class have been allocated, and the space taken by
these class instances.

h4. See also

"DebugContext#print_statistics":debugcontext.html#DebugContext_printstatistics

h3(#DebugContext_setcheckpoint). DebugContext#set_checkpoint

  *set_checkpoint*(%(arg-type)Boolean% all = false)

Sets the current checkpoint: Dump and PrintStatistics operations will
be performed from this point on. This allows you to ignore allocations
that have been performed up to this point.

h4. Parameters

* _all_ If true, the checkpoint is reset to include all
memory allocations since the program started.

h3(#DebugContext_setcheckprevious). DebugContext#set_check_previous

  *set_check_previous*(%(arg-type)Boolean% check)

Tells the memory allocator to check all previous memory blocks for errors.
By default, this is false since it slows down execution considerably.

h4. See also

"DebugContext#get_check_previous":debugcontext.html#DebugContext_getcheckprevious

h3(#DebugContext_setdebugmode). DebugContext#set_debug_mode

  *set_debug_mode*(%(arg-type)Boolean% debug)

Sets the debug mode on or off. If debug mode is on, the Object new and delete
operators store or use information about memory allocation. Otherwise,
a straight malloc and free will be performed by these operators.

By default, debug mode is on if __WXDEBUG__ is defined. If the application
uses this function, it should make sure that all object memory allocated
is deallocated with the same value of debug mode. Otherwise, the
delete operator might try to look for memory information that does not
exist.

h4. See also

"DebugContext#get_debug_mode":debugcontext.html#DebugContext_getdebugmode

h3(#DebugContext_setfile). DebugContext#set_file

 Boolean *set_file*(%(arg-type)String% filename)

Sets the current debug file and creates a stream. This will delete any existing
stream and stream buffer. By default, the debug context stream
outputs to the debugger (Windows) or standard error (other platforms).

h3(#DebugContext_setlevel). DebugContext#set_level

  *set_level*(%(arg-type)Integer% level)

Sets the debug level (default 1). The debug level is used by the TraceLevel function and
the WXTRACELEVEL macro to specify how detailed the trace information is; setting
a different level will only have an effect if trace statements in the application
specify a value other than one.

This is obsolete, replaced by "Log":log.html functionality.

h4. See also

"DebugContext#get_level":debugcontext.html#DebugContext_getlevel

h3(#DebugContext_setstandarderror). DebugContext#set_standard_error

 Boolean *set_standard_error*()

Sets the debugging stream to be the debugger (Windows) or standard error (other platforms).
This is the default setting. The existing stream will be flushed and deleted.

This is obsolete, replaced by "Log":log.html functionality.

h3(#DebugContext_setstream). DebugContext#set_stream

  *set_stream*(%(arg-type)ostream% stream,  %(arg-type)streambuf% streamBuf = nil)

Sets the stream and optionally, stream buffer associated with the debug context.
This operation flushes and deletes the existing stream (and stream buffer if any).

This is obsolete, replaced by "Log":log.html functionality.

h4. Parameters

* _stream_ Stream to associate with the debug context. Do not set this to NULL.
* _streamBuf_ Stream buffer to associate with the debug context.

h4. See also

"DebugContext#get_stream":debugcontext.html#DebugContext_getstream, "DebugContext#has_stream":debugcontext.html#DebugContext_hasstream

