README for wxruby-swig
Version 0.0.19-pre

This is a very early release of a swig-based version 
of wxRuby. It can run the "minimal" sample. It only 
supports about 40 classes, compared to 139 in wxRuby 0.3, 
and over 300 in all of wxWidgets.

It is released under a permissive MIT-style license.

There are no binaries. You must build it from source.


WHATS NEW:
- Added XRC support (you must have WXRUBY_XRC=YES in your 
  environment to enable this option)
- Integrated several fixes from Sean Long
- No longer extract wx API from an XML file
  

REQUIREMENTS:

- wxWindows 2.4 SDK
- rake (http://rake.rubyforge.org/)
- OPTIONAL: SWIG 1.3.22 or later
  Swig'd .cpp and .h files are included in this package, 
  so you don't actually need SWIG.
  Note: If you use SWIG, it *MUST* be 1.3.22 or later,
  which includes the patch to create directors for 
  classes with virtual destructors but no virtual methods.


INSTALLATION:

No binary builds are available. Source code can be 
retrieved from CVS at:
  http://rubyforge.org/scm/?group_id=35
  
If you intend to perform the SWIG step yourself, you 
will need SWIG 1.3.22 or later. Earlier versions will 
not work correctly.

To use SWIG, you will also need to set the following 
environment variable on your system: WXRUBY_SWIG=YES

Otherwise, the rakefile will trust that the src/ 
directory already contains all the swigged output.
  


BUILDING:

There is no ./configure step, nor do you need to 
run ruby extconf.rb. 

From the top-level directory (typically wxruby-swig/), 
start the rake build with the command:
  rake
  
You may need to edit the appropriate platform-dependent 
rake file if your system is not yet supported, or if it
is unusual. These files are found in the rake subdirectory:

  Mac OSX:              rakemacosx.rb
  MS Windows VC++:      rakemswin.rb
  MS Windows BC++:      rakebccwin.rb
  MS Windows MingGW:    rakemingw.rb
  MS Windows Cygwin:    rakecygwin.rb
  NetBSD:               rakenetbsd.rb

When editing a platform-dependent rakefile, you might 
only need to set one or more of the following variables:
    $extra_cppflags
    $extra_ldflags
    $extra_objs
    $extra_libs


TESTING:

NOTE: For now, you must require 'wx' instead of 'wxruby'
in any apps. This allows you to have the real wxRuby 
and this wxRuby-SWIG on your system at the same time.

Very few classes are supported, but each class supports 
almost all of the available methods. You can try the samples:
  ruby samples/test.rb
  ruby samples/minimal/nothing.rb
  ruby samples/minimal/minimal.rb
  


NOTES:
- Uninitialized client data will have the value (false), 
  not (nil). This is a change from wxRuby 0.3 and earlier.
- wxDateTime has not been wrapped. Use Ruby's DateTime 
  whenever a wxDateTime is specified.
- wxString has not been wrapped. Use a normal Ruby String
  whenever a wxString is specified.
- log_message and log_status take a single string parameter, 
  rather than a format string followed by additional values 
  to be inserted.
- The following classes are supported:
    App.i               CheckBox.i          Frame.i       Size.i
    Bitmap.i            Choice.i            GDIObject.i   Sizer.i
    BitmapButton.i      CloseEvent.i        Icon.i        StaticText.i
    BoxSizer.i          CommandEvent.i      Menu.i        UpdateUIEvent.i
    Brush.i             Control.i           MenuBar.i     Window.i
    Button.i            ControlWithItems.i  Object.i      WindowDC.i
    CalendarCtrl.i      DC.i                PaintDC.i     
    CalendarDateAttr.i  Dialog.i            PaintEvent.i
    CalendarEvent.i     Event.i             Panel.i
    Caret.i             EvtHandler.i        Point.i

  

LEAD MAINTAINER:
  Kevin Smith
  http://qualitycode.com
  mailto:wxruby@qualitycode.com
