/**********************************************************************

  const.cpp -

  $Author$
  $Date$
  created at: 2003-04-14 11:02

  Copyright (C) 2003  Kevin Smith

**********************************************************************/


#include "wx.h"
#include "wx/fdrepdlg.h"
#include "wx/html/htmlwin.h"
#include "wx/tglbtn.h"
#include "wx/calctrl.h"
#include "wx/artprov.h"
#include "wx/listctrl.h"
#include "wx/imaglist.h"
#include "wx/socket.h"
#include "wx/url.h"
#include "wx/splitter.h"
#include "wx/dnd.h"


#include "bitmap.h"
#include "point.h"
#include "size.h"
#include "date.h"
#include "colour.h"
#include "cursor.h"
#include "pen.h"
#include "font.h"
#include "brush.h"

void SetConstants() {
    extern VALUE mWx;
    rb_define_const(mWx,"BU_LEFT", INT2NUM(wxBU_LEFT));
    rb_define_const(mWx,"BU_RIGHT", INT2NUM(wxBU_RIGHT));
    rb_define_const(mWx,"BU_TOP", INT2NUM(wxBU_TOP));
    rb_define_const(mWx,"BU_BOTTOM", INT2NUM(wxBU_BOTTOM));
    rb_define_const(mWx,"BU_EXACTFIT", INT2NUM(wxBU_EXACTFIT));
    rb_define_const(mWx,"NOT_FOUND", INT2NUM(wxNOT_FOUND));
    rb_define_const(mWx,"VSCROLL", INT2NUM(wxVSCROLL));
    rb_define_const(mWx,"HSCROLL", INT2NUM(wxHSCROLL));
    rb_define_const(mWx,"CAPTION", INT2NUM(wxCAPTION));
    rb_define_const(mWx,"DOUBLE_BORDER", INT2NUM(wxDOUBLE_BORDER));
    rb_define_const(mWx,"SUNKEN_BORDER", INT2NUM(wxSUNKEN_BORDER));
    rb_define_const(mWx,"RAISED_BORDER", INT2NUM(wxRAISED_BORDER));
    rb_define_const(mWx,"BORDER", INT2NUM(wxBORDER));
    rb_define_const(mWx,"SIMPLE_BORDER", INT2NUM(wxSIMPLE_BORDER));
    rb_define_const(mWx,"STATIC_BORDER", INT2NUM(wxSTATIC_BORDER));
    rb_define_const(mWx,"TRANSPARENT_WINDOW", INT2NUM(wxTRANSPARENT_WINDOW));
    rb_define_const(mWx,"NO_BORDER", INT2NUM(wxNO_BORDER));
    rb_define_const(mWx,"USER_COLOURS", INT2NUM(wxUSER_COLOURS));
    rb_define_const(mWx,"NO_3D", INT2NUM(wxNO_3D));
    rb_define_const(mWx,"TAB_TRAVERSAL", INT2NUM(wxTAB_TRAVERSAL));
    rb_define_const(mWx,"WANTS_CHARS", INT2NUM(wxWANTS_CHARS));
    rb_define_const(mWx,"POPUP_WINDOW", INT2NUM(wxPOPUP_WINDOW));
    rb_define_const(mWx,"HORIZONTAL", INT2NUM(wxHORIZONTAL));
    rb_define_const(mWx,"VERTICAL", INT2NUM(wxVERTICAL));
    rb_define_const(mWx,"BOTH", INT2NUM(wxBOTH));
    rb_define_const(mWx,"CENTER_FRAME", INT2NUM(wxCENTER_FRAME));
    rb_define_const(mWx,"CENTRE_ON_SCREEN", INT2NUM(wxCENTRE_ON_SCREEN));
    rb_define_const(mWx,"CENTER_ON_SCREEN", INT2NUM(wxCENTER_ON_SCREEN));
    rb_define_const(mWx,"STAY_ON_TOP", INT2NUM(wxSTAY_ON_TOP));
    rb_define_const(mWx,"ICONIZE", INT2NUM(wxICONIZE));
    rb_define_const(mWx,"MINIMIZE", INT2NUM(wxMINIMIZE));
    rb_define_const(mWx,"MAXIMIZE", INT2NUM(wxMAXIMIZE));
    rb_define_const(mWx,"THICK_FRAME", INT2NUM(wxTHICK_FRAME));
    rb_define_const(mWx,"SYSTEM_MENU", INT2NUM(wxSYSTEM_MENU));
    rb_define_const(mWx,"MINIMIZE_BOX", INT2NUM(wxMINIMIZE_BOX));
    rb_define_const(mWx,"MAXIMIZE_BOX", INT2NUM(wxMAXIMIZE_BOX));
    rb_define_const(mWx,"TINY_CAPTION_HORIZ", INT2NUM(wxTINY_CAPTION_HORIZ));
    rb_define_const(mWx,"TINY_CAPTION_VERT", INT2NUM(wxTINY_CAPTION_VERT));
    rb_define_const(mWx,"RESIZE_BOX", INT2NUM(wxRESIZE_BOX));
    rb_define_const(mWx,"RESIZE_BORDER", INT2NUM(wxRESIZE_BORDER));
    rb_define_const(mWx,"DIALOG_MODAL", INT2NUM(wxDIALOG_MODAL));
    rb_define_const(mWx,"DIALOG_MODELESS", INT2NUM(wxDIALOG_MODELESS));
    rb_define_const(mWx,"DIALOG_NO_PARENT", INT2NUM(wxDIALOG_NO_PARENT));
    rb_define_const(mWx,"DEFAULT_FRAME_STYLE", INT2NUM(wxDEFAULT_FRAME_STYLE));
    rb_define_const(mWx,"DEFAULT_DIALOG_STYLE", INT2NUM(wxDEFAULT_DIALOG_STYLE));
    rb_define_const(mWx,"FRAME_TOOL_WINDOW", INT2NUM(wxFRAME_TOOL_WINDOW));
    rb_define_const(mWx,"FRAME_FLOAT_ON_PARENT", INT2NUM(wxFRAME_FLOAT_ON_PARENT));
    rb_define_const(mWx,"FRAME_NO_WINDOW_MENU", INT2NUM(wxFRAME_NO_WINDOW_MENU));
    rb_define_const(mWx,"FRAME_NO_TASKBAR", INT2NUM(wxFRAME_NO_TASKBAR));
    rb_define_const(mWx,"ED_CLIENT_MARGIN", INT2NUM(wxED_CLIENT_MARGIN));
    rb_define_const(mWx,"ED_BUTTONS_BOTTOM", INT2NUM(wxED_BUTTONS_BOTTOM));
    rb_define_const(mWx,"ED_BUTTONS_RIGHT", INT2NUM(wxED_BUTTONS_RIGHT));
    rb_define_const(mWx,"ED_STATIC_LINE", INT2NUM(wxED_STATIC_LINE));
    rb_define_const(mWx,"EXT_DIALOG_STYLE", INT2NUM(wxEXT_DIALOG_STYLE));
    rb_define_const(mWx,"CLIP_CHILDREN", INT2NUM(wxCLIP_CHILDREN));
    rb_define_const(mWx,"CLIP_SIBLINGS", INT2NUM(wxCLIP_SIBLINGS));
    rb_define_const(mWx,"RETAINED", INT2NUM(wxRETAINED));
    rb_define_const(mWx,"BACKINGSTORE", INT2NUM(wxBACKINGSTORE));
    rb_define_const(mWx,"TB_3DBUTTONS", INT2NUM(wxTB_3DBUTTONS));
    rb_define_const(mWx,"TB_HORIZONTAL", INT2NUM(wxTB_HORIZONTAL));
    rb_define_const(mWx,"TB_VERTICAL", INT2NUM(wxTB_VERTICAL));
    rb_define_const(mWx,"TB_FLAT", INT2NUM(wxTB_FLAT));
    rb_define_const(mWx,"TB_DOCKABLE", INT2NUM(wxTB_DOCKABLE));
    rb_define_const(mWx,"TB_NOICONS", INT2NUM(wxTB_NOICONS));
    rb_define_const(mWx,"TB_TEXT", INT2NUM(wxTB_TEXT));
    rb_define_const(mWx,"TB_NODIVIDER", INT2NUM(wxTB_NODIVIDER));
    rb_define_const(mWx,"TB_NOALIGN", INT2NUM(wxTB_NOALIGN));
    rb_define_const(mWx,"COLOURED", INT2NUM(wxCOLOURED));
    rb_define_const(mWx,"FIXED_LENGTH", INT2NUM(wxFIXED_LENGTH));
    rb_define_const(mWx,"ALIGN_LEFT", INT2NUM(wxALIGN_LEFT));
    rb_define_const(mWx,"ALIGN_CENTER_HORIZONTAL", INT2NUM(wxALIGN_CENTER_HORIZONTAL));
    rb_define_const(mWx,"ALIGN_CENTRE_HORIZONTAL", INT2NUM(wxALIGN_CENTRE_HORIZONTAL));
    rb_define_const(mWx,"ALIGN_RIGHT", INT2NUM(wxALIGN_RIGHT));
    rb_define_const(mWx,"ALIGN_BOTTOM", INT2NUM(wxALIGN_BOTTOM));
    rb_define_const(mWx,"ALIGN_CENTER_VERTICAL", INT2NUM(wxALIGN_CENTER_VERTICAL));
    rb_define_const(mWx,"ALIGN_CENTRE_VERTICAL", INT2NUM(wxALIGN_CENTRE_VERTICAL));
    rb_define_const(mWx,"ALIGN_TOP", INT2NUM(wxALIGN_TOP));
    rb_define_const(mWx,"ALIGN_CENTER", INT2NUM(wxALIGN_CENTER));
    rb_define_const(mWx,"ALIGN_CENTRE", INT2NUM(wxALIGN_CENTRE));
    rb_define_const(mWx,"SHAPED", INT2NUM(wxSHAPED));
    rb_define_const(mWx,"ADJUST_MINSIZE", INT2NUM(wxADJUST_MINSIZE));
    rb_define_const(mWx,"LB_NEEDED_SB", INT2NUM(wxLB_NEEDED_SB));
    rb_define_const(mWx,"LB_ALWAYS_SB", INT2NUM(wxLB_ALWAYS_SB));
    rb_define_const(mWx,"LB_SORT", INT2NUM(wxLB_SORT));
    rb_define_const(mWx,"LB_SINGLE", INT2NUM(wxLB_SINGLE));
    rb_define_const(mWx,"LB_MULTIPLE", INT2NUM(wxLB_MULTIPLE));
    rb_define_const(mWx,"LB_EXTENDED", INT2NUM(wxLB_EXTENDED));
    rb_define_const(mWx,"LB_OWNERDRAW", INT2NUM(wxLB_OWNERDRAW));
    rb_define_const(mWx,"LB_HSCROLL", INT2NUM(wxLB_HSCROLL));
    rb_define_const(mWx,"PROCESS_ENTER", INT2NUM(wxPROCESS_ENTER));
    rb_define_const(mWx,"PASSWORD", INT2NUM(wxPASSWORD));
    rb_define_const(mWx,"TE_READONLY", INT2NUM(wxTE_READONLY));
    rb_define_const(mWx,"TE_MULTILINE", INT2NUM(wxTE_MULTILINE));
    rb_define_const(mWx,"TE_PROCESS_TAB", INT2NUM(wxTE_PROCESS_TAB));
    rb_define_const(mWx,"TE_RICH", INT2NUM(wxTE_RICH));
    rb_define_const(mWx,"TE_NO_VSCROLL", INT2NUM(wxTE_NO_VSCROLL));
    rb_define_const(mWx,"TE_AUTO_SCROLL", INT2NUM(wxTE_AUTO_SCROLL));
    rb_define_const(mWx,"TE_PROCESS_ENTER", INT2NUM(wxTE_PROCESS_ENTER));
    rb_define_const(mWx,"TE_PASSWORD", INT2NUM(wxTE_PASSWORD));
    rb_define_const(mWx,"TE_AUTO_URL", INT2NUM(wxTE_AUTO_URL));
    rb_define_const(mWx,"TE_NOHIDESEL", INT2NUM(wxTE_NOHIDESEL));
    rb_define_const(mWx,"TE_DONTWRAP", INT2NUM(wxTE_DONTWRAP));
    rb_define_const(mWx,"TE_LINEWRAP", INT2NUM(wxTE_LINEWRAP));
    rb_define_const(mWx,"TE_WORDWRAP", INT2NUM(wxTE_WORDWRAP));
    rb_define_const(mWx,"CB_SIMPLE", INT2NUM(wxCB_SIMPLE));
    rb_define_const(mWx,"CB_DROPDOWN", INT2NUM(wxCB_DROPDOWN));
    rb_define_const(mWx,"CB_SORT", INT2NUM(wxCB_SORT));
    rb_define_const(mWx,"CB_READONLY", INT2NUM(wxCB_READONLY));
    rb_define_const(mWx,"RA_HORIZONTAL", INT2NUM(wxRA_HORIZONTAL));
    rb_define_const(mWx,"RA_VERTICAL", INT2NUM(wxRA_VERTICAL));
    rb_define_const(mWx,"RA_SPECIFY_ROWS", INT2NUM(wxRA_SPECIFY_ROWS));
    rb_define_const(mWx,"RA_SPECIFY_COLS", INT2NUM(wxRA_SPECIFY_COLS));
    rb_define_const(mWx,"RB_GROUP", INT2NUM(wxRB_GROUP));
    rb_define_const(mWx,"GA_PROGRESSBAR", INT2NUM(wxGA_PROGRESSBAR));
    rb_define_const(mWx,"GA_HORIZONTAL", INT2NUM(wxGA_HORIZONTAL));
    rb_define_const(mWx,"GA_VERTICAL", INT2NUM(wxGA_VERTICAL));
    rb_define_const(mWx,"GA_SMOOTH", INT2NUM(wxGA_SMOOTH));
    rb_define_const(mWx,"SL_HORIZONTAL", INT2NUM(wxSL_HORIZONTAL));
    rb_define_const(mWx,"SL_VERTICAL", INT2NUM(wxSL_VERTICAL));
    rb_define_const(mWx,"SL_AUTOTICKS", INT2NUM(wxSL_AUTOTICKS));
    rb_define_const(mWx,"SL_LABELS", INT2NUM(wxSL_LABELS));
    rb_define_const(mWx,"SL_LEFT", INT2NUM(wxSL_LEFT));
    rb_define_const(mWx,"SL_TOP", INT2NUM(wxSL_TOP));
    rb_define_const(mWx,"SL_RIGHT", INT2NUM(wxSL_RIGHT));
    rb_define_const(mWx,"SL_BOTTOM", INT2NUM(wxSL_BOTTOM));
    rb_define_const(mWx,"SL_BOTH", INT2NUM(wxSL_BOTH));
    rb_define_const(mWx,"SL_SELRANGE", INT2NUM(wxSL_SELRANGE));
    rb_define_const(mWx,"SB_HORIZONTAL", INT2NUM(wxSB_HORIZONTAL));
    rb_define_const(mWx,"SB_VERTICAL", INT2NUM(wxSB_VERTICAL));
    rb_define_const(mWx,"ST_SIZEGRIP", INT2NUM(wxST_SIZEGRIP));
    rb_define_const(mWx,"ST_NO_AUTORESIZE", INT2NUM(wxST_NO_AUTORESIZE));
    rb_define_const(mWx,"BU_AUTODRAW", INT2NUM(wxBU_AUTODRAW));
    rb_define_const(mWx,"BU_NOAUTODRAW", INT2NUM(wxBU_NOAUTODRAW));
    rb_define_const(mWx,"SP_VERTICAL", INT2NUM(wxSP_VERTICAL));
    rb_define_const(mWx,"SP_HORIZONTAL", INT2NUM(wxSP_HORIZONTAL));
    rb_define_const(mWx,"SP_ARROW_KEYS", INT2NUM(wxSP_ARROW_KEYS));
    rb_define_const(mWx,"SP_WRAP", INT2NUM(wxSP_WRAP));
    rb_define_const(mWx,"SP_NOBORDER", INT2NUM(wxSP_NOBORDER));
    rb_define_const(mWx,"SP_3D", INT2NUM(wxSP_3D));
    rb_define_const(mWx,"SP_3DSASH", INT2NUM(wxSP_3DSASH));
    rb_define_const(mWx,"SP_3DBORDER", INT2NUM(wxSP_3DBORDER));
    rb_define_const(mWx,"SP_FULLSASH", INT2NUM(wxSP_FULLSASH));
    rb_define_const(mWx,"SP_BORDER", INT2NUM(wxSP_BORDER));
    rb_define_const(mWx,"SP_LIVE_UPDATE", INT2NUM(wxSP_LIVE_UPDATE));
    rb_define_const(mWx,"SP_PERMIT_UNSPLIT", INT2NUM(wxSP_PERMIT_UNSPLIT));
    rb_define_const(mWx,"SPLIT_HORIZONTAL", INT2NUM(wxSPLIT_HORIZONTAL));
    rb_define_const(mWx,"SPLIT_VERTICAL", INT2NUM(wxSPLIT_VERTICAL));
    rb_define_const(mWx,"SPLIT_DRAG_NONE", INT2NUM(wxSPLIT_DRAG_NONE));
    rb_define_const(mWx,"SPLIT_DRAG_DRAGGING", INT2NUM(wxSPLIT_DRAG_DRAGGING));
    rb_define_const(mWx,"SPLIT_DRAG_LEFT_DOWN", INT2NUM(wxSPLIT_DRAG_LEFT_DOWN));
    rb_define_const(mWx,"FLOOD_SURFACE", INT2NUM(wxFLOOD_SURFACE));
    rb_define_const(mWx,"FLOOD_BORDER", INT2NUM(wxFLOOD_BORDER));
    rb_define_const(mWx,"ODDEVEN_RULE", INT2NUM(wxODDEVEN_RULE));
    rb_define_const(mWx,"WINDING_RULE", INT2NUM(wxWINDING_RULE));
    rb_define_const(mWx,"TOOL_TOP", INT2NUM(wxTOOL_TOP));
    rb_define_const(mWx,"TOOL_BOTTOM", INT2NUM(wxTOOL_BOTTOM));
    rb_define_const(mWx,"TOOL_LEFT", INT2NUM(wxTOOL_LEFT));
    rb_define_const(mWx,"TOOL_RIGHT", INT2NUM(wxTOOL_RIGHT));
    rb_define_const(mWx,"OK", INT2NUM(wxOK));
    rb_define_const(mWx,"YES_NO", INT2NUM(wxYES_NO));
    rb_define_const(mWx,"CANCEL", INT2NUM(wxCANCEL));
    rb_define_const(mWx,"YES", INT2NUM(wxYES));
    rb_define_const(mWx,"NO", INT2NUM(wxNO));
    rb_define_const(mWx,"NO_DEFAULT", INT2NUM(wxNO_DEFAULT));
    rb_define_const(mWx,"YES_DEFAULT", INT2NUM(wxYES_DEFAULT));
    rb_define_const(mWx,"ICON_EXCLAMATION", INT2NUM(wxICON_EXCLAMATION));
    rb_define_const(mWx,"ICON_HAND", INT2NUM(wxICON_HAND));
    rb_define_const(mWx,"ICON_QUESTION", INT2NUM(wxICON_QUESTION));
    rb_define_const(mWx,"ICON_INFORMATION", INT2NUM(wxICON_INFORMATION));
    rb_define_const(mWx,"ICON_STOP", INT2NUM(wxICON_STOP));
    rb_define_const(mWx,"ICON_ASTERISK", INT2NUM(wxICON_ASTERISK));
    rb_define_const(mWx,"ICON_MASK", INT2NUM(wxICON_MASK));
    rb_define_const(mWx,"ICON_WARNING", INT2NUM(wxICON_WARNING));
    rb_define_const(mWx,"ICON_ERROR", INT2NUM(wxICON_ERROR));
    rb_define_const(mWx,"FORWARD", INT2NUM(wxFORWARD));
    rb_define_const(mWx,"BACKWARD", INT2NUM(wxBACKWARD));
    rb_define_const(mWx,"RESET", INT2NUM(wxRESET));
    rb_define_const(mWx,"HELP", INT2NUM(wxHELP));
    rb_define_const(mWx,"MORE", INT2NUM(wxMORE));
    rb_define_const(mWx,"SETUP", INT2NUM(wxSETUP));
    rb_define_const(mWx,"SIZE_AUTO_WIDTH", INT2NUM(wxSIZE_AUTO_WIDTH));
    rb_define_const(mWx,"SIZE_AUTO_HEIGHT", INT2NUM(wxSIZE_AUTO_HEIGHT));
    rb_define_const(mWx,"SIZE_AUTO", INT2NUM(wxSIZE_AUTO));
    rb_define_const(mWx,"SIZE_USE_EXISTING", INT2NUM(wxSIZE_USE_EXISTING));
    rb_define_const(mWx,"SIZE_ALLOW_MINUS_ONE", INT2NUM(wxSIZE_ALLOW_MINUS_ONE));
    rb_define_const(mWx,"PORTRAIT", INT2NUM(wxPORTRAIT));
    rb_define_const(mWx,"LANDSCAPE", INT2NUM(wxLANDSCAPE));
    rb_define_const(mWx,"PRINT_QUALITY_HIGH", INT2NUM(wxPRINT_QUALITY_HIGH));
    rb_define_const(mWx,"PRINT_QUALITY_MEDIUM", INT2NUM(wxPRINT_QUALITY_MEDIUM));
    rb_define_const(mWx,"PRINT_QUALITY_LOW", INT2NUM(wxPRINT_QUALITY_LOW));
    rb_define_const(mWx,"PRINT_QUALITY_DRAFT", INT2NUM(wxPRINT_QUALITY_DRAFT));
    rb_define_const(mWx,"ID_OPEN", INT2NUM(wxID_OPEN));
    rb_define_const(mWx,"ID_CLOSE", INT2NUM(wxID_CLOSE));
    rb_define_const(mWx,"ID_NEW", INT2NUM(wxID_NEW));
    rb_define_const(mWx,"ID_SAVE", INT2NUM(wxID_SAVE));
    rb_define_const(mWx,"ID_SAVEAS", INT2NUM(wxID_SAVEAS));
    rb_define_const(mWx,"ID_REVERT", INT2NUM(wxID_REVERT));
    rb_define_const(mWx,"ID_EXIT", INT2NUM(wxID_EXIT));
    rb_define_const(mWx,"ID_UNDO", INT2NUM(wxID_UNDO));
    rb_define_const(mWx,"ID_REDO", INT2NUM(wxID_REDO));
    rb_define_const(mWx,"ID_HELP", INT2NUM(wxID_HELP));
    rb_define_const(mWx,"ID_PRINT", INT2NUM(wxID_PRINT));
    rb_define_const(mWx,"ID_PRINT_SETUP", INT2NUM(wxID_PRINT_SETUP));
    rb_define_const(mWx,"ID_PREVIEW", INT2NUM(wxID_PREVIEW));
    rb_define_const(mWx,"ID_ABOUT", INT2NUM(wxID_ABOUT));
    rb_define_const(mWx,"ID_HELP_CONTENTS", INT2NUM(wxID_HELP_CONTENTS));
    rb_define_const(mWx,"ID_HELP_COMMANDS", INT2NUM(wxID_HELP_COMMANDS));
    rb_define_const(mWx,"ID_HELP_PROCEDURES", INT2NUM(wxID_HELP_PROCEDURES));
    rb_define_const(mWx,"ID_HELP_CONTEXT", INT2NUM(wxID_HELP_CONTEXT));
    rb_define_const(mWx,"ID_CUT", INT2NUM(wxID_CUT));
    rb_define_const(mWx,"ID_COPY", INT2NUM(wxID_COPY));
    rb_define_const(mWx,"ID_PASTE", INT2NUM(wxID_PASTE));
    rb_define_const(mWx,"ID_CLEAR", INT2NUM(wxID_CLEAR));
    rb_define_const(mWx,"ID_FIND", INT2NUM(wxID_FIND));
    rb_define_const(mWx,"ID_DUPLICATE", INT2NUM(wxID_DUPLICATE));
    rb_define_const(mWx,"ID_SELECTALL", INT2NUM(wxID_SELECTALL));
    rb_define_const(mWx,"ID_FILE1", INT2NUM(wxID_FILE1));
    rb_define_const(mWx,"ID_FILE2", INT2NUM(wxID_FILE2));
    rb_define_const(mWx,"ID_FILE3", INT2NUM(wxID_FILE3));
    rb_define_const(mWx,"ID_FILE4", INT2NUM(wxID_FILE4));
    rb_define_const(mWx,"ID_FILE5", INT2NUM(wxID_FILE5));
    rb_define_const(mWx,"ID_FILE6", INT2NUM(wxID_FILE6));
    rb_define_const(mWx,"ID_FILE7", INT2NUM(wxID_FILE7));
    rb_define_const(mWx,"ID_FILE8", INT2NUM(wxID_FILE8));
    rb_define_const(mWx,"ID_FILE9", INT2NUM(wxID_FILE9));
    rb_define_const(mWx,"ID_OK", INT2NUM(wxID_OK));
    rb_define_const(mWx,"ID_CANCEL", INT2NUM(wxID_CANCEL));
    rb_define_const(mWx,"ID_APPLY", INT2NUM(wxID_APPLY));
    rb_define_const(mWx,"ID_YES", INT2NUM(wxID_YES));
    rb_define_const(mWx,"ID_NO", INT2NUM(wxID_NO));
    rb_define_const(mWx,"ID_STATIC", INT2NUM(wxID_STATIC));
    rb_define_const(mWx,"ID_SEPARATOR", INT2NUM(wxID_SEPARATOR));
    rb_define_const(mWx,"ID_FORWARD", INT2NUM(wxID_FORWARD));
    rb_define_const(mWx,"ID_BACKWARD", INT2NUM(wxID_BACKWARD));
    rb_define_const(mWx,"ID_SETUP", INT2NUM(wxID_SETUP));
    rb_define_const(mWx,"ID_MORE", INT2NUM(wxID_MORE));
    rb_define_const(mWx,"ID_HIGHEST", INT2NUM(wxID_HIGHEST));

    rb_define_const(mWx,"ITEM_SEPARATOR", INT2NUM(wxITEM_SEPARATOR));
    rb_define_const(mWx,"ITEM_NORMAL", INT2NUM(wxITEM_NORMAL));
    rb_define_const(mWx,"ITEM_CHECK", INT2NUM(wxITEM_CHECK));
    rb_define_const(mWx,"ITEM_RADIO", INT2NUM(wxITEM_RADIO));
    rb_define_const(mWx,"ITEM_MAX", INT2NUM(wxITEM_MAX));

    rb_define_const(mWx,"OPEN", INT2NUM(wxOPEN));
    rb_define_const(mWx,"SAVE", INT2NUM(wxSAVE));
    rb_define_const(mWx,"HIDE_READONLY", INT2NUM(wxHIDE_READONLY));
    rb_define_const(mWx,"OVERWRITE_PROMPT", INT2NUM(wxOVERWRITE_PROMPT));
    rb_define_const(mWx,"FILE_MUST_EXIST", INT2NUM(wxFILE_MUST_EXIST));
    rb_define_const(mWx,"MULTIPLE", INT2NUM(wxMULTIPLE));
    rb_define_const(mWx,"CHANGE_DIR", INT2NUM(wxCHANGE_DIR));
    rb_define_const(mWx,"ACCEL_ALT", INT2NUM(wxACCEL_ALT));
    rb_define_const(mWx,"ACCEL_CTRL", INT2NUM(wxACCEL_CTRL));
    rb_define_const(mWx,"ACCEL_SHIFT", INT2NUM(wxACCEL_SHIFT));
    rb_define_const(mWx,"ACCEL_NORMAL", INT2NUM(wxACCEL_NORMAL));
    rb_define_const(mWx,"PD_AUTO_HIDE", INT2NUM(wxPD_AUTO_HIDE));
    rb_define_const(mWx,"PD_APP_MODAL", INT2NUM(wxPD_APP_MODAL));
    rb_define_const(mWx,"PD_CAN_ABORT", INT2NUM(wxPD_CAN_ABORT));
    rb_define_const(mWx,"PD_ELAPSED_TIME", INT2NUM(wxPD_ELAPSED_TIME));
    rb_define_const(mWx,"PD_ESTIMATED_TIME", INT2NUM(wxPD_ESTIMATED_TIME));
    rb_define_const(mWx,"PD_REMAINING_TIME", INT2NUM(wxPD_REMAINING_TIME));
    rb_define_const(mWx,"MENU_TEAROFF", INT2NUM(wxMENU_TEAROFF));
    rb_define_const(mWx,"MB_DOCKABLE", INT2NUM(wxMB_DOCKABLE));
    rb_define_const(mWx,"NO_FULL_REPAINT_ON_RESIZE", INT2NUM(wxNO_FULL_REPAINT_ON_RESIZE));
    rb_define_const(mWx,"CENTRE", INT2NUM(wxCENTRE));
    rb_define_const(mWx,"CENTER", INT2NUM(wxCENTER));

	rb_define_const(mWx,"ALL", INT2NUM(wxALL));
    rb_define_const(mWx,"NORTH", INT2NUM(wxNORTH));
    rb_define_const(mWx,"SOUTH", INT2NUM(wxSOUTH));
    rb_define_const(mWx,"EAST", INT2NUM(wxEAST));
    rb_define_const(mWx,"WEST", INT2NUM(wxWEST));
    rb_define_const(mWx,"DIRECTION_LEFT", INT2NUM(wxLEFT));
    rb_define_const(mWx,"DIRECTION_RIGHT", INT2NUM(wxRIGHT));
    rb_define_const(mWx,"DIRECTION_TOP", INT2NUM(wxTOP));
    rb_define_const(mWx,"DIRECTION_BOTTOM", INT2NUM(wxBOTTOM));
    rb_define_const(mWx,"DIRECTION_UP", INT2NUM(wxUP));
    rb_define_const(mWx,"DIRECTION_DOWN", INT2NUM(wxDOWN));

    rb_define_const(mWx, "LAYOUT_LEFT", INT2NUM(wxLeft));
    rb_define_const(mWx, "LAYOUT_TOP", INT2NUM(wxTop));
    rb_define_const(mWx, "LAYOUT_RIGHT", INT2NUM(wxRight));
    rb_define_const(mWx, "LAYOUT_BOTTOM", INT2NUM(wxBottom));
    rb_define_const(mWx, "LAYOUT_WIDTH", INT2NUM(wxWidth));
    rb_define_const(mWx, "LAYOUT_HEIGHT", INT2NUM(wxHeight));
    rb_define_const(mWx, "LAYOUT_CENTER", INT2NUM(wxCenter));
    rb_define_const(mWx, "LAYOUT_CENTRE", INT2NUM(wxCentre));
    rb_define_const(mWx, "LAYOUT_CENTRE_X", INT2NUM(wxCentreX));
    rb_define_const(mWx, "LAYOUT_CENTRE_Y", INT2NUM(wxCentreY));
    rb_define_const(mWx, "LAYOUT_UNCONSTRAINED", INT2NUM(wxUnconstrained));
    rb_define_const(mWx, "LAYOUT_AS_IS", INT2NUM(wxAsIs));
    rb_define_const(mWx, "LAYOUT_PERCENT_OF", INT2NUM(wxPercentOf));
    rb_define_const(mWx, "LAYOUT_ABOVE", INT2NUM(wxAbove));
    rb_define_const(mWx, "LAYOUT_BELOW", INT2NUM(wxBelow));
    rb_define_const(mWx, "LAYOUT_LEFT_OF", INT2NUM(wxLeftOf));
    rb_define_const(mWx, "LAYOUT_RIGHT_OF", INT2NUM(wxRightOf));
    rb_define_const(mWx, "LAYOUT_SAME_AS", INT2NUM(wxSameAs));
    rb_define_const(mWx, "LAYOUT_ABSOLUTE", INT2NUM(wxAbsolute));

	rb_define_const(mWx,"STRETCH_NOT", INT2NUM(wxSTRETCH_NOT));
    rb_define_const(mWx,"SHRINK", INT2NUM(wxSHRINK));
    rb_define_const(mWx,"GROW", INT2NUM(wxGROW));
    rb_define_const(mWx,"EXPAND", INT2NUM(wxEXPAND));
    rb_define_const(mWx,"NB_FIXEDWIDTH", INT2NUM(wxNB_FIXEDWIDTH));
    rb_define_const(mWx,"NB_LEFT", INT2NUM(wxNB_LEFT));
    rb_define_const(mWx,"NB_RIGHT", INT2NUM(wxNB_RIGHT));
    rb_define_const(mWx,"NB_BOTTOM", INT2NUM(wxNB_BOTTOM));
    rb_define_const(mWx,"NB_MULTILINE", INT2NUM(wxNB_MULTILINE));
    rb_define_const(mWx,"LI_HORIZONTAL", INT2NUM(wxLI_HORIZONTAL));
    rb_define_const(mWx,"LI_VERTICAL", INT2NUM(wxLI_VERTICAL));
//#if wxUSE_HTML
    rb_define_const(mWx,"HW_SCROLLBAR_NEVER", INT2NUM(wxHW_SCROLLBAR_NEVER));
    rb_define_const(mWx,"HW_SCROLLBAR_AUTO", INT2NUM(wxHW_SCROLLBAR_AUTO));
//#endif
    rb_define_const(mWx,"JOYSTICK1", INT2NUM(wxJOYSTICK1));
    rb_define_const(mWx,"JOYSTICK2", INT2NUM(wxJOYSTICK2));
    rb_define_const(mWx,"JOY_BUTTON1", INT2NUM(wxJOY_BUTTON1));
    rb_define_const(mWx,"JOY_BUTTON2", INT2NUM(wxJOY_BUTTON2));
    rb_define_const(mWx,"JOY_BUTTON3", INT2NUM(wxJOY_BUTTON3));
    rb_define_const(mWx,"JOY_BUTTON4", INT2NUM(wxJOY_BUTTON4));
    rb_define_const(mWx,"JOY_BUTTON_ANY", INT2NUM(wxJOY_BUTTON_ANY));
    rb_define_const(mWx,"WS_EX_VALIDATE_RECURSIVELY", INT2NUM(wxWS_EX_VALIDATE_RECURSIVELY));
    rb_define_const(mWx,"WS_EX_BLOCK_EVENTS", INT2NUM(wxWS_EX_BLOCK_EVENTS));
    rb_define_const(mWx,"WS_EX_TRANSIENT", INT2NUM(wxWS_EX_TRANSIENT));
    rb_define_const(mWx,"MM_TEXT", INT2NUM(wxMM_TEXT));
    rb_define_const(mWx,"MM_LOMETRIC", INT2NUM(wxMM_LOMETRIC));
    rb_define_const(mWx,"MM_HIMETRIC", INT2NUM(wxMM_HIMETRIC));
    rb_define_const(mWx,"MM_LOENGLISH", INT2NUM(wxMM_LOENGLISH));
    rb_define_const(mWx,"MM_HIENGLISH", INT2NUM(wxMM_HIENGLISH));
    rb_define_const(mWx,"MM_TWIPS", INT2NUM(wxMM_TWIPS));
    rb_define_const(mWx,"MM_ISOTROPIC", INT2NUM(wxMM_ISOTROPIC));
    rb_define_const(mWx,"MM_ANISOTROPIC", INT2NUM(wxMM_ANISOTROPIC));
    rb_define_const(mWx,"MM_POINTS", INT2NUM(wxMM_POINTS));
    rb_define_const(mWx,"MM_METRIC", INT2NUM(wxMM_METRIC));
    rb_define_const(mWx,"BORDER_DEFAULT", INT2NUM(wxBORDER_DEFAULT));
    rb_define_const(mWx,"BORDER_NONE", INT2NUM(wxBORDER_NONE));
    rb_define_const(mWx,"BORDER_STATIC", INT2NUM(wxBORDER_STATIC));
    rb_define_const(mWx,"BORDER_SIMPLE", INT2NUM(wxBORDER_SIMPLE));
    rb_define_const(mWx,"BORDER_RAISED", INT2NUM(wxBORDER_RAISED));
    rb_define_const(mWx,"BORDER_SUNKEN", INT2NUM(wxBORDER_SUNKEN));
    rb_define_const(mWx,"BORDER_DOUBLE", INT2NUM(wxBORDER_DOUBLE));
    rb_define_const(mWx,"BORDER_MASK", INT2NUM(wxBORDER_MASK));
    rb_define_const(mWx,"DEFAULT", INT2NUM(wxDEFAULT));
    rb_define_const(mWx,"DECORATIVE", INT2NUM(wxDECORATIVE));
    rb_define_const(mWx,"ROMAN", INT2NUM(wxROMAN));
    rb_define_const(mWx,"SCRIPT", INT2NUM(wxSCRIPT));
    rb_define_const(mWx,"SWISS", INT2NUM(wxSWISS));
    rb_define_const(mWx,"MODERN", INT2NUM(wxMODERN));
    rb_define_const(mWx,"TELETYPE", INT2NUM(wxTELETYPE));
    rb_define_const(mWx,"VARIABLE", INT2NUM(wxVARIABLE));
    rb_define_const(mWx,"FIXED", INT2NUM(wxFIXED));
    rb_define_const(mWx,"NORMAL", INT2NUM(wxNORMAL));
    rb_define_const(mWx,"LIGHT", INT2NUM(wxLIGHT));
    rb_define_const(mWx,"BOLD", INT2NUM(wxBOLD));
    rb_define_const(mWx,"ITALIC", INT2NUM(wxITALIC));
    rb_define_const(mWx,"SLANT", INT2NUM(wxSLANT));
    rb_define_const(mWx,"SOLID", INT2NUM(wxSOLID));
    rb_define_const(mWx,"DOT", INT2NUM(wxDOT));
    rb_define_const(mWx,"LONG_DASH", INT2NUM(wxLONG_DASH));
    rb_define_const(mWx,"SHORT_DASH", INT2NUM(wxSHORT_DASH));
    rb_define_const(mWx,"DOT_DASH", INT2NUM(wxDOT_DASH));
    rb_define_const(mWx,"USER_DASH", INT2NUM(wxUSER_DASH));
    rb_define_const(mWx,"TRANSPARENT", INT2NUM(wxTRANSPARENT));
    rb_define_const(mWx,"STIPPLE", INT2NUM(wxSTIPPLE));
    rb_define_const(mWx,"BDIAGONAL_HATCH", INT2NUM(wxBDIAGONAL_HATCH));
    rb_define_const(mWx,"CROSSDIAG_HATCH", INT2NUM(wxCROSSDIAG_HATCH));
    rb_define_const(mWx,"FDIAGONAL_HATCH", INT2NUM(wxFDIAGONAL_HATCH));
    rb_define_const(mWx,"CROSS_HATCH", INT2NUM(wxCROSS_HATCH));
    rb_define_const(mWx,"HORIZONTAL_HATCH", INT2NUM(wxHORIZONTAL_HATCH));
    rb_define_const(mWx,"VERTICAL_HATCH", INT2NUM(wxVERTICAL_HATCH));
    rb_define_const(mWx,"JOIN_BEVEL", INT2NUM(wxJOIN_BEVEL));
    rb_define_const(mWx,"JOIN_MITER", INT2NUM(wxJOIN_MITER));
    rb_define_const(mWx,"JOIN_ROUND", INT2NUM(wxJOIN_ROUND));
    rb_define_const(mWx,"CAP_ROUND", INT2NUM(wxCAP_ROUND));
    rb_define_const(mWx,"CAP_PROJECTING", INT2NUM(wxCAP_PROJECTING));
    rb_define_const(mWx,"CAP_BUTT", INT2NUM(wxCAP_BUTT));
    rb_define_const(mWx,"CLEAR", INT2NUM(wxCLEAR));
    rb_define_const(mWx,"XOR", INT2NUM(wxXOR));
    rb_define_const(mWx,"INVERT", INT2NUM(wxINVERT));
    rb_define_const(mWx,"OR_REVERSE", INT2NUM(wxOR_REVERSE));
    rb_define_const(mWx,"AND_REVERSE", INT2NUM(wxAND_REVERSE));
    rb_define_const(mWx,"COPY", INT2NUM(wxCOPY));
    rb_define_const(mWx,"AND", INT2NUM(wxAND));
    rb_define_const(mWx,"AND_INVERT", INT2NUM(wxAND_INVERT));
    rb_define_const(mWx,"NO_OP", INT2NUM(wxNO_OP));
    rb_define_const(mWx,"NOR", INT2NUM(wxNOR));
    rb_define_const(mWx,"EQUIV", INT2NUM(wxEQUIV));
    rb_define_const(mWx,"SRC_INVERT", INT2NUM(wxSRC_INVERT));
    rb_define_const(mWx,"OR_INVERT", INT2NUM(wxOR_INVERT));
    rb_define_const(mWx,"NAND", INT2NUM(wxNAND));
    rb_define_const(mWx,"OR", INT2NUM(wxOR));
    rb_define_const(mWx,"SET", INT2NUM(wxSET));
    rb_define_const(mWx,"K_BACK", INT2NUM(WXK_BACK));
    rb_define_const(mWx,"K_TAB", INT2NUM(WXK_TAB));
    rb_define_const(mWx,"K_RETURN", INT2NUM(WXK_RETURN));
    rb_define_const(mWx,"K_ESCAPE", INT2NUM(WXK_ESCAPE));
    rb_define_const(mWx,"K_SPACE", INT2NUM(WXK_SPACE));
    rb_define_const(mWx,"K_DELETE", INT2NUM(WXK_DELETE));
    rb_define_const(mWx,"K_START", INT2NUM(WXK_START));
    rb_define_const(mWx,"K_LBUTTON", INT2NUM(WXK_LBUTTON));
    rb_define_const(mWx,"K_RBUTTON", INT2NUM(WXK_RBUTTON));
    rb_define_const(mWx,"K_CANCEL", INT2NUM(WXK_CANCEL));
    rb_define_const(mWx,"K_MBUTTON", INT2NUM(WXK_MBUTTON));
    rb_define_const(mWx,"K_CLEAR", INT2NUM(WXK_CLEAR));
    rb_define_const(mWx,"K_SHIFT", INT2NUM(WXK_SHIFT));
    rb_define_const(mWx,"K_ALT", INT2NUM(WXK_ALT));
    rb_define_const(mWx,"K_CONTROL", INT2NUM(WXK_CONTROL));
    rb_define_const(mWx,"K_MENU", INT2NUM(WXK_MENU));
    rb_define_const(mWx,"K_PAUSE", INT2NUM(WXK_PAUSE));
    rb_define_const(mWx,"K_CAPITAL", INT2NUM(WXK_CAPITAL));
    rb_define_const(mWx,"K_PRIOR", INT2NUM(WXK_PRIOR));
    rb_define_const(mWx,"K_NEXT", INT2NUM(WXK_NEXT));
    rb_define_const(mWx,"K_END", INT2NUM(WXK_END));
    rb_define_const(mWx,"K_HOME", INT2NUM(WXK_HOME));
    rb_define_const(mWx,"K_LEFT", INT2NUM(WXK_LEFT));
    rb_define_const(mWx,"K_UP", INT2NUM(WXK_UP));
    rb_define_const(mWx,"K_RIGHT", INT2NUM(WXK_RIGHT));
    rb_define_const(mWx,"K_DOWN", INT2NUM(WXK_DOWN));
    rb_define_const(mWx,"K_SELECT", INT2NUM(WXK_SELECT));
    rb_define_const(mWx,"K_PRINT", INT2NUM(WXK_PRINT));
    rb_define_const(mWx,"K_EXECUTE", INT2NUM(WXK_EXECUTE));
    rb_define_const(mWx,"K_SNAPSHOT", INT2NUM(WXK_SNAPSHOT));
    rb_define_const(mWx,"K_INSERT", INT2NUM(WXK_INSERT));
    rb_define_const(mWx,"K_HELP", INT2NUM(WXK_HELP));
    rb_define_const(mWx,"K_NUMPAD0", INT2NUM(WXK_NUMPAD0));
    rb_define_const(mWx,"K_NUMPAD1", INT2NUM(WXK_NUMPAD1));
    rb_define_const(mWx,"K_NUMPAD2", INT2NUM(WXK_NUMPAD2));
    rb_define_const(mWx,"K_NUMPAD3", INT2NUM(WXK_NUMPAD3));
    rb_define_const(mWx,"K_NUMPAD4", INT2NUM(WXK_NUMPAD4));
    rb_define_const(mWx,"K_NUMPAD5", INT2NUM(WXK_NUMPAD5));
    rb_define_const(mWx,"K_NUMPAD6", INT2NUM(WXK_NUMPAD6));
    rb_define_const(mWx,"K_NUMPAD7", INT2NUM(WXK_NUMPAD7));
    rb_define_const(mWx,"K_NUMPAD8", INT2NUM(WXK_NUMPAD8));
    rb_define_const(mWx,"K_NUMPAD9", INT2NUM(WXK_NUMPAD9));
    rb_define_const(mWx,"K_MULTIPLY", INT2NUM(WXK_MULTIPLY));
    rb_define_const(mWx,"K_ADD", INT2NUM(WXK_ADD));
    rb_define_const(mWx,"K_SEPARATOR", INT2NUM(WXK_SEPARATOR));
    rb_define_const(mWx,"K_SUBTRACT", INT2NUM(WXK_SUBTRACT));
    rb_define_const(mWx,"K_DECIMAL", INT2NUM(WXK_DECIMAL));
    rb_define_const(mWx,"K_DIVIDE", INT2NUM(WXK_DIVIDE));
    rb_define_const(mWx,"K_F1", INT2NUM(WXK_F1));
    rb_define_const(mWx,"K_F2", INT2NUM(WXK_F2));
    rb_define_const(mWx,"K_F3", INT2NUM(WXK_F3));
    rb_define_const(mWx,"K_F4", INT2NUM(WXK_F4));
    rb_define_const(mWx,"K_F5", INT2NUM(WXK_F5));
    rb_define_const(mWx,"K_F6", INT2NUM(WXK_F6));
    rb_define_const(mWx,"K_F7", INT2NUM(WXK_F7));
    rb_define_const(mWx,"K_F8", INT2NUM(WXK_F8));
    rb_define_const(mWx,"K_F9", INT2NUM(WXK_F9));
    rb_define_const(mWx,"K_F10", INT2NUM(WXK_F10));
    rb_define_const(mWx,"K_F11", INT2NUM(WXK_F11));
    rb_define_const(mWx,"K_F12", INT2NUM(WXK_F12));
    rb_define_const(mWx,"K_F13", INT2NUM(WXK_F13));
    rb_define_const(mWx,"K_F14", INT2NUM(WXK_F14));
    rb_define_const(mWx,"K_F15", INT2NUM(WXK_F15));
    rb_define_const(mWx,"K_F16", INT2NUM(WXK_F16));
    rb_define_const(mWx,"K_F17", INT2NUM(WXK_F17));
    rb_define_const(mWx,"K_F18", INT2NUM(WXK_F18));
    rb_define_const(mWx,"K_F19", INT2NUM(WXK_F19));
    rb_define_const(mWx,"K_F20", INT2NUM(WXK_F20));
    rb_define_const(mWx,"K_F21", INT2NUM(WXK_F21));
    rb_define_const(mWx,"K_F22", INT2NUM(WXK_F22));
    rb_define_const(mWx,"K_F23", INT2NUM(WXK_F23));
    rb_define_const(mWx,"K_F24", INT2NUM(WXK_F24));
    rb_define_const(mWx,"K_NUMLOCK", INT2NUM(WXK_NUMLOCK));
    rb_define_const(mWx,"K_SCROLL", INT2NUM(WXK_SCROLL));
    rb_define_const(mWx,"K_PAGEUP", INT2NUM(WXK_PAGEUP));
    rb_define_const(mWx,"K_PAGEDOWN", INT2NUM(WXK_PAGEDOWN));
    rb_define_const(mWx,"K_NUMPAD_SPACE", INT2NUM(WXK_NUMPAD_SPACE));
    rb_define_const(mWx,"K_NUMPAD_TAB", INT2NUM(WXK_NUMPAD_TAB));
    rb_define_const(mWx,"K_NUMPAD_ENTER", INT2NUM(WXK_NUMPAD_ENTER));
    rb_define_const(mWx,"K_NUMPAD_F1", INT2NUM(WXK_NUMPAD_F1));
    rb_define_const(mWx,"K_NUMPAD_F2", INT2NUM(WXK_NUMPAD_F2));
    rb_define_const(mWx,"K_NUMPAD_F3", INT2NUM(WXK_NUMPAD_F3));
    rb_define_const(mWx,"K_NUMPAD_F4", INT2NUM(WXK_NUMPAD_F4));
    rb_define_const(mWx,"K_NUMPAD_HOME", INT2NUM(WXK_NUMPAD_HOME));
    rb_define_const(mWx,"K_NUMPAD_LEFT", INT2NUM(WXK_NUMPAD_LEFT));
    rb_define_const(mWx,"K_NUMPAD_UP", INT2NUM(WXK_NUMPAD_UP));
    rb_define_const(mWx,"K_NUMPAD_RIGHT", INT2NUM(WXK_NUMPAD_RIGHT));
    rb_define_const(mWx,"K_NUMPAD_DOWN", INT2NUM(WXK_NUMPAD_DOWN));
    rb_define_const(mWx,"K_NUMPAD_PRIOR", INT2NUM(WXK_NUMPAD_PRIOR));
    rb_define_const(mWx,"K_NUMPAD_PAGEUP", INT2NUM(WXK_NUMPAD_PAGEUP));
    rb_define_const(mWx,"K_NUMPAD_NEXT", INT2NUM(WXK_NUMPAD_NEXT));
    rb_define_const(mWx,"K_NUMPAD_PAGEDOWN", INT2NUM(WXK_NUMPAD_PAGEDOWN));
    rb_define_const(mWx,"K_NUMPAD_END", INT2NUM(WXK_NUMPAD_END));
    rb_define_const(mWx,"K_NUMPAD_BEGIN", INT2NUM(WXK_NUMPAD_BEGIN));
    rb_define_const(mWx,"K_NUMPAD_INSERT", INT2NUM(WXK_NUMPAD_INSERT));
    rb_define_const(mWx,"K_NUMPAD_DELETE", INT2NUM(WXK_NUMPAD_DELETE));
    rb_define_const(mWx,"K_NUMPAD_EQUAL", INT2NUM(WXK_NUMPAD_EQUAL));
    rb_define_const(mWx,"K_NUMPAD_MULTIPLY", INT2NUM(WXK_NUMPAD_MULTIPLY));
    rb_define_const(mWx,"K_NUMPAD_ADD", INT2NUM(WXK_NUMPAD_ADD));
    rb_define_const(mWx,"K_NUMPAD_SEPARATOR", INT2NUM(WXK_NUMPAD_SEPARATOR));
    rb_define_const(mWx,"K_NUMPAD_SUBTRACT", INT2NUM(WXK_NUMPAD_SUBTRACT));
    rb_define_const(mWx,"K_NUMPAD_DECIMAL", INT2NUM(WXK_NUMPAD_DECIMAL));
    rb_define_const(mWx,"K_NUMPAD_DIVIDE", INT2NUM(WXK_NUMPAD_DIVIDE));
    rb_define_const(mWx,"BITMAP_TYPE_INVALID", INT2NUM(wxBITMAP_TYPE_INVALID));
    rb_define_const(mWx,"BITMAP_TYPE_BMP", INT2NUM(wxBITMAP_TYPE_BMP));
    rb_define_const(mWx,"BITMAP_TYPE_BMP_RESOURCE", INT2NUM(wxBITMAP_TYPE_BMP_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_RESOURCE", INT2NUM(wxBITMAP_TYPE_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_ICO", INT2NUM(wxBITMAP_TYPE_ICO));
    rb_define_const(mWx,"BITMAP_TYPE_ICO_RESOURCE", INT2NUM(wxBITMAP_TYPE_ICO_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_CUR", INT2NUM(wxBITMAP_TYPE_CUR));
    rb_define_const(mWx,"BITMAP_TYPE_CUR_RESOURCE", INT2NUM(wxBITMAP_TYPE_CUR_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_XBM", INT2NUM(wxBITMAP_TYPE_XBM));
    rb_define_const(mWx,"BITMAP_TYPE_XBM_DATA", INT2NUM(wxBITMAP_TYPE_XBM_DATA));
    rb_define_const(mWx,"BITMAP_TYPE_XPM", INT2NUM(wxBITMAP_TYPE_XPM));
    rb_define_const(mWx,"BITMAP_TYPE_XPM_DATA", INT2NUM(wxBITMAP_TYPE_XPM_DATA));
    rb_define_const(mWx,"BITMAP_TYPE_TIF", INT2NUM(wxBITMAP_TYPE_TIF));
    rb_define_const(mWx,"BITMAP_TYPE_TIF_RESOURCE", INT2NUM(wxBITMAP_TYPE_TIF_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_GIF", INT2NUM(wxBITMAP_TYPE_GIF));
    rb_define_const(mWx,"BITMAP_TYPE_GIF_RESOURCE", INT2NUM(wxBITMAP_TYPE_GIF_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_PNG", INT2NUM(wxBITMAP_TYPE_PNG));
    rb_define_const(mWx,"BITMAP_TYPE_PNG_RESOURCE", INT2NUM(wxBITMAP_TYPE_PNG_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_JPEG", INT2NUM(wxBITMAP_TYPE_JPEG));
    rb_define_const(mWx,"BITMAP_TYPE_JPEG_RESOURCE", INT2NUM(wxBITMAP_TYPE_JPEG_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_PNM", INT2NUM(wxBITMAP_TYPE_PNM));
    rb_define_const(mWx,"BITMAP_TYPE_PNM_RESOURCE", INT2NUM(wxBITMAP_TYPE_PNM_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_PCX", INT2NUM(wxBITMAP_TYPE_PCX));
    rb_define_const(mWx,"BITMAP_TYPE_PCX_RESOURCE", INT2NUM(wxBITMAP_TYPE_PCX_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_PICT", INT2NUM(wxBITMAP_TYPE_PICT));
    rb_define_const(mWx,"BITMAP_TYPE_PICT_RESOURCE", INT2NUM(wxBITMAP_TYPE_PICT_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_ICON", INT2NUM(wxBITMAP_TYPE_ICON));
    rb_define_const(mWx,"BITMAP_TYPE_ICON_RESOURCE", INT2NUM(wxBITMAP_TYPE_ICON_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_MACCURSOR", INT2NUM(wxBITMAP_TYPE_MACCURSOR));
    rb_define_const(mWx,"BITMAP_TYPE_MACCURSOR_RESOURCE", INT2NUM(wxBITMAP_TYPE_MACCURSOR_RESOURCE));
    rb_define_const(mWx,"BITMAP_TYPE_ANY", INT2NUM(wxBITMAP_TYPE_ANY));
    rb_define_const(mWx,"CURSOR_NONE", INT2NUM(wxCURSOR_NONE));
    rb_define_const(mWx,"CURSOR_ARROW", INT2NUM(wxCURSOR_ARROW));
    rb_define_const(mWx,"CURSOR_BULLSEYE", INT2NUM(wxCURSOR_BULLSEYE));
    rb_define_const(mWx,"CURSOR_CHAR", INT2NUM(wxCURSOR_CHAR));
    rb_define_const(mWx,"CURSOR_CROSS", INT2NUM(wxCURSOR_CROSS));
    rb_define_const(mWx,"CURSOR_HAND", INT2NUM(wxCURSOR_HAND));
    rb_define_const(mWx,"CURSOR_IBEAM", INT2NUM(wxCURSOR_IBEAM));
    rb_define_const(mWx,"CURSOR_LEFT_BUTTON", INT2NUM(wxCURSOR_LEFT_BUTTON));
    rb_define_const(mWx,"CURSOR_MAGNIFIER", INT2NUM(wxCURSOR_MAGNIFIER));
    rb_define_const(mWx,"CURSOR_MIDDLE_BUTTON", INT2NUM(wxCURSOR_MIDDLE_BUTTON));
    rb_define_const(mWx,"CURSOR_NO_ENTRY", INT2NUM(wxCURSOR_NO_ENTRY));
    rb_define_const(mWx,"CURSOR_PAINT_BRUSH", INT2NUM(wxCURSOR_PAINT_BRUSH));
    rb_define_const(mWx,"CURSOR_PENCIL", INT2NUM(wxCURSOR_PENCIL));
    rb_define_const(mWx,"CURSOR_POINT_LEFT", INT2NUM(wxCURSOR_POINT_LEFT));
    rb_define_const(mWx,"CURSOR_POINT_RIGHT", INT2NUM(wxCURSOR_POINT_RIGHT));
    rb_define_const(mWx,"CURSOR_QUESTION_ARROW", INT2NUM(wxCURSOR_QUESTION_ARROW));
    rb_define_const(mWx,"CURSOR_RIGHT_BUTTON", INT2NUM(wxCURSOR_RIGHT_BUTTON));
    rb_define_const(mWx,"CURSOR_SIZENESW", INT2NUM(wxCURSOR_SIZENESW));
    rb_define_const(mWx,"CURSOR_SIZENS", INT2NUM(wxCURSOR_SIZENS));
    rb_define_const(mWx,"CURSOR_SIZENWSE", INT2NUM(wxCURSOR_SIZENWSE));
    rb_define_const(mWx,"CURSOR_SIZEWE", INT2NUM(wxCURSOR_SIZEWE));
    rb_define_const(mWx,"CURSOR_SIZING", INT2NUM(wxCURSOR_SIZING));
    rb_define_const(mWx,"CURSOR_SPRAYCAN", INT2NUM(wxCURSOR_SPRAYCAN));
    rb_define_const(mWx,"CURSOR_WAIT", INT2NUM(wxCURSOR_WAIT));
    rb_define_const(mWx,"CURSOR_WATCH", INT2NUM(wxCURSOR_WATCH));
    rb_define_const(mWx,"CURSOR_BLANK", INT2NUM(wxCURSOR_BLANK));
    rb_define_const(mWx,"CURSOR_DEFAULT", INT2NUM(wxCURSOR_DEFAULT));
    rb_define_const(mWx,"CURSOR_ARROWWAIT", INT2NUM(wxCURSOR_ARROWWAIT));
    rb_define_const(mWx,"CURSOR_MAX", INT2NUM(wxCURSOR_MAX));
    rb_define_const(mWx,"PAPER_NONE", INT2NUM(wxPAPER_NONE));
    rb_define_const(mWx,"PAPER_LETTER", INT2NUM(wxPAPER_LETTER));
    rb_define_const(mWx,"PAPER_LEGAL", INT2NUM(wxPAPER_LEGAL));
    rb_define_const(mWx,"PAPER_A4", INT2NUM(wxPAPER_A4));
    rb_define_const(mWx,"PAPER_CSHEET", INT2NUM(wxPAPER_CSHEET));
    rb_define_const(mWx,"PAPER_DSHEET", INT2NUM(wxPAPER_DSHEET));
    rb_define_const(mWx,"PAPER_ESHEET", INT2NUM(wxPAPER_ESHEET));
    rb_define_const(mWx,"PAPER_LETTERSMALL", INT2NUM(wxPAPER_LETTERSMALL));
    rb_define_const(mWx,"PAPER_TABLOID", INT2NUM(wxPAPER_TABLOID));
    rb_define_const(mWx,"PAPER_LEDGER", INT2NUM(wxPAPER_LEDGER));
    rb_define_const(mWx,"PAPER_STATEMENT", INT2NUM(wxPAPER_STATEMENT));
    rb_define_const(mWx,"PAPER_EXECUTIVE", INT2NUM(wxPAPER_EXECUTIVE));
    rb_define_const(mWx,"PAPER_A3", INT2NUM(wxPAPER_A3));
    rb_define_const(mWx,"PAPER_A4SMALL", INT2NUM(wxPAPER_A4SMALL));
    rb_define_const(mWx,"PAPER_A5", INT2NUM(wxPAPER_A5));
    rb_define_const(mWx,"PAPER_B4", INT2NUM(wxPAPER_B4));
    rb_define_const(mWx,"PAPER_B5", INT2NUM(wxPAPER_B5));
    rb_define_const(mWx,"PAPER_FOLIO", INT2NUM(wxPAPER_FOLIO));
    rb_define_const(mWx,"PAPER_QUARTO", INT2NUM(wxPAPER_QUARTO));
    rb_define_const(mWx,"PAPER_10X14", INT2NUM(wxPAPER_10X14));
    rb_define_const(mWx,"PAPER_11X17", INT2NUM(wxPAPER_11X17));
    rb_define_const(mWx,"PAPER_NOTE", INT2NUM(wxPAPER_NOTE));
    rb_define_const(mWx,"PAPER_ENV_9", INT2NUM(wxPAPER_ENV_9));
    rb_define_const(mWx,"PAPER_ENV_10", INT2NUM(wxPAPER_ENV_10));
    rb_define_const(mWx,"PAPER_ENV_11", INT2NUM(wxPAPER_ENV_11));
    rb_define_const(mWx,"PAPER_ENV_12", INT2NUM(wxPAPER_ENV_12));
    rb_define_const(mWx,"PAPER_ENV_14", INT2NUM(wxPAPER_ENV_14));
    rb_define_const(mWx,"PAPER_ENV_DL", INT2NUM(wxPAPER_ENV_DL));
    rb_define_const(mWx,"PAPER_ENV_C5", INT2NUM(wxPAPER_ENV_C5));
    rb_define_const(mWx,"PAPER_ENV_C3", INT2NUM(wxPAPER_ENV_C3));
    rb_define_const(mWx,"PAPER_ENV_C4", INT2NUM(wxPAPER_ENV_C4));
    rb_define_const(mWx,"PAPER_ENV_C6", INT2NUM(wxPAPER_ENV_C6));
    rb_define_const(mWx,"PAPER_ENV_C65", INT2NUM(wxPAPER_ENV_C65));
    rb_define_const(mWx,"PAPER_ENV_B4", INT2NUM(wxPAPER_ENV_B4));
    rb_define_const(mWx,"PAPER_ENV_B5", INT2NUM(wxPAPER_ENV_B5));
    rb_define_const(mWx,"PAPER_ENV_B6", INT2NUM(wxPAPER_ENV_B6));
    rb_define_const(mWx,"PAPER_ENV_ITALY", INT2NUM(wxPAPER_ENV_ITALY));
    rb_define_const(mWx,"PAPER_ENV_MONARCH", INT2NUM(wxPAPER_ENV_MONARCH));
    rb_define_const(mWx,"PAPER_ENV_PERSONAL", INT2NUM(wxPAPER_ENV_PERSONAL));
    rb_define_const(mWx,"PAPER_FANFOLD_US", INT2NUM(wxPAPER_FANFOLD_US));
    rb_define_const(mWx,"PAPER_FANFOLD_STD_GERMAN", INT2NUM(wxPAPER_FANFOLD_STD_GERMAN));
    rb_define_const(mWx,"PAPER_FANFOLD_LGL_GERMAN", INT2NUM(wxPAPER_FANFOLD_LGL_GERMAN));
    rb_define_const(mWx,"PAPER_ISO_B4", INT2NUM(wxPAPER_ISO_B4));
    rb_define_const(mWx,"PAPER_JAPANESE_POSTCARD", INT2NUM(wxPAPER_JAPANESE_POSTCARD));
    rb_define_const(mWx,"PAPER_9X11", INT2NUM(wxPAPER_9X11));
    rb_define_const(mWx,"PAPER_10X11", INT2NUM(wxPAPER_10X11));
    rb_define_const(mWx,"PAPER_15X11", INT2NUM(wxPAPER_15X11));
    rb_define_const(mWx,"PAPER_ENV_INVITE", INT2NUM(wxPAPER_ENV_INVITE));
    rb_define_const(mWx,"PAPER_LETTER_EXTRA", INT2NUM(wxPAPER_LETTER_EXTRA));
    rb_define_const(mWx,"PAPER_LEGAL_EXTRA", INT2NUM(wxPAPER_LEGAL_EXTRA));
    rb_define_const(mWx,"PAPER_TABLOID_EXTRA", INT2NUM(wxPAPER_TABLOID_EXTRA));
    rb_define_const(mWx,"PAPER_A4_EXTRA", INT2NUM(wxPAPER_A4_EXTRA));
    rb_define_const(mWx,"PAPER_LETTER_TRANSVERSE", INT2NUM(wxPAPER_LETTER_TRANSVERSE));
    rb_define_const(mWx,"PAPER_A4_TRANSVERSE", INT2NUM(wxPAPER_A4_TRANSVERSE));
    rb_define_const(mWx,"PAPER_LETTER_EXTRA_TRANSVERSE", INT2NUM(wxPAPER_LETTER_EXTRA_TRANSVERSE));
    rb_define_const(mWx,"PAPER_A_PLUS", INT2NUM(wxPAPER_A_PLUS));
    rb_define_const(mWx,"PAPER_B_PLUS", INT2NUM(wxPAPER_B_PLUS));
    rb_define_const(mWx,"PAPER_LETTER_PLUS", INT2NUM(wxPAPER_LETTER_PLUS));
    rb_define_const(mWx,"PAPER_A4_PLUS", INT2NUM(wxPAPER_A4_PLUS));
    rb_define_const(mWx,"PAPER_A5_TRANSVERSE", INT2NUM(wxPAPER_A5_TRANSVERSE));
    rb_define_const(mWx,"PAPER_B5_TRANSVERSE", INT2NUM(wxPAPER_B5_TRANSVERSE));
    rb_define_const(mWx,"PAPER_A3_EXTRA", INT2NUM(wxPAPER_A3_EXTRA));
    rb_define_const(mWx,"PAPER_A5_EXTRA", INT2NUM(wxPAPER_A5_EXTRA));
    rb_define_const(mWx,"PAPER_B5_EXTRA", INT2NUM(wxPAPER_B5_EXTRA));
    rb_define_const(mWx,"PAPER_A2", INT2NUM(wxPAPER_A2));
    rb_define_const(mWx,"PAPER_A3_TRANSVERSE", INT2NUM(wxPAPER_A3_TRANSVERSE));
    rb_define_const(mWx,"PAPER_A3_EXTRA_TRANSVERSE", INT2NUM(wxPAPER_A3_EXTRA_TRANSVERSE));
    rb_define_const(mWx,"DUPLEX_SIMPLEX", INT2NUM(wxDUPLEX_SIMPLEX));
    rb_define_const(mWx,"DUPLEX_HORIZONTAL", INT2NUM(wxDUPLEX_HORIZONTAL));
    rb_define_const(mWx,"DUPLEX_VERTICAL", INT2NUM(wxDUPLEX_VERTICAL));
    rb_define_const(mWx,"EVT_NULL", INT2NUM(wxEVT_NULL));
    rb_define_const(mWx,"EVT_FIRST", INT2NUM(wxEVT_FIRST));
    rb_define_const(mWx,"EVT_COMMAND_BUTTON_CLICKED", INT2NUM(wxEVT_COMMAND_BUTTON_CLICKED));
    rb_define_const(mWx,"EVT_COMMAND_CHECKBOX_CLICKED", INT2NUM(wxEVT_COMMAND_CHECKBOX_CLICKED));
    rb_define_const(mWx,"EVT_COMMAND_CHOICE_SELECTED", INT2NUM(wxEVT_COMMAND_CHOICE_SELECTED));
    rb_define_const(mWx,"EVT_COMMAND_LISTBOX_SELECTED", INT2NUM(wxEVT_COMMAND_LISTBOX_SELECTED));
    rb_define_const(mWx,"EVT_COMMAND_LISTBOX_DOUBLECLICKED", INT2NUM(wxEVT_COMMAND_LISTBOX_DOUBLECLICKED));
    rb_define_const(mWx,"EVT_COMMAND_CHECKLISTBOX_TOGGLED", INT2NUM(wxEVT_COMMAND_CHECKLISTBOX_TOGGLED));
#if defined(__WXGTK__) || defined(__WXMSW__)
    rb_define_const(mWx,"EVT_COMMAND_TOGGLEBUTTON_CLICKED", INT2NUM(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED));
#endif
    rb_define_const(mWx,"EVT_COMMAND_SPINCTRL_UPDATED", INT2NUM(wxEVT_COMMAND_SPINCTRL_UPDATED));
    rb_define_const(mWx,"EVT_COMMAND_TEXT_UPDATED", INT2NUM(wxEVT_COMMAND_TEXT_UPDATED));
    rb_define_const(mWx,"EVT_COMMAND_TEXT_ENTER", INT2NUM(wxEVT_COMMAND_TEXT_ENTER));
    rb_define_const(mWx,"EVT_COMMAND_TEXT_URL", INT2NUM(wxEVT_COMMAND_TEXT_URL));
    rb_define_const(mWx,"EVT_COMMAND_TEXT_MAXLEN", INT2NUM(wxEVT_COMMAND_TEXT_MAXLEN));
    rb_define_const(mWx,"EVT_COMMAND_MENU_SELECTED", INT2NUM(wxEVT_COMMAND_MENU_SELECTED));
    rb_define_const(mWx,"EVT_COMMAND_SLIDER_UPDATED", INT2NUM(wxEVT_COMMAND_SLIDER_UPDATED));
    rb_define_const(mWx,"EVT_COMMAND_RADIOBOX_SELECTED", INT2NUM(wxEVT_COMMAND_RADIOBOX_SELECTED));
    rb_define_const(mWx,"EVT_COMMAND_RADIOBUTTON_SELECTED", INT2NUM(wxEVT_COMMAND_RADIOBUTTON_SELECTED));
    rb_define_const(mWx,"EVT_COMMAND_SCROLLBAR_UPDATED", INT2NUM(wxEVT_COMMAND_SCROLLBAR_UPDATED));
    rb_define_const(mWx,"EVT_COMMAND_VLBOX_SELECTED", INT2NUM(wxEVT_COMMAND_VLBOX_SELECTED));
    rb_define_const(mWx,"EVT_COMMAND_COMBOBOX_SELECTED", INT2NUM(wxEVT_COMMAND_COMBOBOX_SELECTED));
    rb_define_const(mWx,"EVT_COMMAND_TOOL_CLICKED", INT2NUM(wxEVT_COMMAND_TOOL_CLICKED));
    rb_define_const(mWx,"EVT_COMMAND_TOOL_RCLICKED", INT2NUM(wxEVT_COMMAND_TOOL_RCLICKED));
    rb_define_const(mWx,"EVT_COMMAND_TOOL_ENTER", INT2NUM(wxEVT_COMMAND_TOOL_ENTER));
    rb_define_const(mWx,"EVT_SET_FOCUS", INT2NUM(wxEVT_SET_FOCUS));
    rb_define_const(mWx,"EVT_KILL_FOCUS", INT2NUM(wxEVT_KILL_FOCUS));
    rb_define_const(mWx,"EVT_CHILD_FOCUS", INT2NUM(wxEVT_CHILD_FOCUS));
    rb_define_const(mWx,"EVT_MOUSEWHEEL", INT2NUM(wxEVT_MOUSEWHEEL));
    rb_define_const(mWx,"EVT_LEFT_DOWN", INT2NUM(wxEVT_LEFT_DOWN));
    rb_define_const(mWx,"EVT_LEFT_UP", INT2NUM(wxEVT_LEFT_UP));
    rb_define_const(mWx,"EVT_MIDDLE_DOWN", INT2NUM(wxEVT_MIDDLE_DOWN));
    rb_define_const(mWx,"EVT_MIDDLE_UP", INT2NUM(wxEVT_MIDDLE_UP));
    rb_define_const(mWx,"EVT_RIGHT_DOWN", INT2NUM(wxEVT_RIGHT_DOWN));
    rb_define_const(mWx,"EVT_RIGHT_UP", INT2NUM(wxEVT_RIGHT_UP));
    rb_define_const(mWx,"EVT_MOTION", INT2NUM(wxEVT_MOTION));
    rb_define_const(mWx,"EVT_ENTER_WINDOW", INT2NUM(wxEVT_ENTER_WINDOW));
    rb_define_const(mWx,"EVT_LEAVE_WINDOW", INT2NUM(wxEVT_LEAVE_WINDOW));
    rb_define_const(mWx,"EVT_LEFT_DCLICK", INT2NUM(wxEVT_LEFT_DCLICK));
    rb_define_const(mWx,"EVT_MIDDLE_DCLICK", INT2NUM(wxEVT_MIDDLE_DCLICK));
    rb_define_const(mWx,"EVT_RIGHT_DCLICK", INT2NUM(wxEVT_RIGHT_DCLICK));
    rb_define_const(mWx,"EVT_NC_LEFT_DOWN", INT2NUM(wxEVT_NC_LEFT_DOWN));
    rb_define_const(mWx,"EVT_NC_LEFT_UP", INT2NUM(wxEVT_NC_LEFT_UP));
    rb_define_const(mWx,"EVT_NC_MIDDLE_DOWN", INT2NUM(wxEVT_NC_MIDDLE_DOWN));
    rb_define_const(mWx,"EVT_NC_MIDDLE_UP", INT2NUM(wxEVT_NC_MIDDLE_UP));
    rb_define_const(mWx,"EVT_NC_RIGHT_DOWN", INT2NUM(wxEVT_NC_RIGHT_DOWN));
    rb_define_const(mWx,"EVT_NC_RIGHT_UP", INT2NUM(wxEVT_NC_RIGHT_UP));
    rb_define_const(mWx,"EVT_NC_MOTION", INT2NUM(wxEVT_NC_MOTION));
    rb_define_const(mWx,"EVT_NC_ENTER_WINDOW", INT2NUM(wxEVT_NC_ENTER_WINDOW));
    rb_define_const(mWx,"EVT_NC_LEAVE_WINDOW", INT2NUM(wxEVT_NC_LEAVE_WINDOW));
    rb_define_const(mWx,"EVT_NC_LEFT_DCLICK", INT2NUM(wxEVT_NC_LEFT_DCLICK));
    rb_define_const(mWx,"EVT_NC_MIDDLE_DCLICK", INT2NUM(wxEVT_NC_MIDDLE_DCLICK));
    rb_define_const(mWx,"EVT_NC_RIGHT_DCLICK", INT2NUM(wxEVT_NC_RIGHT_DCLICK));
    rb_define_const(mWx,"EVT_CHAR", INT2NUM(wxEVT_CHAR));
    rb_define_const(mWx,"EVT_KEY_DOWN", INT2NUM(wxEVT_KEY_DOWN));
    rb_define_const(mWx,"EVT_KEY_UP", INT2NUM(wxEVT_KEY_UP));
    rb_define_const(mWx,"EVT_CHAR_HOOK", INT2NUM(wxEVT_CHAR_HOOK));
    rb_define_const(mWx,"EVT_SCROLL_TOP", INT2NUM(wxEVT_SCROLL_TOP));
    rb_define_const(mWx,"EVT_SCROLL_BOTTOM", INT2NUM(wxEVT_SCROLL_BOTTOM));
    rb_define_const(mWx,"EVT_SCROLL_LINEUP", INT2NUM(wxEVT_SCROLL_LINEUP));
    rb_define_const(mWx,"EVT_SCROLL_LINEDOWN", INT2NUM(wxEVT_SCROLL_LINEDOWN));
    rb_define_const(mWx,"EVT_SCROLL_PAGEUP", INT2NUM(wxEVT_SCROLL_PAGEUP));
    rb_define_const(mWx,"EVT_SCROLL_PAGEDOWN", INT2NUM(wxEVT_SCROLL_PAGEDOWN));
    rb_define_const(mWx,"EVT_SCROLL_THUMBTRACK", INT2NUM(wxEVT_SCROLL_THUMBTRACK));
    rb_define_const(mWx,"EVT_SCROLL_THUMBRELEASE", INT2NUM(wxEVT_SCROLL_THUMBRELEASE));
    rb_define_const(mWx,"EVT_SCROLLWIN_TOP", INT2NUM(wxEVT_SCROLLWIN_TOP));
    rb_define_const(mWx,"EVT_SCROLLWIN_BOTTOM", INT2NUM(wxEVT_SCROLLWIN_BOTTOM));
    rb_define_const(mWx,"EVT_SCROLLWIN_LINEUP", INT2NUM(wxEVT_SCROLLWIN_LINEUP));
    rb_define_const(mWx,"EVT_SCROLLWIN_LINEDOWN", INT2NUM(wxEVT_SCROLLWIN_LINEDOWN));
    rb_define_const(mWx,"EVT_SCROLLWIN_PAGEUP", INT2NUM(wxEVT_SCROLLWIN_PAGEUP));
    rb_define_const(mWx,"EVT_SCROLLWIN_PAGEDOWN", INT2NUM(wxEVT_SCROLLWIN_PAGEDOWN));
    rb_define_const(mWx,"EVT_SCROLLWIN_THUMBTRACK", INT2NUM(wxEVT_SCROLLWIN_THUMBTRACK));
    rb_define_const(mWx,"EVT_SCROLLWIN_THUMBRELEASE", INT2NUM(wxEVT_SCROLLWIN_THUMBRELEASE));
    rb_define_const(mWx,"EVT_SIZE", INT2NUM(wxEVT_SIZE));
    rb_define_const(mWx,"EVT_MOVE", INT2NUM(wxEVT_MOVE));
    rb_define_const(mWx,"EVT_CLOSE_WINDOW", INT2NUM(wxEVT_CLOSE_WINDOW));
    rb_define_const(mWx,"EVT_END_SESSION", INT2NUM(wxEVT_END_SESSION));
    rb_define_const(mWx,"EVT_QUERY_END_SESSION", INT2NUM(wxEVT_QUERY_END_SESSION));
    rb_define_const(mWx,"EVT_ACTIVATE_APP", INT2NUM(wxEVT_ACTIVATE_APP));
    rb_define_const(mWx,"EVT_POWER", INT2NUM(wxEVT_POWER));
    rb_define_const(mWx,"EVT_ACTIVATE", INT2NUM(wxEVT_ACTIVATE));
    rb_define_const(mWx,"EVT_CREATE", INT2NUM(wxEVT_CREATE));
    rb_define_const(mWx,"EVT_DESTROY", INT2NUM(wxEVT_DESTROY));
    rb_define_const(mWx,"EVT_SHOW", INT2NUM(wxEVT_SHOW));
    rb_define_const(mWx,"EVT_ICONIZE", INT2NUM(wxEVT_ICONIZE));
    rb_define_const(mWx,"EVT_MAXIMIZE", INT2NUM(wxEVT_MAXIMIZE));
    rb_define_const(mWx,"EVT_MOUSE_CAPTURE_CHANGED", INT2NUM(wxEVT_MOUSE_CAPTURE_CHANGED));
    rb_define_const(mWx,"EVT_PAINT", INT2NUM(wxEVT_PAINT));
    rb_define_const(mWx,"EVT_ERASE_BACKGROUND", INT2NUM(wxEVT_ERASE_BACKGROUND));
    rb_define_const(mWx,"EVT_NC_PAINT", INT2NUM(wxEVT_NC_PAINT));
    rb_define_const(mWx,"EVT_PAINT_ICON", INT2NUM(wxEVT_PAINT_ICON));
    rb_define_const(mWx,"EVT_MENU_HIGHLIGHT", INT2NUM(wxEVT_MENU_HIGHLIGHT));
    rb_define_const(mWx,"EVT_SYS_COLOUR_CHANGED", INT2NUM(wxEVT_SYS_COLOUR_CHANGED));
    rb_define_const(mWx,"EVT_SETTING_CHANGED", INT2NUM(wxEVT_SETTING_CHANGED));
    rb_define_const(mWx,"EVT_QUERY_NEW_PALETTE", INT2NUM(wxEVT_QUERY_NEW_PALETTE));
    rb_define_const(mWx,"EVT_PALETTE_CHANGED", INT2NUM(wxEVT_PALETTE_CHANGED));
    rb_define_const(mWx,"EVT_JOY_BUTTON_DOWN", INT2NUM(wxEVT_JOY_BUTTON_DOWN));
    rb_define_const(mWx,"EVT_JOY_BUTTON_UP", INT2NUM(wxEVT_JOY_BUTTON_UP));
    rb_define_const(mWx,"EVT_JOY_MOVE", INT2NUM(wxEVT_JOY_MOVE));
    rb_define_const(mWx,"EVT_JOY_ZMOVE", INT2NUM(wxEVT_JOY_ZMOVE));
    rb_define_const(mWx,"EVT_DROP_FILES", INT2NUM(wxEVT_DROP_FILES));
    rb_define_const(mWx,"EVT_DRAW_ITEM", INT2NUM(wxEVT_DRAW_ITEM));
    rb_define_const(mWx,"EVT_MEASURE_ITEM", INT2NUM(wxEVT_MEASURE_ITEM));
    rb_define_const(mWx,"EVT_COMPARE_ITEM", INT2NUM(wxEVT_COMPARE_ITEM));
    rb_define_const(mWx,"EVT_INIT_DIALOG", INT2NUM(wxEVT_INIT_DIALOG));
    rb_define_const(mWx,"EVT_IDLE", INT2NUM(wxEVT_IDLE));
    rb_define_const(mWx,"EVT_UPDATE_UI", INT2NUM(wxEVT_UPDATE_UI));
    rb_define_const(mWx,"EVT_COMMAND_LEFT_CLICK", INT2NUM(wxEVT_COMMAND_LEFT_CLICK));
    rb_define_const(mWx,"EVT_COMMAND_LEFT_DCLICK", INT2NUM(wxEVT_COMMAND_LEFT_DCLICK));
    rb_define_const(mWx,"EVT_COMMAND_RIGHT_CLICK", INT2NUM(wxEVT_COMMAND_RIGHT_CLICK));
    rb_define_const(mWx,"EVT_COMMAND_RIGHT_DCLICK", INT2NUM(wxEVT_COMMAND_RIGHT_DCLICK));
    rb_define_const(mWx,"EVT_COMMAND_SET_FOCUS", INT2NUM(wxEVT_COMMAND_SET_FOCUS));
    rb_define_const(mWx,"EVT_COMMAND_KILL_FOCUS", INT2NUM(wxEVT_COMMAND_KILL_FOCUS));
    rb_define_const(mWx,"EVT_COMMAND_ENTER", INT2NUM(wxEVT_COMMAND_ENTER));
    rb_define_const(mWx,"EVT_NAVIGATION_KEY", INT2NUM(wxEVT_NAVIGATION_KEY));
    rb_define_const(mWx,"EVT_TIMER", INT2NUM(wxEVT_TIMER));

    rb_define_const(mWx,"SOCKET_INPUT", INT2NUM(wxSOCKET_INPUT));
    rb_define_const(mWx,"SOCKET_OUTPUT", INT2NUM(wxSOCKET_OUTPUT));
    rb_define_const(mWx,"SOCKET_CONNECTION", INT2NUM(wxSOCKET_CONNECTION));
    rb_define_const(mWx,"SOCKET_LOST", INT2NUM(wxSOCKET_LOST));

    rb_define_const(mWx,"SOCKET_INPUT_FLAG", INT2NUM(wxSOCKET_INPUT_FLAG));
    rb_define_const(mWx,"SOCKET_OUTPUT_FLAG", INT2NUM(wxSOCKET_OUTPUT_FLAG));
    rb_define_const(mWx,"SOCKET_CONNECTION_FLAG", INT2NUM(wxSOCKET_CONNECTION_FLAG));
    rb_define_const(mWx,"SOCKET_LOST_FLAG", INT2NUM(wxSOCKET_LOST_FLAG));

    rb_define_const(mWx,"SOCKET_NOERROR", INT2NUM(wxSOCKET_NOERROR));
    rb_define_const(mWx,"SOCKET_INVOP", INT2NUM(wxSOCKET_INVOP));
    rb_define_const(mWx,"SOCKET_IOERR", INT2NUM(wxSOCKET_IOERR));
    rb_define_const(mWx,"SOCKET_INVADDR", INT2NUM(wxSOCKET_INVADDR));
    rb_define_const(mWx,"SOCKET_INVSOCK", INT2NUM(wxSOCKET_INVSOCK));
    rb_define_const(mWx,"SOCKET_NOHOST", INT2NUM(wxSOCKET_NOHOST));
    rb_define_const(mWx,"SOCKET_INVPORT", INT2NUM(wxSOCKET_INVPORT));
    rb_define_const(mWx,"SOCKET_WOULDBLOCK", INT2NUM(wxSOCKET_WOULDBLOCK));
    rb_define_const(mWx,"SOCKET_TIMEDOUT", INT2NUM(wxSOCKET_TIMEDOUT));
    rb_define_const(mWx,"SOCKET_MEMERR", INT2NUM(wxSOCKET_MEMERR));
    rb_define_const(mWx,"SOCKET_DUMMY", INT2NUM(wxSOCKET_DUMMY));

    rb_define_const(mWx,"SOCKET_NONE", INT2NUM(wxSOCKET_NONE));
    rb_define_const(mWx,"SOCKET_NOWAIT", INT2NUM(wxSOCKET_NOWAIT));
    rb_define_const(mWx,"SOCKET_WAITALL", INT2NUM(wxSOCKET_WAITALL));
    rb_define_const(mWx,"SOCKET_BLOCK", INT2NUM(wxSOCKET_BLOCK));

    rb_define_const(mWx,"SOCKET_UNINIT", INT2NUM(wxSOCKET_UNINIT));
    rb_define_const(mWx,"SOCKET_CLIENT", INT2NUM(wxSOCKET_CLIENT));
    rb_define_const(mWx,"SOCKET_SERVER", INT2NUM(wxSOCKET_SERVER));
    rb_define_const(mWx,"SOCKET_BASE", INT2NUM(wxSOCKET_BASE));
    rb_define_const(mWx,"SOCKET_DATAGRAM", INT2NUM(wxSOCKET_DATAGRAM));

    rb_define_const(mWx,"MAJOR_VERSION", INT2NUM(wxMAJOR_VERSION));
    rb_define_const(mWx,"MINOR_VERSION", INT2NUM(wxMINOR_VERSION));
    rb_define_const(mWx,"RELEASE_NUMBER", INT2NUM(wxRELEASE_NUMBER));
    rb_define_const(mWx,"VERSION_STRING", rb_str_new2(wxVERSION_STRING));
    rb_define_const(mWx,"VERSION_NUM_DOT_STRING", rb_str_new2(wxVERSION_NUM_DOT_STRING));
    rb_define_const(mWx,"VERSION_NUM_STRING", rb_str_new2(wxVERSION_NUM_STRING));
    rb_define_const(mWx,"VERSION_NUMBER", INT2NUM(wxVERSION_NUMBER));
    rb_define_const(mWx,"BETA_NUMBER", INT2NUM(wxBETA_NUMBER));

#ifdef __WXMSW__
    rb_define_const(mWx,"RUBY_PLATFORM", rb_str_new2("WXMSW"));
#endif
#ifdef __WXGTK__
    rb_define_const(mWx,"RUBY_PLATFORM", rb_str_new2("WXGTK"));
#endif

    rb_define_const(mWx,"EMPTY_STRING",  rb_str_new2(wxEmptyString));
    rb_define_const(mWx,"DEFAULT_POSITION", WxPoint::init0(wxDefaultPosition));
    rb_define_const(mWx,"DEFAULT_SIZE", WxSize::init0(wxDefaultSize));
    rb_define_const(mWx,"DEFAULT_DATE_TIME", WxDateTime::init0(wxDefaultDateTime));
    rb_define_const(mWx,"NULL_BITMAP", WxBitmap::init0(wxNullBitmap));
    rb_define_const(mWx,"NULL_COLOUR", WxColour::init0(wxNullColour));
    rb_define_const(mWx,"NULL_FONT", WxFont::init0(wxNullFont));
    rb_define_const(mWx,"NULL_PEN", WxPen::init0(&wxNullPen));
    rb_define_const(mWx,"NULL_BRUSH", WxBrush::init0(wxNullBrush));


    rb_define_const(mWx,"STANDARD_CURSOR", WxCursor::init0(wxSTANDARD_CURSOR));
    rb_define_const(mWx,"HOURGLASS_CURSOR", WxCursor::init0(wxHOURGLASS_CURSOR));
    rb_define_const(mWx,"CROSS_CURSOR", WxCursor::init0(wxCROSS_CURSOR));

    rb_define_const(mWx,"RED_PEN", WxPen::init0(wxRED_PEN));
    rb_define_const(mWx,"CYAN_PEN", WxPen::init0(wxCYAN_PEN));
    rb_define_const(mWx,"GREEN_PEN", WxPen::init0(wxGREEN_PEN));
    rb_define_const(mWx,"BLACK_PEN", WxPen::init0(wxBLACK_PEN));
    rb_define_const(mWx,"WHITE_PEN", WxPen::init0(wxWHITE_PEN));
    rb_define_const(mWx,"TRANSPARENT_PEN", WxPen::init0(wxTRANSPARENT_PEN));
    rb_define_const(mWx,"BLACK_DASHED_PEN", WxPen::init0(wxBLACK_DASHED_PEN));
    rb_define_const(mWx,"GREY_PEN", WxPen::init0(wxGREY_PEN));
    rb_define_const(mWx,"MEDIUM_GREY_PEN", WxPen::init0(wxMEDIUM_GREY_PEN));
    rb_define_const(mWx,"LIGHT_GREY_PEN", WxPen::init0(wxLIGHT_GREY_PEN));

    rb_define_const(mWx,"BLUE_BRUSH", WxBrush::init0(*wxBLUE_BRUSH));
    rb_define_const(mWx,"GREEN_BRUSH", WxBrush::init0(*wxGREEN_BRUSH));
    rb_define_const(mWx,"WHITE_BRUSH", WxBrush::init0(*wxWHITE_BRUSH));
    rb_define_const(mWx,"BLACK_BRUSH", WxBrush::init0(*wxBLACK_BRUSH));
    rb_define_const(mWx,"GREY_BRUSH", WxBrush::init0(*wxGREY_BRUSH));
    rb_define_const(mWx,"MEDIUM_GREY_BRUSH", WxBrush::init0(*wxMEDIUM_GREY_BRUSH));
    rb_define_const(mWx,"LIGHT_GREY_BRUSH", WxBrush::init0(*wxLIGHT_GREY_BRUSH));
    rb_define_const(mWx,"TRANSPARENT_BRUSH", WxBrush::init0(*wxTRANSPARENT_BRUSH));
    rb_define_const(mWx,"CYAN_BRUSH", WxBrush::init0(*wxCYAN_BRUSH));
    rb_define_const(mWx,"RED_BRUSH", WxBrush::init0(*wxRED_BRUSH));

    rb_define_const(mWx,"BLACK", WxColour::init0(*wxBLACK));
    rb_define_const(mWx,"WHITE", WxColour::init0(*wxWHITE));
    rb_define_const(mWx,"RED", WxColour::init0(*wxRED));
    rb_define_const(mWx,"BLUE", WxColour::init0(*wxBLUE));
    rb_define_const(mWx,"GREEN", WxColour::init0(*wxGREEN));
    rb_define_const(mWx,"CYAN", WxColour::init0(*wxCYAN));
    rb_define_const(mWx,"LIGHT_GREY", WxColour::init0(*wxLIGHT_GREY));

    rb_define_const(mWx,"CAL_SUNDAY_FIRST", INT2NUM(wxCAL_SUNDAY_FIRST));
    rb_define_const(mWx,"CAL_MONDAY_FIRST", INT2NUM(wxCAL_MONDAY_FIRST));
    rb_define_const(mWx,"CAL_SHOW_HOLIDAYS", INT2NUM(wxCAL_SHOW_HOLIDAYS));
    rb_define_const(mWx,"CAL_NO_YEAR_CHANGE", INT2NUM(wxCAL_NO_YEAR_CHANGE));
    rb_define_const(mWx,"CAL_NO_MONTH_CHANGE", INT2NUM(wxCAL_NO_MONTH_CHANGE));
    rb_define_const(mWx,"CAL_SEQUENTIAL_MONTH_SELECTION", INT2NUM(wxCAL_SEQUENTIAL_MONTH_SELECTION));
    rb_define_const(mWx,"CAL_SHOW_SURROUNDING_WEEKS", INT2NUM(wxCAL_SHOW_SURROUNDING_WEEKS));
    rb_define_const(mWx,"CAL_HITTEST_NOWHERE", INT2NUM(wxCAL_HITTEST_NOWHERE));
    rb_define_const(mWx,"CAL_HITTEST_HEADER", INT2NUM(wxCAL_HITTEST_HEADER));
    rb_define_const(mWx,"CAL_HITTEST_DAY", INT2NUM(wxCAL_HITTEST_DAY));
    rb_define_const(mWx,"CAL_HITTEST_INCMONTH", INT2NUM(wxCAL_HITTEST_INCMONTH));
    rb_define_const(mWx,"CAL_HITTEST_DECMONTH", INT2NUM(wxCAL_HITTEST_DECMONTH));
    rb_define_const(mWx,"CAL_HITTEST_SURROUNDING_WEEK", INT2NUM(wxCAL_HITTEST_SURROUNDING_WEEK));
    rb_define_const(mWx,"CAL_BORDER_NONE", INT2NUM(wxCAL_BORDER_NONE));
    rb_define_const(mWx,"CAL_BORDER_SQUARE", INT2NUM(wxCAL_BORDER_SQUARE));
    rb_define_const(mWx,"CAL_BORDER_ROUND", INT2NUM(wxCAL_BORDER_ROUND));

    rb_define_const(mWx,"EVT_CALENDAR_SEL_CHANGED", INT2NUM(wxEVT_CALENDAR_SEL_CHANGED));
    rb_define_const(mWx,"EVT_CALENDAR_DAY_CHANGED", INT2NUM(wxEVT_CALENDAR_DAY_CHANGED));
    rb_define_const(mWx,"EVT_CALENDAR_MONTH_CHANGED", INT2NUM(wxEVT_CALENDAR_MONTH_CHANGED));
    rb_define_const(mWx,"EVT_CALENDAR_YEAR_CHANGED", INT2NUM(wxEVT_CALENDAR_YEAR_CHANGED));
    rb_define_const(mWx,"EVT_CALENDAR_DOUBLECLICKED", INT2NUM(wxEVT_CALENDAR_DOUBLECLICKED));
    rb_define_const(mWx,"EVT_CALENDAR_WEEKDAY_CLICKED", INT2NUM(wxEVT_CALENDAR_WEEKDAY_CLICKED));

    rb_define_const(mWx,"ART_OTHER", rb_str_new2(wxART_OTHER));
    rb_define_const(mWx,"ART_TOOLBAR", rb_str_new2(wxART_TOOLBAR));
    rb_define_const(mWx,"ART_MENU", rb_str_new2(wxART_MENU));
    rb_define_const(mWx,"ART_FRAME_ICON", rb_str_new2(wxART_FRAME_ICON));
    rb_define_const(mWx,"ART_CMN_DIALOG", rb_str_new2(wxART_CMN_DIALOG));
    rb_define_const(mWx,"ART_HELP_BROWSER", rb_str_new2(wxART_HELP_BROWSER));
    rb_define_const(mWx,"ART_MESSAGE_BOX", rb_str_new2(wxART_MESSAGE_BOX));
    rb_define_const(mWx,"ART_ERROR"           ,rb_str_new2(wxART_ERROR));
    rb_define_const(mWx,"ART_QUESTION"        ,rb_str_new2(wxART_QUESTION));
    rb_define_const(mWx,"ART_WARNING"         ,rb_str_new2(wxART_WARNING));
    rb_define_const(mWx,"ART_INFORMATION"     ,rb_str_new2(wxART_INFORMATION));
    rb_define_const(mWx,"ART_ADD_BOOKMARK"    ,rb_str_new2(wxART_ADD_BOOKMARK));
    rb_define_const(mWx,"ART_DEL_BOOKMARK"    ,rb_str_new2(wxART_DEL_BOOKMARK));
    rb_define_const(mWx,"ART_HELP_SIDE_PANEL" ,rb_str_new2(wxART_HELP_SIDE_PANEL));
    rb_define_const(mWx,"ART_HELP_SETTINGS"   ,rb_str_new2(wxART_HELP_SETTINGS));
    rb_define_const(mWx,"ART_HELP_BOOK"       ,rb_str_new2(wxART_HELP_BOOK));
    rb_define_const(mWx,"ART_HELP_FOLDER"     ,rb_str_new2(wxART_HELP_FOLDER));
    rb_define_const(mWx,"ART_HELP_PAGE"       ,rb_str_new2(wxART_HELP_PAGE));
    rb_define_const(mWx,"ART_GO_BACK"         ,rb_str_new2(wxART_GO_BACK));
    rb_define_const(mWx,"ART_GO_FORWARD"      ,rb_str_new2(wxART_GO_FORWARD));
    rb_define_const(mWx,"ART_GO_UP"           ,rb_str_new2(wxART_GO_UP));
    rb_define_const(mWx,"ART_GO_DOWN"         ,rb_str_new2(wxART_GO_DOWN));
    rb_define_const(mWx,"ART_GO_TO_PARENT"    ,rb_str_new2(wxART_GO_TO_PARENT));
    rb_define_const(mWx,"ART_GO_HOME"         ,rb_str_new2(wxART_GO_HOME));
    rb_define_const(mWx,"ART_FILE_OPEN"       ,rb_str_new2(wxART_FILE_OPEN));
    rb_define_const(mWx,"ART_PRINT"           ,rb_str_new2(wxART_PRINT));
    rb_define_const(mWx,"ART_HELP"            ,rb_str_new2(wxART_HELP));
    rb_define_const(mWx,"ART_TIP"             ,rb_str_new2(wxART_TIP));
    rb_define_const(mWx,"ART_REPORT_VIEW"     ,rb_str_new2(wxART_REPORT_VIEW));
    rb_define_const(mWx,"ART_LIST_VIEW"       ,rb_str_new2(wxART_LIST_VIEW));
    rb_define_const(mWx,"ART_NEW_DIR"         ,rb_str_new2(wxART_NEW_DIR));
    rb_define_const(mWx,"ART_FOLDER"          ,rb_str_new2(wxART_FOLDER));
    rb_define_const(mWx,"ART_GO_DIR_UP"       ,rb_str_new2(wxART_GO_DIR_UP));
    rb_define_const(mWx,"ART_EXECUTABLE_FILE" ,rb_str_new2(wxART_EXECUTABLE_FILE));
    rb_define_const(mWx,"ART_NORMAL_FILE"     ,rb_str_new2(wxART_NORMAL_FILE));
    rb_define_const(mWx,"ART_TICK_MARK"       ,rb_str_new2(wxART_TICK_MARK));
    rb_define_const(mWx,"ART_CROSS_MARK"      ,rb_str_new2(wxART_CROSS_MARK));

    rb_define_const(mWx,"FR_DOWN"      ,INT2NUM(wxFR_DOWN));
    rb_define_const(mWx,"FR_WHOLEWORD"      ,INT2NUM(wxFR_WHOLEWORD));
    rb_define_const(mWx,"FR_MATCHCASE"      ,INT2NUM(wxFR_MATCHCASE));
    rb_define_const(mWx,"FR_REPLACEDIALOG"      ,INT2NUM(wxFR_REPLACEDIALOG));
    rb_define_const(mWx,"FR_NOUPDOWN"      ,INT2NUM(wxFR_NOUPDOWN));
    rb_define_const(mWx,"FR_NOMATCHCASE"      ,INT2NUM(wxFR_NOMATCHCASE));
    rb_define_const(mWx,"FR_NOWHOLEWORD"      ,INT2NUM(wxFR_NOWHOLEWORD));

    rb_define_const(mWx,"EVT_COMMAND_FIND"      ,INT2NUM(wxEVT_COMMAND_FIND));
    rb_define_const(mWx,"EVT_COMMAND_FIND_NEXT"      ,INT2NUM(wxEVT_COMMAND_FIND_NEXT));
    rb_define_const(mWx,"EVT_COMMAND_FIND_REPLACE"      ,INT2NUM(wxEVT_COMMAND_FIND_REPLACE));
    rb_define_const(mWx,"EVT_COMMAND_FIND_REPLACE_ALL"      ,INT2NUM(wxEVT_COMMAND_FIND_REPLACE_ALL));
    rb_define_const(mWx,"EVT_COMMAND_FIND_CLOSE"      ,INT2NUM(wxEVT_COMMAND_FIND_CLOSE));

    rb_define_const(mWx,"FILE_SELECTOR_PROMPT_STR"      ,rb_str_new2(wxFileSelectorPromptStr));
    rb_define_const(mWx,"FILE_SELECTOR_DEFAULT_WILDCARD_STR"      ,rb_str_new2(wxFileSelectorDefaultWildcardStr));

    rb_define_const(mWx,"LC_VRULES" ,INT2NUM(wxLC_VRULES));
    rb_define_const(mWx,"LC_HRULES" ,INT2NUM(wxLC_HRULES));
    rb_define_const(mWx,"LC_ICON" ,INT2NUM(wxLC_ICON));
    rb_define_const(mWx,"LC_SMALL_ICON" ,INT2NUM(wxLC_SMALL_ICON));
    rb_define_const(mWx,"LC_LIST" ,INT2NUM(wxLC_LIST));
    rb_define_const(mWx,"LC_REPORT" ,INT2NUM(wxLC_REPORT));
    rb_define_const(mWx,"LC_ALIGN_TOP"  ,INT2NUM(wxLC_ALIGN_TOP));
    rb_define_const(mWx,"LC_ALIGN_LEFT" ,INT2NUM(wxLC_ALIGN_LEFT));
    rb_define_const(mWx,"LC_AUTOARRANGE"  ,INT2NUM(wxLC_AUTOARRANGE));
    rb_define_const(mWx,"LC_VIRTUAL"  ,INT2NUM(wxLC_VIRTUAL));
    rb_define_const(mWx,"LC_EDIT_LABELS"  ,INT2NUM(wxLC_EDIT_LABELS));
    rb_define_const(mWx,"LC_NO_HEADER"  ,INT2NUM(wxLC_NO_HEADER));
    rb_define_const(mWx,"LC_NO_SORT_HEADER" ,INT2NUM(wxLC_NO_SORT_HEADER));
    rb_define_const(mWx,"LC_SINGLE_SEL" ,INT2NUM(wxLC_SINGLE_SEL));
    rb_define_const(mWx,"LC_SORT_ASCENDING" ,INT2NUM(wxLC_SORT_ASCENDING));
    rb_define_const(mWx,"LC_SORT_DESCENDING"  ,INT2NUM(wxLC_SORT_DESCENDING));
    rb_define_const(mWx,"LC_MASK_TYPE"  ,INT2NUM(wxLC_MASK_TYPE));
    rb_define_const(mWx,"LC_MASK_ALIGN" ,INT2NUM(wxLC_MASK_ALIGN));
    rb_define_const(mWx,"LC_MASK_SORT"  ,INT2NUM(wxLC_MASK_SORT));
    rb_define_const(mWx,"LC_USER_TEXT"  ,INT2NUM(wxLC_USER_TEXT));
    rb_define_const(mWx,"LIST_MASK_STATE" ,INT2NUM(wxLIST_MASK_STATE));
    rb_define_const(mWx,"LIST_MASK_TEXT"  ,INT2NUM(wxLIST_MASK_TEXT));
    rb_define_const(mWx,"LIST_MASK_IMAGE" ,INT2NUM(wxLIST_MASK_IMAGE));
    rb_define_const(mWx,"LIST_MASK_DATA"  ,INT2NUM(wxLIST_MASK_DATA));
    rb_define_const(mWx,"LIST_SET_ITEM" ,INT2NUM(wxLIST_SET_ITEM));
    rb_define_const(mWx,"LIST_MASK_WIDTH" ,INT2NUM(wxLIST_MASK_WIDTH));
    rb_define_const(mWx,"LIST_MASK_FORMAT"  ,INT2NUM(wxLIST_MASK_FORMAT));
    rb_define_const(mWx,"LIST_STATE_DONTCARE" ,INT2NUM(wxLIST_STATE_DONTCARE));
    rb_define_const(mWx,"LIST_STATE_DROPHILITED"  ,INT2NUM(wxLIST_STATE_DROPHILITED));
    rb_define_const(mWx,"LIST_STATE_FOCUSED"  ,INT2NUM(wxLIST_STATE_FOCUSED));
    rb_define_const(mWx,"LIST_STATE_SELECTED" ,INT2NUM(wxLIST_STATE_SELECTED));
    rb_define_const(mWx,"LIST_STATE_CUT"  ,INT2NUM(wxLIST_STATE_CUT));
    rb_define_const(mWx,"LIST_HITTEST_ABOVE"  ,INT2NUM(wxLIST_HITTEST_ABOVE));
    rb_define_const(mWx,"LIST_HITTEST_BELOW"  ,INT2NUM(wxLIST_HITTEST_BELOW));
    rb_define_const(mWx,"LIST_HITTEST_NOWHERE"  ,INT2NUM(wxLIST_HITTEST_NOWHERE));
    rb_define_const(mWx,"LIST_HITTEST_ONITEMICON" ,INT2NUM(wxLIST_HITTEST_ONITEMICON));
    rb_define_const(mWx,"LIST_HITTEST_ONITEMLABEL"  ,INT2NUM(wxLIST_HITTEST_ONITEMLABEL));
    rb_define_const(mWx,"LIST_HITTEST_ONITEMRIGHT"  ,INT2NUM(wxLIST_HITTEST_ONITEMRIGHT));
    rb_define_const(mWx,"LIST_HITTEST_ONITEMSTATEICON"  ,INT2NUM(wxLIST_HITTEST_ONITEMSTATEICON));
    rb_define_const(mWx,"LIST_HITTEST_TOLEFT" ,INT2NUM(wxLIST_HITTEST_TOLEFT));
    rb_define_const(mWx,"LIST_HITTEST_TORIGHT"  ,INT2NUM(wxLIST_HITTEST_TORIGHT));
    rb_define_const(mWx,"LIST_HITTEST_ONITEM" ,INT2NUM(wxLIST_HITTEST_ONITEM));
    rb_define_const(mWx,"LIST_NEXT_ABOVE"                 ,INT2NUM(wxLIST_NEXT_ABOVE));
    rb_define_const(mWx,"LIST_NEXT_ALL"                   ,INT2NUM(wxLIST_NEXT_ALL));
    rb_define_const(mWx,"LIST_NEXT_BELOW"                 ,INT2NUM(wxLIST_NEXT_BELOW));
    rb_define_const(mWx,"LIST_NEXT_LEFT"                  ,INT2NUM(wxLIST_NEXT_LEFT));
    rb_define_const(mWx,"LIST_NEXT_RIGHT"                 ,INT2NUM(wxLIST_NEXT_RIGHT));
    rb_define_const(mWx,"LIST_ALIGN_DEFAULT"              ,INT2NUM(wxLIST_ALIGN_DEFAULT));
    rb_define_const(mWx,"LIST_ALIGN_LEFT"                 ,INT2NUM(wxLIST_ALIGN_LEFT));
    rb_define_const(mWx,"LIST_ALIGN_TOP"                  ,INT2NUM(wxLIST_ALIGN_TOP));
    rb_define_const(mWx,"LIST_ALIGN_SNAP_TO_GRID"         ,INT2NUM(wxLIST_ALIGN_SNAP_TO_GRID));
    rb_define_const(mWx,"LIST_FORMAT_LEFT"                ,INT2NUM(wxLIST_FORMAT_LEFT));
    rb_define_const(mWx,"LIST_FORMAT_RIGHT"               ,INT2NUM(wxLIST_FORMAT_RIGHT));
    rb_define_const(mWx,"LIST_FORMAT_CENTRE"              ,INT2NUM(wxLIST_FORMAT_CENTRE));
    rb_define_const(mWx,"LIST_FORMAT_CENTER"              ,INT2NUM(wxLIST_FORMAT_CENTER));
    rb_define_const(mWx,"LIST_AUTOSIZE"                   ,INT2NUM(wxLIST_AUTOSIZE));
    rb_define_const(mWx,"LIST_AUTOSIZE_USEHEADER"         ,INT2NUM(wxLIST_AUTOSIZE_USEHEADER));
    rb_define_const(mWx,"LIST_RECT_BOUNDS"                ,INT2NUM(wxLIST_RECT_BOUNDS));
    rb_define_const(mWx,"LIST_RECT_ICON"                  ,INT2NUM(wxLIST_RECT_ICON));
    rb_define_const(mWx,"LIST_RECT_LABEL"                 ,INT2NUM(wxLIST_RECT_LABEL));
    rb_define_const(mWx,"LIST_FIND_UP"                    ,INT2NUM(wxLIST_FIND_UP));
    rb_define_const(mWx,"LIST_FIND_DOWN"                  ,INT2NUM(wxLIST_FIND_DOWN));
    rb_define_const(mWx,"LIST_FIND_LEFT"                  ,INT2NUM(wxLIST_FIND_LEFT));
    rb_define_const(mWx,"LIST_FIND_RIGHT"                 ,INT2NUM(wxLIST_FIND_RIGHT));

    rb_define_const(mWx,"IMAGELIST_DRAW_NORMAL"      ,INT2NUM(wxIMAGELIST_DRAW_NORMAL));
    rb_define_const(mWx,"IMAGELIST_DRAW_TRANSPARENT" ,INT2NUM(wxIMAGELIST_DRAW_TRANSPARENT));
    rb_define_const(mWx,"IMAGELIST_DRAW_SELECTED"    ,INT2NUM(wxIMAGELIST_DRAW_SELECTED));
    rb_define_const(mWx,"IMAGELIST_DRAW_FOCUSED"     ,INT2NUM(wxIMAGELIST_DRAW_FOCUSED));
    rb_define_const(mWx,"IMAGE_LIST_NORMAL"          ,INT2NUM(wxIMAGE_LIST_NORMAL));
    rb_define_const(mWx,"IMAGE_LIST_SMALL"           ,INT2NUM(wxIMAGE_LIST_SMALL));
    rb_define_const(mWx,"IMAGE_LIST_STATE"           ,INT2NUM(wxIMAGE_LIST_STATE));

    rb_define_const(mWx,"NORMAL_FONT"           ,WxFont::init0(*wxNORMAL_FONT));
    rb_define_const(mWx,"SMALL_FONT"           ,WxFont::init0(*wxSMALL_FONT));
    rb_define_const(mWx,"ITALIC_FONT"           ,WxFont::init0(*wxITALIC_FONT));
    rb_define_const(mWx,"SWISS_FONT"           ,WxFont::init0(*wxSWISS_FONT));

    rb_define_const(mWx,"FONTFAMILY_DEFAULT"      ,INT2NUM(wxFONTFAMILY_DEFAULT));
    rb_define_const(mWx,"FONTFAMILY_DECORATIVE" ,INT2NUM(wxFONTFAMILY_DECORATIVE));
    rb_define_const(mWx,"FONTFAMILY_ROMAN"    ,INT2NUM(wxFONTFAMILY_ROMAN));
    rb_define_const(mWx,"FONTFAMILY_SCRIPT"     ,INT2NUM(wxFONTFAMILY_SCRIPT));
    rb_define_const(mWx,"FONTFAMILY_SWISS"          ,INT2NUM(wxFONTFAMILY_SWISS));
    rb_define_const(mWx,"FONTFAMILY_MODERN"           ,INT2NUM(wxFONTFAMILY_MODERN));
    rb_define_const(mWx,"FONTFAMILY_TELETYPE"           ,INT2NUM(wxFONTFAMILY_TELETYPE));
    rb_define_const(mWx,"FONTFAMILY_MAX"           ,INT2NUM(wxFONTFAMILY_MAX));
    rb_define_const(mWx,"FONTFAMILY_UNKNOWN"           ,INT2NUM(wxFONTFAMILY_UNKNOWN));
    rb_define_const(mWx,"FONTSTYLE_NORMAL"           ,INT2NUM(wxFONTSTYLE_NORMAL));
    rb_define_const(mWx,"FONTSTYLE_ITALIC"           ,INT2NUM(wxFONTSTYLE_ITALIC));
    rb_define_const(mWx,"FONTSTYLE_SLANT"           ,INT2NUM(wxFONTSTYLE_SLANT));
    rb_define_const(mWx,"FONTSTYLE_MAX"           ,INT2NUM(wxFONTSTYLE_MAX));
    rb_define_const(mWx,"FONTWEIGHT_NORMAL"           ,INT2NUM(wxFONTWEIGHT_NORMAL));
    rb_define_const(mWx,"FONTWEIGHT_LIGHT"           ,INT2NUM(wxFONTWEIGHT_LIGHT));
    rb_define_const(mWx,"FONTWEIGHT_BOLD"           ,INT2NUM(wxFONTWEIGHT_BOLD));
    rb_define_const(mWx,"FONTWEIGHT_MAX"           ,INT2NUM(wxFONTWEIGHT_MAX));

    rb_define_const(mWx,"URL_NOERR"           ,INT2NUM(wxURL_NOERR));
    rb_define_const(mWx,"URL_SNTXERR"           ,INT2NUM(wxURL_SNTXERR));
    rb_define_const(mWx,"URL_NOPROTO"           ,INT2NUM(wxURL_NOPROTO));
    rb_define_const(mWx,"URL_NOHOST"           ,INT2NUM(wxURL_NOHOST));
    rb_define_const(mWx,"URL_NOPATH"           ,INT2NUM(wxURL_NOPATH));
    rb_define_const(mWx,"URL_CONNERR"           ,INT2NUM(wxURL_CONNERR));
    rb_define_const(mWx,"URL_PROTOERR"           ,INT2NUM(wxURL_PROTOERR));

    rb_define_const(mWx,"TREE_ITEM_ICON_NORMAL"           ,INT2NUM(wxTreeItemIcon_Normal));
    rb_define_const(mWx,"TREE_ITEM_ICON_SELECTED"           ,INT2NUM(wxTreeItemIcon_Selected));
    rb_define_const(mWx,"TREE_ITEM_ICON_EXPANDED"           ,INT2NUM(wxTreeItemIcon_Expanded));
    rb_define_const(mWx,"TREE_ITEM_ICON_SELECTED_EXPANDED"           ,INT2NUM(wxTreeItemIcon_SelectedExpanded));
    rb_define_const(mWx,"TREE_ITEM_ICON_MAX"           ,INT2NUM(wxTreeItemIcon_Max));

    rb_define_const(mWx,"TR_NO_BUTTONS"           ,INT2NUM(wxTR_NO_BUTTONS));
    rb_define_const(mWx,"TR_HAS_BUTTONS"           ,INT2NUM(wxTR_HAS_BUTTONS));
    rb_define_const(mWx,"TR_TWIST_BUTTONS"           ,INT2NUM(wxTR_TWIST_BUTTONS));
    rb_define_const(mWx,"TR_NO_LINES"           ,INT2NUM(wxTR_NO_LINES));
    rb_define_const(mWx,"TR_LINES_AT_ROOT"           ,INT2NUM(wxTR_LINES_AT_ROOT));
    rb_define_const(mWx,"TR_MAC_BUTTONS"           ,INT2NUM(wxTR_MAC_BUTTONS));
    rb_define_const(mWx,"TR_AQUA_BUTTONS"           ,INT2NUM(wxTR_AQUA_BUTTONS));

    rb_define_const(mWx,"TR_SINGLE"           ,INT2NUM(wxTR_SINGLE));
    rb_define_const(mWx,"TR_MULTIPLE"           ,INT2NUM(wxTR_MULTIPLE));
    rb_define_const(mWx,"TR_EXTENDED"           ,INT2NUM(wxTR_EXTENDED));
    rb_define_const(mWx,"TR_FULL_ROW_HIGHLIGHT"           ,INT2NUM(wxTR_FULL_ROW_HIGHLIGHT));

    rb_define_const(mWx,"TR_EDIT_LABELS"           ,INT2NUM(wxTR_EDIT_LABELS));
    rb_define_const(mWx,"TR_ROW_LINES"           ,INT2NUM(wxTR_ROW_LINES));
    rb_define_const(mWx,"TR_HIDE_ROOT"           ,INT2NUM(wxTR_HIDE_ROOT));
    rb_define_const(mWx,"TR_HAS_VARIABLE_ROW_HEIGHT"           ,INT2NUM(wxTR_HAS_VARIABLE_ROW_HEIGHT));
    rb_define_const(mWx,"TR_DEFAULT_STYLE"           ,INT2NUM(wxTR_DEFAULT_STYLE));

    rb_define_const(mWx,"TREE_HITTEST_ABOVE"           ,INT2NUM(wxTREE_HITTEST_ABOVE));
    rb_define_const(mWx,"TREE_HITTEST_BELOW"           ,INT2NUM(wxTREE_HITTEST_BELOW));
    rb_define_const(mWx,"TREE_HITTEST_NOWHERE"           ,INT2NUM(wxTREE_HITTEST_NOWHERE));
    rb_define_const(mWx,"TREE_HITTEST_ONITEMBUTTON"           ,INT2NUM(wxTREE_HITTEST_ONITEMBUTTON));
    rb_define_const(mWx,"TREE_HITTEST_ONITEMICON"           ,INT2NUM(wxTREE_HITTEST_ONITEMICON));
    rb_define_const(mWx,"TREE_HITTEST_ONITEMINDENT"           ,INT2NUM(wxTREE_HITTEST_ONITEMINDENT));
    rb_define_const(mWx,"TREE_HITTEST_ONITEMLABEL"           ,INT2NUM(wxTREE_HITTEST_ONITEMLABEL));
    rb_define_const(mWx,"TREE_HITTEST_ONITEMRIGHT"           ,INT2NUM(wxTREE_HITTEST_ONITEMRIGHT));
    rb_define_const(mWx,"TREE_HITTEST_ONITEMSTATEICON"           ,INT2NUM(wxTREE_HITTEST_ONITEMSTATEICON));
    rb_define_const(mWx,"TREE_HITTEST_TOLEFT"           ,INT2NUM(wxTREE_HITTEST_TOLEFT));

    rb_define_const(mWx,"TREE_HITTEST_TORIGHT"           ,INT2NUM(wxTREE_HITTEST_TORIGHT));
    rb_define_const(mWx,"TREE_HITTEST_ONITEMUPPERPART"           ,INT2NUM(wxTREE_HITTEST_ONITEMUPPERPART));
    rb_define_const(mWx,"TREE_HITTEST_ONITEMLOWERPART"           ,INT2NUM(wxTREE_HITTEST_ONITEMLOWERPART));
    rb_define_const(mWx,"TREE_HITTEST_ONITEM"           ,INT2NUM(wxTREE_HITTEST_ONITEM));
    
    rb_define_const(mWx,"DRAG_ERROR", INT2NUM(wxDragError));
    rb_define_const(mWx,"DRAG_NONE", INT2NUM(wxDragNone));
    rb_define_const(mWx,"DRAG_COPY", INT2NUM(wxDragCopy));
    rb_define_const(mWx,"DRAG_MOVE", INT2NUM(wxDragMove));
    rb_define_const(mWx,"DRAG_CANCEL", INT2NUM(wxDragCancel));
    
    rb_define_const(mWx,"DRAG_COPY_ONLY", INT2NUM(wxDrag_CopyOnly));
    rb_define_const(mWx,"DRAG_ALLOW_MOVE", INT2NUM(wxDrag_AllowMove));
    rb_define_const(mWx,"DRAG_DEFAULT_MOVE", INT2NUM(wxDrag_DefaultMove));
    

}
